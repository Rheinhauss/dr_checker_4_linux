{"all_contexts":[
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %5 = alloca i8*, align 8"}],
"warnings":[{"warn_data": {"at_line": 498, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "memset(&einj, 0, sizeof(einj));", "inst_trace": [], "at_file": "drivers/pci/pcie/aer_inject.c", "by": "TaintedSizeDetector says:", "at_func": "aer_inject_write"}, "warn_no": 1}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %5 = alloca i8*, align 8"}, {"lineno": 502, "file": "drivers/pci/pcie/aer_inject.c", "instr": "ret = aer_inject(&einj);"}],
"warnings":[{"warn_data": {"at_line": 374, "warn_str": "Trying to use a global variable without locking.", "at": "if (aer_mask_override) {", "inst_trace": [{"instr_func": "aer_inject_write", "instr_loc": -1, "instr": "  %5 = alloca i8*, align 8"}, {"instr_func": "aer_inject_write", "instr_loc": 502, "instr_file": "drivers/pci/pcie/aer_inject.c", "instr": "ret = aer_inject(&einj);"}], "at_file": "drivers/pci/pcie/aer_inject.c", "by": "GlobalVariableRaceDetector says:", "at_func": "aer_inject"}, "warn_no": 1}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %5 = alloca i8*, align 8"}, {"lineno": 502, "file": "drivers/pci/pcie/aer_inject.c", "instr": "ret = aer_inject(&einj);"}, {"lineno": 363, "file": "drivers/pci/pcie/aer_inject.c", "instr": "err_alloc =  kzalloc(sizeof(struct aer_error), GFP_KERNEL);"}],
"warnings":[{"warn_data": {"at_line": 557, "warn_str": "Trying to use a global variable without locking.", "at": "  %234 = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %233, !dbg !5563", "inst_trace": [{"instr_func": "aer_inject_write", "instr_loc": -1, "instr": "  %5 = alloca i8*, align 8"}, {"instr_func": "aer_inject_write", "instr_loc": 502, "instr_file": "drivers/pci/pcie/aer_inject.c", "instr": "ret = aer_inject(&einj);"}, {"instr_func": "aer_inject", "instr_loc": 363, "instr_file": "drivers/pci/pcie/aer_inject.c", "instr": "err_alloc =  kzalloc(sizeof(struct aer_error), GFP_KERNEL);"}], "at_file": "./include/linux/slab.h", "by": "GlobalVariableRaceDetector says:", "at_func": "kzalloc"}, "warn_no": 1}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %5 = alloca i8*, align 8"}, {"lineno": 502, "file": "drivers/pci/pcie/aer_inject.c", "instr": "ret = aer_inject(&einj);"}, {"lineno": 418, "file": "drivers/pci/pcie/aer_inject.c", "instr": "rperr = __find_aer_error_by_dev(rpdev);"}, {"lineno": 109, "file": "drivers/pci/pcie/aer_inject.c", "instr": "return __find_aer_error(domain, dev->bus->number, dev->devfn);"}],
"warnings":[{"warn_data": {"at_line": 95, "warn_str": "Loop is bounded by a tainted value.", "at": "if (domain == err->domain &&", "inst_trace": [{"instr_func": "aer_inject_write", "instr_loc": 498, "instr_file": "drivers/pci/pcie/aer_inject.c", "instr": "memset(&einj, 0, sizeof(einj));"}, {"instr_func": "__find_aer_error", "instr_loc": 97, "instr_file": "drivers/pci/pcie/aer_inject.c", "instr": "devfn == err->devfn)"}, {"instr_func": "__find_aer_error", "instr_loc": 97, "instr_file": "drivers/pci/pcie/aer_inject.c", "instr": "devfn == err->devfn)"}], "at_file": "drivers/pci/pcie/aer_inject.c", "by": "TaintedLoopBoundDetector says:", "at_func": "__find_aer_error"}, "warn_no": 1}]}]}