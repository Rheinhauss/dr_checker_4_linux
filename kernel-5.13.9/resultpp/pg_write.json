{"all_contexts":[
{"num_warnings": 7,
"context":[{"lineno": -1, "instr": "  %5 = alloca i8*, align 8"}],
"warnings":[{"warn_data": {"at_line": 594, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "if ((count - hs) > PG_MAX_DATA)", "inst_trace": [{"instr_func": "pg_write", "instr_loc": -1, "instr": "  %5 = alloca i8*, align 8"}, {"instr_func": "pg_write", "instr_loc": 577, "instr_file": "drivers/block/paride/pg.c", "instr": "{"}, {"instr_func": "pg_write", "instr_loc": 594, "instr_file": "drivers/block/paride/pg.c", "instr": "if ((count - hs) > PG_MAX_DATA)"}], "at_file": "drivers/block/paride/pg.c", "by": "IntegerOverflowDetector says:", "at_func": "pg_write"}, "warn_no": 1},
{"warn_data": {"at_line": 587, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "if (copy_from_user(&hdr, buf, hs))", "inst_trace": [], "at_file": "drivers/block/paride/pg.c", "by": "TaintedSizeDetector says:", "at_func": "pg_write"}, "warn_no": 2},
{"warn_data": {"at_line": 608, "warn_str": "Trying to use a global variable without locking.", "at": "dev->start = jiffies;", "inst_trace": [{"instr_func": "pg_write", "instr_loc": -1, "instr": "  %5 = alloca i8*, align 8"}], "at_file": "drivers/block/paride/pg.c", "by": "GlobalVariableRaceDetector says:", "at_func": "pg_write"}, "warn_no": 3},
{"warn_data": {"at_line": 609, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "dev->timeout = hdr.timeout * HZ + HZ / 2 + jiffies;", "inst_trace": [{"instr_func": "pg_write", "instr_loc": 587, "instr_file": "drivers/block/paride/pg.c", "instr": "if (copy_from_user(&hdr, buf, hs))"}, {"instr_func": "pg_write", "instr_loc": 609, "instr_file": "drivers/block/paride/pg.c", "instr": "dev->timeout = hdr.timeout * HZ + HZ / 2 + jiffies;"}, {"instr_func": "pg_write", "instr_loc": 609, "instr_file": "drivers/block/paride/pg.c", "instr": "dev->timeout = hdr.timeout * HZ + HZ / 2 + jiffies;"}], "at_file": "drivers/block/paride/pg.c", "by": "IntegerOverflowDetector says:", "at_func": "pg_write"}, "warn_no": 4},
{"warn_data": {"at_line": 609, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "dev->timeout = hdr.timeout * HZ + HZ / 2 + jiffies;", "inst_trace": [{"instr_func": "pg_write", "instr_loc": 587, "instr_file": "drivers/block/paride/pg.c", "instr": "if (copy_from_user(&hdr, buf, hs))"}, {"instr_func": "pg_write", "instr_loc": 609, "instr_file": "drivers/block/paride/pg.c", "instr": "dev->timeout = hdr.timeout * HZ + HZ / 2 + jiffies;"}, {"instr_func": "pg_write", "instr_loc": 609, "instr_file": "drivers/block/paride/pg.c", "instr": "dev->timeout = hdr.timeout * HZ + HZ / 2 + jiffies;"}, {"instr_func": "pg_write", "instr_loc": 609, "instr_file": "drivers/block/paride/pg.c", "instr": "dev->timeout = hdr.timeout * HZ + HZ / 2 + jiffies;"}], "at_file": "drivers/block/paride/pg.c", "by": "IntegerOverflowDetector says:", "at_func": "pg_write"}, "warn_no": 5},
{"warn_data": {"at_line": 619, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "if (copy_from_user(dev->bufptr, buf + hs, count - hs))", "inst_trace": [{"instr_func": "pg_write", "instr_loc": -1, "instr": "  %5 = alloca i8*, align 8"}, {"instr_func": "pg_write", "instr_loc": 577, "instr_file": "drivers/block/paride/pg.c", "instr": "{"}, {"instr_func": "pg_write", "instr_loc": 619, "instr_file": "drivers/block/paride/pg.c", "instr": "if (copy_from_user(dev->bufptr, buf + hs, count - hs))"}], "at_file": "drivers/block/paride/pg.c", "by": "IntegerOverflowDetector says:", "at_func": "pg_write"}, "warn_no": 6},
{"warn_data": {"at_line": 617, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "dev->busy = 1;", "inst_trace": [], "at_file": "drivers/block/paride/pg.c", "by": "TaintedSizeDetector says:", "at_func": "pg_write"}, "warn_no": 7}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %5 = alloca i8*, align 8"}, {"lineno": 611, "file": "drivers/block/paride/pg.c", "instr": "if (pg_command(dev, hdr.packet, hdr.dlen, jiffies + PG_TMO)) {"}, {"lineno": 328, "file": "drivers/block/paride/pg.c", "instr": "if (pg_wait(dev, STAT_BUSY | STAT_DRQ, 0, tmo, \"before command\"))"}],
"warnings":[{"warn_data": {"at_line": 0, "warn_str": "Trying to use a global variable without locking.", "at": "", "inst_trace": [{"instr_func": "pg_write", "instr_loc": -1, "instr": "  %5 = alloca i8*, align 8"}, {"instr_func": "pg_write", "instr_loc": 611, "instr_file": "drivers/block/paride/pg.c", "instr": "if (pg_command(dev, hdr.packet, hdr.dlen, jiffies + PG_TMO)) {"}, {"instr_func": "pg_command", "instr_loc": 328, "instr_file": "drivers/block/paride/pg.c", "instr": "if (pg_wait(dev, STAT_BUSY | STAT_DRQ, 0, tmo, \"before command\"))"}], "at_file": "drivers/block/paride/pg.c", "by": "GlobalVariableRaceDetector says:", "at_func": "pg_wait"}, "warn_no": 1}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %5 = alloca i8*, align 8"}, {"lineno": 600, "file": "drivers/block/paride/pg.c", "instr": "if (pg_reset(dev))"}],
"warnings":[{"warn_data": {"at_line": 409, "warn_str": "Trying to use a global variable without locking.", "at": "if (verbose) {", "inst_trace": [{"instr_func": "pg_write", "instr_loc": -1, "instr": "  %5 = alloca i8*, align 8"}, {"instr_func": "pg_write", "instr_loc": 600, "instr_file": "drivers/block/paride/pg.c", "instr": "if (pg_reset(dev))"}], "at_file": "drivers/block/paride/pg.c", "by": "GlobalVariableRaceDetector says:", "at_func": "pg_reset"}, "warn_no": 1}]}]}