{"all_contexts":[
{"num_warnings": 5,
"context":[{"lineno": -1, "instr": "  %5 = alloca %struct.trace_buffer*, align 8"}],
"warnings":[{"warn_data": {"at_line": 7067, "warn_str": "Trying to use a global variable without locking.", "at": "if (tracing_disabled)", "inst_trace": [{"instr_func": "tracing_mark_raw_write", "instr_loc": -1, "instr": "  %5 = alloca %struct.trace_buffer*, align 8"}], "at_file": "kernel/trace/trace.c", "by": "GlobalVariableRaceDetector says:", "at_func": "tracing_mark_raw_write"}, "warn_no": 1},
{"warn_data": {"at_line": 7082, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "size = sizeof(*entry) + cnt;", "inst_trace": [{"instr_func": "tracing_mark_raw_write", "instr_loc": -1, "instr": "  %5 = alloca %struct.trace_buffer*, align 8"}, {"instr_func": "tracing_mark_raw_write", "instr_loc": 7056, "instr_file": "kernel/trace/trace.c", "instr": "{"}, {"instr_func": "tracing_mark_raw_write", "instr_loc": 7082, "instr_file": "kernel/trace/trace.c", "instr": "size = sizeof(*entry) + cnt;"}], "at_file": "kernel/trace/trace.c", "by": "IntegerOverflowDetector says:", "at_func": "tracing_mark_raw_write"}, "warn_no": 2},
{"warn_data": {"at_line": 7084, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "size += FAULT_SIZE_ID - cnt;", "inst_trace": [{"instr_func": "tracing_mark_raw_write", "instr_loc": -1, "instr": "  %5 = alloca %struct.trace_buffer*, align 8"}, {"instr_func": "tracing_mark_raw_write", "instr_loc": 7056, "instr_file": "kernel/trace/trace.c", "instr": "{"}, {"instr_func": "tracing_mark_raw_write", "instr_loc": 7084, "instr_file": "kernel/trace/trace.c", "instr": "size += FAULT_SIZE_ID - cnt;"}], "at_file": "kernel/trace/trace.c", "by": "IntegerOverflowDetector says:", "at_func": "tracing_mark_raw_write"}, "warn_no": 3},
{"warn_data": {"at_line": 7084, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "size += FAULT_SIZE_ID - cnt;", "inst_trace": [{"instr_func": "tracing_mark_raw_write", "instr_loc": -1, "instr": "  %5 = alloca %struct.trace_buffer*, align 8"}, {"instr_func": "tracing_mark_raw_write", "instr_loc": 7056, "instr_file": "kernel/trace/trace.c", "instr": "{"}, {"instr_func": "tracing_mark_raw_write", "instr_loc": 7084, "instr_file": "kernel/trace/trace.c", "instr": "size += FAULT_SIZE_ID - cnt;"}, {"instr_func": "tracing_mark_raw_write", "instr_loc": 7084, "instr_file": "kernel/trace/trace.c", "instr": "size += FAULT_SIZE_ID - cnt;"}], "at_file": "kernel/trace/trace.c", "by": "IntegerOverflowDetector says:", "at_func": "tracing_mark_raw_write"}, "warn_no": 4},
{"warn_data": {"at_line": 7106, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "*fpos += written;", "inst_trace": [{"instr_func": "tracing_mark_raw_write", "instr_loc": -1, "instr": "  %5 = alloca %struct.trace_buffer*, align 8"}, {"instr_func": "tracing_mark_raw_write", "instr_loc": 7056, "instr_file": "kernel/trace/trace.c", "instr": "{"}, {"instr_func": "tracing_mark_raw_write", "instr_loc": 7101, "instr_file": "kernel/trace/trace.c", "instr": "written = cnt;"}, {"instr_func": "tracing_mark_raw_write", "instr_loc": 7101, "instr_file": "kernel/trace/trace.c", "instr": "written = cnt;"}, {"instr_func": "tracing_mark_raw_write", "instr_loc": 7106, "instr_file": "kernel/trace/trace.c", "instr": "*fpos += written;"}], "at_file": "kernel/trace/trace.c", "by": "IntegerOverflowDetector says:", "at_func": "tracing_mark_raw_write"}, "warn_no": 5}]}]}