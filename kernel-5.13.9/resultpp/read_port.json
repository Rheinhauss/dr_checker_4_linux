{"all_contexts":[
{"num_warnings": 2,
"context":[{"lineno": -1, "instr": "  %5 = alloca i64, align 8"}],
"warnings":[{"warn_data": {"at_line": 414, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "while (count-- > 0 && i < 65536) {", "inst_trace": [{"instr_func": "read_port", "instr_loc": -1, "instr": "  %5 = alloca i64, align 8"}, {"instr_func": "read_port", "instr_loc": 408, "instr_file": "drivers/char/mem.c", "instr": "{"}, {"instr_func": "read_port", "instr_loc": 414, "instr_file": "drivers/char/mem.c", "instr": "while (count-- > 0 && i < 65536) {"}], "at_file": "drivers/char/mem.c", "by": "IntegerOverflowDetector says:", "at_func": "read_port"}, "warn_no": 1},
{"warn_data": {"at_line": 421, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "return tmp-buf;", "inst_trace": [{"instr_func": "read_port", "instr_loc": -1, "instr": "  %5 = alloca i64, align 8"}, {"instr_func": "read_port", "instr_loc": 408, "instr_file": "drivers/char/mem.c", "instr": "{"}, {"instr_func": "read_port", "instr_loc": 410, "instr_file": "drivers/char/mem.c", "instr": "char __user *tmp = buf;"}, {"instr_func": "read_port", "instr_loc": 410, "instr_file": "drivers/char/mem.c", "instr": "char __user *tmp = buf;"}, {"instr_func": "read_port", "instr_loc": 421, "instr_file": "drivers/char/mem.c", "instr": "return tmp-buf;"}], "at_file": "drivers/char/mem.c", "by": "IntegerOverflowDetector says:", "at_func": "read_port"}, "warn_no": 2}]},
{"num_warnings": 2,
"context":[{"lineno": -1, "instr": "  %5 = alloca i64, align 8"}, {"lineno": 412, "file": "drivers/char/mem.c", "instr": "if (!access_ok(buf, count))"}],
"warnings":[{"warn_data": {"at_line": 32, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "  %24 = add i64 %23, %22, !dbg !7484", "inst_trace": [{"instr_func": "read_port", "instr_loc": -1, "instr": "  %5 = alloca i64, align 8"}, {"instr_func": "read_port", "instr_loc": 408, "instr_file": "drivers/char/mem.c", "instr": "{"}, {"instr_func": "read_port", "instr_loc": 412, "instr_file": "drivers/char/mem.c", "instr": "if (!access_ok(buf, count))"}, {"instr_func": "read_port", "instr_loc": 412, "instr_file": "drivers/char/mem.c", "instr": "if (!access_ok(buf, count))"}, {"instr_func": "__chk_range_not_ok", "instr_loc": 20, "instr_file": "./arch/x86/include/asm/uaccess.h", "instr": "  store i64 %1, i64* %6, align 8"}, {"instr_func": "__chk_range_not_ok", "instr_loc": 32, "instr_file": "./arch/x86/include/asm/uaccess.h", "instr": "  %22 = load i64, i64* %6, align 8, !dbg !7483"}], "at_file": "./arch/x86/include/asm/uaccess.h", "by": "IntegerOverflowDetector says:", "at_func": "__chk_range_not_ok"}, "warn_no": 1},
{"warn_data": {"at_line": 29, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "  %14 = sub i64 %12, %13, !dbg !7481", "inst_trace": [{"instr_func": "read_port", "instr_loc": -1, "instr": "  %5 = alloca i64, align 8"}, {"instr_func": "read_port", "instr_loc": 408, "instr_file": "drivers/char/mem.c", "instr": "{"}, {"instr_func": "read_port", "instr_loc": 412, "instr_file": "drivers/char/mem.c", "instr": "if (!access_ok(buf, count))"}, {"instr_func": "read_port", "instr_loc": 412, "instr_file": "drivers/char/mem.c", "instr": "if (!access_ok(buf, count))"}, {"instr_func": "__chk_range_not_ok", "instr_loc": 20, "instr_file": "./arch/x86/include/asm/uaccess.h", "instr": "  store i64 %1, i64* %6, align 8"}, {"instr_func": "__chk_range_not_ok", "instr_loc": 29, "instr_file": "./arch/x86/include/asm/uaccess.h", "instr": "  %13 = load i64, i64* %6, align 8, !dbg !7481"}], "at_file": "./arch/x86/include/asm/uaccess.h", "by": "IntegerOverflowDetector says:", "at_func": "__chk_range_not_ok"}, "warn_no": 2}]}]}