{"all_contexts":[
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %4 = alloca i64, align 8"}, {"lineno": 1711, "file": "kernel/seccomp.c", "instr": "return seccomp_notify_id_valid(filter, buf);"}],
"warnings":[{"warn_data": {"at_line": 1561, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "{", "inst_trace": [], "at_file": "kernel/seccomp.c", "by": "TaintedSizeDetector says:", "at_func": "seccomp_notify_id_valid"}, "warn_no": 1}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %4 = alloca i64, align 8"}, {"lineno": 1708, "file": "kernel/seccomp.c", "instr": "return seccomp_notify_send(filter, buf);"}],
"warnings":[{"warn_data": {"at_line": 1517, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "{", "inst_trace": [], "at_file": "kernel/seccomp.c", "by": "TaintedSizeDetector says:", "at_func": "seccomp_notify_send"}, "warn_no": 1}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %4 = alloca i64, align 8"}, {"lineno": 1711, "file": "kernel/seccomp.c", "instr": "return seccomp_notify_id_valid(filter, buf);"}, {"lineno": 1573, "file": "kernel/seccomp.c", "instr": "knotif = find_notification(filter, id);"}],
"warnings":[{"warn_data": {"at_line": 1438, "warn_str": "Loop is bounded by a tainted value.", "at": "if (cur->id == id)", "inst_trace": [{"instr_func": "seccomp_notify_id_valid", "instr_loc": 1561, "instr_file": "kernel/seccomp.c", "instr": "{"}, {"instr_func": "seccomp_notify_id_valid", "instr_loc": 1573, "instr_file": "kernel/seccomp.c", "instr": "knotif = find_notification(filter, id);"}, {"instr_func": "seccomp_notify_id_valid", "instr_loc": 1573, "instr_file": "kernel/seccomp.c", "instr": "knotif = find_notification(filter, id);"}, {"instr_func": "find_notification", "instr_loc": 1432, "instr_file": "kernel/seccomp.c", "instr": "{"}, {"instr_func": "find_notification", "instr_loc": 1438, "instr_file": "kernel/seccomp.c", "instr": "if (cur->id == id)"}, {"instr_func": "find_notification", "instr_loc": 1438, "instr_file": "kernel/seccomp.c", "instr": "if (cur->id == id)"}], "at_file": "kernel/seccomp.c", "by": "TaintedLoopBoundDetector says:", "at_func": "find_notification"}, "warn_no": 1}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %4 = alloca i64, align 8"}, {"lineno": 1706, "file": "kernel/seccomp.c", "instr": "return seccomp_notify_recv(filter, buf);"}],
"warnings":[{"warn_data": {"at_line": 1494, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "if (ret == 0 && copy_to_user(buf, &unotif, sizeof(unotif))) {", "inst_trace": [], "at_file": "kernel/seccomp.c", "by": "TaintedSizeDetector says:", "at_func": "seccomp_notify_recv"}, "warn_no": 1}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %4 = alloca i64, align 8"}, {"lineno": 1708, "file": "kernel/seccomp.c", "instr": "return seccomp_notify_send(filter, buf);"}, {"lineno": 1536, "file": "kernel/seccomp.c", "instr": "knotif = find_notification(filter, resp.id);"}],
"warnings":[{"warn_data": {"at_line": 1438, "warn_str": "Loop is bounded by a tainted value.", "at": "if (cur->id == id)", "inst_trace": [{"instr_func": "seccomp_notify_send", "instr_loc": 1517, "instr_file": "kernel/seccomp.c", "instr": "{"}, {"instr_func": "seccomp_notify_send", "instr_loc": 1536, "instr_file": "kernel/seccomp.c", "instr": "knotif = find_notification(filter, resp.id);"}, {"instr_func": "seccomp_notify_send", "instr_loc": 1536, "instr_file": "kernel/seccomp.c", "instr": "knotif = find_notification(filter, resp.id);"}, {"instr_func": "find_notification", "instr_loc": 1432, "instr_file": "kernel/seccomp.c", "instr": "{"}, {"instr_func": "find_notification", "instr_loc": 1438, "instr_file": "kernel/seccomp.c", "instr": "if (cur->id == id)"}, {"instr_func": "find_notification", "instr_loc": 1438, "instr_file": "kernel/seccomp.c", "instr": "if (cur->id == id)"}], "at_file": "kernel/seccomp.c", "by": "TaintedLoopBoundDetector says:", "at_func": "find_notification"}, "warn_no": 1}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %4 = alloca i64, align 8"}, {"lineno": 1718, "file": "kernel/seccomp.c", "instr": "return seccomp_notify_addfd(filter, buf, _IOC_SIZE(cmd));"}],
"warnings":[{"warn_data": {"at_line": 1598, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "ret = copy_struct_from_user(&addfd, sizeof(addfd), uaddfd, size);", "inst_trace": [], "at_file": "kernel/seccomp.c", "by": "TaintedSizeDetector says:", "at_func": "seccomp_notify_addfd"}, "warn_no": 1}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %4 = alloca i64, align 8"}, {"lineno": 1718, "file": "kernel/seccomp.c", "instr": "return seccomp_notify_addfd(filter, buf, _IOC_SIZE(cmd));"}, {"lineno": 1625, "file": "kernel/seccomp.c", "instr": "knotif = find_notification(filter, addfd.id);"}],
"warnings":[{"warn_data": {"at_line": 1438, "warn_str": "Loop is bounded by a tainted value.", "at": "if (cur->id == id)", "inst_trace": [{"instr_func": "seccomp_notify_addfd", "instr_loc": 1598, "instr_file": "kernel/seccomp.c", "instr": "ret = copy_struct_from_user(&addfd, sizeof(addfd), uaddfd, size);"}, {"instr_func": "seccomp_notify_addfd", "instr_loc": 1625, "instr_file": "kernel/seccomp.c", "instr": "knotif = find_notification(filter, addfd.id);"}, {"instr_func": "seccomp_notify_addfd", "instr_loc": 1625, "instr_file": "kernel/seccomp.c", "instr": "knotif = find_notification(filter, addfd.id);"}, {"instr_func": "find_notification", "instr_loc": 1432, "instr_file": "kernel/seccomp.c", "instr": "{"}, {"instr_func": "find_notification", "instr_loc": 1438, "instr_file": "kernel/seccomp.c", "instr": "if (cur->id == id)"}, {"instr_func": "find_notification", "instr_loc": 1438, "instr_file": "kernel/seccomp.c", "instr": "if (cur->id == id)"}], "at_file": "kernel/seccomp.c", "by": "TaintedLoopBoundDetector says:", "at_func": "find_notification"}, "warn_no": 1}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %4 = alloca i64, align 8"}, {"lineno": 1718, "file": "kernel/seccomp.c", "instr": "return seccomp_notify_addfd(filter, buf, _IOC_SIZE(cmd));"}, {"lineno": 1687, "file": "kernel/seccomp.c", "instr": "list_del(&kaddfd.list);"}, {"lineno": 146, "file": "./include/linux/list.h", "instr": "  call void @__list_del_entry(%struct.list_head* %3) #12, !dbg !11601"}, {"lineno": 135, "file": "./include/linux/list.h", "instr": "  call void @__list_del(%struct.list_head* %9, %struct.list_head* %12) #12, !dbg !11609"}],
"warnings":[{"warn_data": {"at_line": 113, "warn_str": "Trying to write to a user pointer.", "at": "  store volatile %struct.list_head* %12, %struct.list_head** %14, align 8, !dbg !11611", "inst_trace": [{"instr_func": "seccomp_notify_addfd", "instr_loc": 1598, "instr_file": "kernel/seccomp.c", "instr": "ret = copy_struct_from_user(&addfd, sizeof(addfd), uaddfd, size);"}, {"instr_func": "seccomp_notify_addfd", "instr_loc": 1618, "instr_file": "kernel/seccomp.c", "instr": "kaddfd.fd = addfd.newfd;"}, {"instr_func": "seccomp_notify_addfd", "instr_loc": 1618, "instr_file": "kernel/seccomp.c", "instr": "kaddfd.fd = addfd.newfd;"}, {"instr_func": "__list_del_entry", "instr_loc": 135, "instr_file": "./include/linux/list.h", "instr": "  %9 = load %struct.list_head*, %struct.list_head** %8, align 8, !dbg !11606"}, {"instr_func": "__list_del_entry", "instr_loc": 135, "instr_file": "./include/linux/list.h", "instr": "  call void @__list_del(%struct.list_head* %9, %struct.list_head* %12) #12, !dbg !11609"}, {"instr_func": "__list_del", "instr_loc": 111, "instr_file": "./include/linux/list.h", "instr": "  store %struct.list_head* %0, %struct.list_head** %3, align 8"}, {"instr_func": "__list_del", "instr_loc": 113, "instr_file": "./include/linux/list.h", "instr": "  %13 = load %struct.list_head*, %struct.list_head** %3, align 8, !dbg !11611"}, {"instr_func": "__list_del", "instr_loc": 113, "instr_file": "./include/linux/list.h", "instr": "  %14 = getelementptr inbounds %struct.list_head, %struct.list_head* %13, i32 0, i32 0, !dbg !11611"}], "at_file": "./include/linux/list.h", "by": "TaintedPointerDereferenceChecker says:", "at_func": "__list_del"}, "warn_no": 1}]}]}