{"all_contexts":[
{"num_warnings": 9,
"context":[{"lineno": -1, "instr": "  %5 = alloca i8*, align 8"}],
"warnings":[{"warn_data": {"at_line": 949, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "count -= b;", "inst_trace": [{"instr_func": "pt_write", "instr_loc": -1, "instr": "  %5 = alloca i8*, align 8"}, {"instr_func": "pt_write", "instr_loc": 863, "instr_file": "drivers/block/paride/pt.c", "instr": "{"}, {"instr_func": "pt_write", "instr_loc": 949, "instr_file": "drivers/block/paride/pt.c", "instr": "count -= b;"}], "at_file": "drivers/block/paride/pt.c", "by": "IntegerOverflowDetector says:", "at_func": "pt_write"}, "warn_no": 1},
{"warn_data": {"at_line": 911, "warn_str": "Trying to use a global variable without locking.", "at": "DBMSG(\"write DRQ\"), NULL);", "inst_trace": [{"instr_func": "pt_write", "instr_loc": -1, "instr": "  %5 = alloca i8*, align 8"}], "at_file": "drivers/block/paride/pt.c", "by": "GlobalVariableRaceDetector says:", "at_func": "pt_write"}, "warn_no": 2},
{"warn_data": {"at_line": 893, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "b = (n - 1 + tape->bs) / tape->bs;", "inst_trace": [{"instr_func": "pt_write", "instr_loc": -1, "instr": "  %5 = alloca i8*, align 8"}, {"instr_func": "pt_write", "instr_loc": 863, "instr_file": "drivers/block/paride/pt.c", "instr": "{"}, {"instr_func": "pt_write", "instr_loc": 942, "instr_file": "drivers/block/paride/pt.c", "instr": "b = count;"}, {"instr_func": "pt_write", "instr_loc": 942, "instr_file": "drivers/block/paride/pt.c", "instr": "b = count;"}, {"instr_func": "pt_write", "instr_loc": 942, "instr_file": "drivers/block/paride/pt.c", "instr": "b = count;"}, {"instr_func": "pt_write", "instr_loc": 894, "instr_file": "drivers/block/paride/pt.c", "instr": "n = b * tape->bs;\t/* rounded up to even block */"}, {"instr_func": "pt_write", "instr_loc": 894, "instr_file": "drivers/block/paride/pt.c", "instr": "n = b * tape->bs;\t/* rounded up to even block */"}, {"instr_func": "pt_write", "instr_loc": 894, "instr_file": "drivers/block/paride/pt.c", "instr": "n = b * tape->bs;\t/* rounded up to even block */"}, {"instr_func": "pt_write", "instr_loc": 893, "instr_file": "drivers/block/paride/pt.c", "instr": "b = (n - 1 + tape->bs) / tape->bs;"}], "at_file": "drivers/block/paride/pt.c", "by": "IntegerOverflowDetector says:", "at_func": "pt_write"}, "warn_no": 3},
{"warn_data": {"at_line": 893, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "b = (n - 1 + tape->bs) / tape->bs;", "inst_trace": [{"instr_func": "pt_write", "instr_loc": -1, "instr": "  %5 = alloca i8*, align 8"}, {"instr_func": "pt_write", "instr_loc": 863, "instr_file": "drivers/block/paride/pt.c", "instr": "{"}, {"instr_func": "pt_write", "instr_loc": 942, "instr_file": "drivers/block/paride/pt.c", "instr": "b = count;"}, {"instr_func": "pt_write", "instr_loc": 942, "instr_file": "drivers/block/paride/pt.c", "instr": "b = count;"}, {"instr_func": "pt_write", "instr_loc": 942, "instr_file": "drivers/block/paride/pt.c", "instr": "b = count;"}, {"instr_func": "pt_write", "instr_loc": 894, "instr_file": "drivers/block/paride/pt.c", "instr": "n = b * tape->bs;\t/* rounded up to even block */"}, {"instr_func": "pt_write", "instr_loc": 894, "instr_file": "drivers/block/paride/pt.c", "instr": "n = b * tape->bs;\t/* rounded up to even block */"}, {"instr_func": "pt_write", "instr_loc": 894, "instr_file": "drivers/block/paride/pt.c", "instr": "n = b * tape->bs;\t/* rounded up to even block */"}, {"instr_func": "pt_write", "instr_loc": 893, "instr_file": "drivers/block/paride/pt.c", "instr": "b = (n - 1 + tape->bs) / tape->bs;"}, {"instr_func": "pt_write", "instr_loc": 893, "instr_file": "drivers/block/paride/pt.c", "instr": "b = (n - 1 + tape->bs) / tape->bs;"}], "at_file": "drivers/block/paride/pt.c", "by": "IntegerOverflowDetector says:", "at_func": "pt_write"}, "warn_no": 4},
{"warn_data": {"at_line": 885, "warn_str": "Loop is bounded by a tainted value.", "at": "while (count > 0) {", "inst_trace": [{"instr_func": "pt_write", "instr_loc": -1, "instr": "  %5 = alloca i8*, align 8"}, {"instr_func": "pt_write", "instr_loc": 863, "instr_file": "drivers/block/paride/pt.c", "instr": "{"}, {"instr_func": "pt_write", "instr_loc": 885, "instr_file": "drivers/block/paride/pt.c", "instr": "while (count > 0) {"}, {"instr_func": "pt_write", "instr_loc": 885, "instr_file": "drivers/block/paride/pt.c", "instr": "while (count > 0) {"}], "at_file": "drivers/block/paride/pt.c", "by": "TaintedLoopBoundDetector says:", "at_func": "pt_write"}, "warn_no": 5},
{"warn_data": {"at_line": 948, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "t += b;", "inst_trace": [{"instr_func": "pt_write", "instr_loc": -1, "instr": "  %5 = alloca i8*, align 8"}, {"instr_func": "pt_write", "instr_loc": 863, "instr_file": "drivers/block/paride/pt.c", "instr": "{"}, {"instr_func": "pt_write", "instr_loc": 942, "instr_file": "drivers/block/paride/pt.c", "instr": "b = count;"}, {"instr_func": "pt_write", "instr_loc": 942, "instr_file": "drivers/block/paride/pt.c", "instr": "b = count;"}, {"instr_func": "pt_write", "instr_loc": 942, "instr_file": "drivers/block/paride/pt.c", "instr": "b = count;"}, {"instr_func": "pt_write", "instr_loc": 948, "instr_file": "drivers/block/paride/pt.c", "instr": "t += b;"}], "at_file": "drivers/block/paride/pt.c", "by": "IntegerOverflowDetector says:", "at_func": "pt_write"}, "warn_no": 6},
{"warn_data": {"at_line": 950, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "n -= k;", "inst_trace": [{"instr_func": "pt_write", "instr_loc": -1, "instr": "  %5 = alloca i8*, align 8"}, {"instr_func": "pt_write", "instr_loc": 863, "instr_file": "drivers/block/paride/pt.c", "instr": "{"}, {"instr_func": "pt_write", "instr_loc": 942, "instr_file": "drivers/block/paride/pt.c", "instr": "b = count;"}, {"instr_func": "pt_write", "instr_loc": 942, "instr_file": "drivers/block/paride/pt.c", "instr": "b = count;"}, {"instr_func": "pt_write", "instr_loc": 942, "instr_file": "drivers/block/paride/pt.c", "instr": "b = count;"}, {"instr_func": "pt_write", "instr_loc": 894, "instr_file": "drivers/block/paride/pt.c", "instr": "n = b * tape->bs;\t/* rounded up to even block */"}, {"instr_func": "pt_write", "instr_loc": 894, "instr_file": "drivers/block/paride/pt.c", "instr": "n = b * tape->bs;\t/* rounded up to even block */"}, {"instr_func": "pt_write", "instr_loc": 894, "instr_file": "drivers/block/paride/pt.c", "instr": "n = b * tape->bs;\t/* rounded up to even block */"}, {"instr_func": "pt_write", "instr_loc": 950, "instr_file": "drivers/block/paride/pt.c", "instr": "n -= k;"}], "at_file": "drivers/block/paride/pt.c", "by": "IntegerOverflowDetector says:", "at_func": "pt_write"}, "warn_no": 7},
{"warn_data": {"at_line": 943, "warn_str": "Loop is bounded by a tainted value.", "at": "if (copy_from_user(tape->bufptr, buf + t, b)) {", "inst_trace": [{"instr_func": "pt_write", "instr_loc": -1, "instr": "  %5 = alloca i8*, align 8"}, {"instr_func": "pt_write", "instr_loc": 863, "instr_file": "drivers/block/paride/pt.c", "instr": "{"}, {"instr_func": "pt_write", "instr_loc": 942, "instr_file": "drivers/block/paride/pt.c", "instr": "b = count;"}, {"instr_func": "pt_write", "instr_loc": 942, "instr_file": "drivers/block/paride/pt.c", "instr": "b = count;"}, {"instr_func": "pt_write", "instr_loc": 942, "instr_file": "drivers/block/paride/pt.c", "instr": "b = count;"}, {"instr_func": "pt_write", "instr_loc": 943, "instr_file": "drivers/block/paride/pt.c", "instr": "if (copy_from_user(tape->bufptr, buf + t, b)) {"}, {"instr_func": "pt_write", "instr_loc": 943, "instr_file": "drivers/block/paride/pt.c", "instr": "if (copy_from_user(tape->bufptr, buf + t, b)) {"}, {"instr_func": "pt_write", "instr_loc": 943, "instr_file": "drivers/block/paride/pt.c", "instr": "if (copy_from_user(tape->bufptr, buf + t, b)) {"}, {"instr_func": "pt_write", "instr_loc": 943, "instr_file": "drivers/block/paride/pt.c", "instr": "if (copy_from_user(tape->bufptr, buf + t, b)) {"}, {"instr_func": "pt_write", "instr_loc": 943, "instr_file": "drivers/block/paride/pt.c", "instr": "if (copy_from_user(tape->bufptr, buf + t, b)) {"}], "at_file": "drivers/block/paride/pt.c", "by": "TaintedLoopBoundDetector says:", "at_func": "pt_write"}, "warn_no": 8},
{"warn_data": {"at_line": 943, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "if (copy_from_user(tape->bufptr, buf + t, b)) {", "inst_trace": [], "at_file": "drivers/block/paride/pt.c", "by": "TaintedSizeDetector says:", "at_func": "pt_write"}, "warn_no": 9}]}]}