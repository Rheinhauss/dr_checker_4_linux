{"all_contexts":[
{"num_warnings": 2,
"context":[{"lineno": -1, "instr": "  %5 = alloca %struct.spinlock*, align 8"}],
"warnings":[{"warn_data": {"at_line": 363, "warn_str": "Loop is bounded by a tainted value.", "at": "if (status != 0) {", "inst_trace": [{"instr_func": "f_hidg_write", "instr_loc": -1, "instr": "  %5 = alloca %struct.spinlock*, align 8"}, {"instr_func": "f_hidg_write", "instr_loc": 333, "instr_file": "drivers/usb/gadget/function/f_hid.c", "instr": "{"}, {"instr_func": "f_hidg_write", "instr_loc": 361, "instr_file": "drivers/usb/gadget/function/f_hid.c", "instr": "status = copy_from_user(req->buf, buffer, count);"}, {"instr_func": "f_hidg_write", "instr_loc": 358, "instr_file": "drivers/usb/gadget/function/f_hid.c", "instr": "count  = min_t(unsigned, count, hidg->report_length);"}, {"instr_func": "f_hidg_write", "instr_loc": 358, "instr_file": "drivers/usb/gadget/function/f_hid.c", "instr": "count  = min_t(unsigned, count, hidg->report_length);"}, {"instr_func": "f_hidg_write", "instr_loc": 361, "instr_file": "drivers/usb/gadget/function/f_hid.c", "instr": "status = copy_from_user(req->buf, buffer, count);"}, {"instr_func": "f_hidg_write", "instr_loc": 363, "instr_file": "drivers/usb/gadget/function/f_hid.c", "instr": "if (status != 0) {"}, {"instr_func": "f_hidg_write", "instr_loc": 363, "instr_file": "drivers/usb/gadget/function/f_hid.c", "instr": "if (status != 0) {"}], "at_file": "drivers/usb/gadget/function/f_hid.c", "by": "TaintedLoopBoundDetector says:", "at_func": "f_hidg_write"}, "warn_no": 1},
{"warn_data": {"at_line": 358, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "count  = min_t(unsigned, count, hidg->report_length);", "inst_trace": [], "at_file": "drivers/usb/gadget/function/f_hid.c", "by": "TaintedSizeDetector says:", "at_func": "f_hidg_write"}, "warn_no": 2}]}]}