{"all_contexts":[
{"num_warnings": 9,
"context":[{"lineno": -1, "instr": "  %5 = alloca i8*, align 8"}],
"warnings":[{"warn_data": {"at_line": 229, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "len = count - 1;", "inst_trace": [{"instr_func": "bt_bmc_read", "instr_loc": -1, "instr": "  %5 = alloca i8*, align 8"}, {"instr_func": "bt_bmc_read", "instr_loc": 195, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "{"}, {"instr_func": "bt_bmc_read", "instr_loc": 229, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "len = count - 1;"}], "at_file": "drivers/char/ipmi/bt-bmc.c", "by": "IntegerOverflowDetector says:", "at_func": "bt_bmc_read"}, "warn_no": 1},
{"warn_data": {"at_line": 240, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "len -= nread;", "inst_trace": [{"instr_func": "bt_bmc_read", "instr_loc": -1, "instr": "  %5 = alloca i8*, align 8"}, {"instr_func": "bt_bmc_read", "instr_loc": 195, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "{"}, {"instr_func": "bt_bmc_read", "instr_loc": 229, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "len = count - 1;"}, {"instr_func": "bt_bmc_read", "instr_loc": 229, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "len = count - 1;"}, {"instr_func": "bt_bmc_read", "instr_loc": 229, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "len = count - 1;"}, {"instr_func": "bt_bmc_read", "instr_loc": 229, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "len = count - 1;"}, {"instr_func": "bt_bmc_read", "instr_loc": 240, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "len -= nread;"}], "at_file": "drivers/char/ipmi/bt-bmc.c", "by": "IntegerOverflowDetector says:", "at_func": "bt_bmc_read"}, "warn_no": 2},
{"warn_data": {"at_line": 231, "warn_str": "Loop is bounded by a tainted value.", "at": "while (len) {", "inst_trace": [{"instr_func": "bt_bmc_read", "instr_loc": -1, "instr": "  %5 = alloca i8*, align 8"}, {"instr_func": "bt_bmc_read", "instr_loc": 195, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "{"}, {"instr_func": "bt_bmc_read", "instr_loc": 229, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "len = count - 1;"}, {"instr_func": "bt_bmc_read", "instr_loc": 229, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "len = count - 1;"}, {"instr_func": "bt_bmc_read", "instr_loc": 229, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "len = count - 1;"}, {"instr_func": "bt_bmc_read", "instr_loc": 229, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "len = count - 1;"}, {"instr_func": "bt_bmc_read", "instr_loc": 231, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "while (len) {"}, {"instr_func": "bt_bmc_read", "instr_loc": 231, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "while (len) {"}], "at_file": "drivers/char/ipmi/bt-bmc.c", "by": "TaintedLoopBoundDetector says:", "at_func": "bt_bmc_read"}, "warn_no": 3},
{"warn_data": {"at_line": 236, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "if (copy_to_user(buf, kbuffer, nread + len_byte)) {", "inst_trace": [{"instr_func": "bt_bmc_read", "instr_loc": -1, "instr": "  %5 = alloca i8*, align 8"}, {"instr_func": "bt_bmc_read", "instr_loc": 195, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "{"}, {"instr_func": "bt_bmc_read", "instr_loc": 229, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "len = count - 1;"}, {"instr_func": "bt_bmc_read", "instr_loc": 229, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "len = count - 1;"}, {"instr_func": "bt_bmc_read", "instr_loc": 229, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "len = count - 1;"}, {"instr_func": "bt_bmc_read", "instr_loc": 229, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "len = count - 1;"}, {"instr_func": "bt_bmc_read", "instr_loc": 232, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "nread = min_t(ssize_t, len, sizeof(kbuffer) - len_byte);"}, {"instr_func": "bt_bmc_read", "instr_loc": 232, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "nread = min_t(ssize_t, len, sizeof(kbuffer) - len_byte);"}, {"instr_func": "bt_bmc_read", "instr_loc": 232, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "nread = min_t(ssize_t, len, sizeof(kbuffer) - len_byte);"}, {"instr_func": "bt_bmc_read", "instr_loc": 232, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "nread = min_t(ssize_t, len, sizeof(kbuffer) - len_byte);"}, {"instr_func": "bt_bmc_read", "instr_loc": 232, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "nread = min_t(ssize_t, len, sizeof(kbuffer) - len_byte);"}, {"instr_func": "bt_bmc_read", "instr_loc": 232, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "nread = min_t(ssize_t, len, sizeof(kbuffer) - len_byte);"}, {"instr_func": "bt_bmc_read", "instr_loc": 232, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "nread = min_t(ssize_t, len, sizeof(kbuffer) - len_byte);"}, {"instr_func": "bt_bmc_read", "instr_loc": 232, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "nread = min_t(ssize_t, len, sizeof(kbuffer) - len_byte);"}, {"instr_func": "bt_bmc_read", "instr_loc": 236, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "if (copy_to_user(buf, kbuffer, nread + len_byte)) {"}], "at_file": "drivers/char/ipmi/bt-bmc.c", "by": "IntegerOverflowDetector says:", "at_func": "bt_bmc_read"}, "warn_no": 4},
{"warn_data": {"at_line": 241, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "buf += nread + len_byte;", "inst_trace": [{"instr_func": "bt_bmc_read", "instr_loc": -1, "instr": "  %5 = alloca i8*, align 8"}, {"instr_func": "bt_bmc_read", "instr_loc": 195, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "{"}, {"instr_func": "bt_bmc_read", "instr_loc": 229, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "len = count - 1;"}, {"instr_func": "bt_bmc_read", "instr_loc": 229, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "len = count - 1;"}, {"instr_func": "bt_bmc_read", "instr_loc": 229, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "len = count - 1;"}, {"instr_func": "bt_bmc_read", "instr_loc": 229, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "len = count - 1;"}, {"instr_func": "bt_bmc_read", "instr_loc": 232, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "nread = min_t(ssize_t, len, sizeof(kbuffer) - len_byte);"}, {"instr_func": "bt_bmc_read", "instr_loc": 232, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "nread = min_t(ssize_t, len, sizeof(kbuffer) - len_byte);"}, {"instr_func": "bt_bmc_read", "instr_loc": 232, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "nread = min_t(ssize_t, len, sizeof(kbuffer) - len_byte);"}, {"instr_func": "bt_bmc_read", "instr_loc": 232, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "nread = min_t(ssize_t, len, sizeof(kbuffer) - len_byte);"}, {"instr_func": "bt_bmc_read", "instr_loc": 232, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "nread = min_t(ssize_t, len, sizeof(kbuffer) - len_byte);"}, {"instr_func": "bt_bmc_read", "instr_loc": 232, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "nread = min_t(ssize_t, len, sizeof(kbuffer) - len_byte);"}, {"instr_func": "bt_bmc_read", "instr_loc": 232, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "nread = min_t(ssize_t, len, sizeof(kbuffer) - len_byte);"}, {"instr_func": "bt_bmc_read", "instr_loc": 232, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "nread = min_t(ssize_t, len, sizeof(kbuffer) - len_byte);"}, {"instr_func": "bt_bmc_read", "instr_loc": 241, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "buf += nread + len_byte;"}], "at_file": "drivers/char/ipmi/bt-bmc.c", "by": "IntegerOverflowDetector says:", "at_func": "bt_bmc_read"}, "warn_no": 5},
{"warn_data": {"at_line": 242, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "ret += nread + len_byte;", "inst_trace": [{"instr_func": "bt_bmc_read", "instr_loc": -1, "instr": "  %5 = alloca i8*, align 8"}, {"instr_func": "bt_bmc_read", "instr_loc": 195, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "{"}, {"instr_func": "bt_bmc_read", "instr_loc": 229, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "len = count - 1;"}, {"instr_func": "bt_bmc_read", "instr_loc": 229, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "len = count - 1;"}, {"instr_func": "bt_bmc_read", "instr_loc": 229, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "len = count - 1;"}, {"instr_func": "bt_bmc_read", "instr_loc": 229, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "len = count - 1;"}, {"instr_func": "bt_bmc_read", "instr_loc": 240, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "len -= nread;"}, {"instr_func": "bt_bmc_read", "instr_loc": 240, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "len -= nread;"}, {"instr_func": "bt_bmc_read", "instr_loc": 240, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "len -= nread;"}, {"instr_func": "bt_bmc_read", "instr_loc": 240, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "len -= nread;"}, {"instr_func": "bt_bmc_read", "instr_loc": 232, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "nread = min_t(ssize_t, len, sizeof(kbuffer) - len_byte);"}, {"instr_func": "bt_bmc_read", "instr_loc": 232, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "nread = min_t(ssize_t, len, sizeof(kbuffer) - len_byte);"}, {"instr_func": "bt_bmc_read", "instr_loc": 232, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "nread = min_t(ssize_t, len, sizeof(kbuffer) - len_byte);"}, {"instr_func": "bt_bmc_read", "instr_loc": 232, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "nread = min_t(ssize_t, len, sizeof(kbuffer) - len_byte);"}, {"instr_func": "bt_bmc_read", "instr_loc": 232, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "nread = min_t(ssize_t, len, sizeof(kbuffer) - len_byte);"}, {"instr_func": "bt_bmc_read", "instr_loc": 232, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "nread = min_t(ssize_t, len, sizeof(kbuffer) - len_byte);"}, {"instr_func": "bt_bmc_read", "instr_loc": 232, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "nread = min_t(ssize_t, len, sizeof(kbuffer) - len_byte);"}, {"instr_func": "bt_bmc_read", "instr_loc": 232, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "nread = min_t(ssize_t, len, sizeof(kbuffer) - len_byte);"}, {"instr_func": "bt_bmc_read", "instr_loc": 242, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "ret += nread + len_byte;"}], "at_file": "drivers/char/ipmi/bt-bmc.c", "by": "IntegerOverflowDetector says:", "at_func": "bt_bmc_read"}, "warn_no": 6},
{"warn_data": {"at_line": 242, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "ret += nread + len_byte;", "inst_trace": [{"instr_func": "bt_bmc_read", "instr_loc": -1, "instr": "  %5 = alloca i8*, align 8"}, {"instr_func": "bt_bmc_read", "instr_loc": 195, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "{"}, {"instr_func": "bt_bmc_read", "instr_loc": 229, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "len = count - 1;"}, {"instr_func": "bt_bmc_read", "instr_loc": 229, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "len = count - 1;"}, {"instr_func": "bt_bmc_read", "instr_loc": 229, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "len = count - 1;"}, {"instr_func": "bt_bmc_read", "instr_loc": 229, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "len = count - 1;"}, {"instr_func": "bt_bmc_read", "instr_loc": 240, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "len -= nread;"}, {"instr_func": "bt_bmc_read", "instr_loc": 240, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "len -= nread;"}, {"instr_func": "bt_bmc_read", "instr_loc": 240, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "len -= nread;"}, {"instr_func": "bt_bmc_read", "instr_loc": 240, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "len -= nread;"}, {"instr_func": "bt_bmc_read", "instr_loc": 232, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "nread = min_t(ssize_t, len, sizeof(kbuffer) - len_byte);"}, {"instr_func": "bt_bmc_read", "instr_loc": 232, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "nread = min_t(ssize_t, len, sizeof(kbuffer) - len_byte);"}, {"instr_func": "bt_bmc_read", "instr_loc": 232, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "nread = min_t(ssize_t, len, sizeof(kbuffer) - len_byte);"}, {"instr_func": "bt_bmc_read", "instr_loc": 232, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "nread = min_t(ssize_t, len, sizeof(kbuffer) - len_byte);"}, {"instr_func": "bt_bmc_read", "instr_loc": 232, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "nread = min_t(ssize_t, len, sizeof(kbuffer) - len_byte);"}, {"instr_func": "bt_bmc_read", "instr_loc": 232, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "nread = min_t(ssize_t, len, sizeof(kbuffer) - len_byte);"}, {"instr_func": "bt_bmc_read", "instr_loc": 232, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "nread = min_t(ssize_t, len, sizeof(kbuffer) - len_byte);"}, {"instr_func": "bt_bmc_read", "instr_loc": 232, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "nread = min_t(ssize_t, len, sizeof(kbuffer) - len_byte);"}, {"instr_func": "bt_bmc_read", "instr_loc": 242, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "ret += nread + len_byte;"}, {"instr_func": "bt_bmc_read", "instr_loc": 242, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "ret += nread + len_byte;"}], "at_file": "drivers/char/ipmi/bt-bmc.c", "by": "IntegerOverflowDetector says:", "at_func": "bt_bmc_read"}, "warn_no": 7},
{"warn_data": {"at_line": 236, "warn_str": "Loop is bounded by a tainted value.", "at": "if (copy_to_user(buf, kbuffer, nread + len_byte)) {", "inst_trace": [{"instr_func": "bt_bmc_read", "instr_loc": -1, "instr": "  %5 = alloca i8*, align 8"}, {"instr_func": "bt_bmc_read", "instr_loc": 195, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "{"}, {"instr_func": "bt_bmc_read", "instr_loc": 229, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "len = count - 1;"}, {"instr_func": "bt_bmc_read", "instr_loc": 229, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "len = count - 1;"}, {"instr_func": "bt_bmc_read", "instr_loc": 229, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "len = count - 1;"}, {"instr_func": "bt_bmc_read", "instr_loc": 229, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "len = count - 1;"}, {"instr_func": "bt_bmc_read", "instr_loc": 232, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "nread = min_t(ssize_t, len, sizeof(kbuffer) - len_byte);"}, {"instr_func": "bt_bmc_read", "instr_loc": 232, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "nread = min_t(ssize_t, len, sizeof(kbuffer) - len_byte);"}, {"instr_func": "bt_bmc_read", "instr_loc": 232, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "nread = min_t(ssize_t, len, sizeof(kbuffer) - len_byte);"}, {"instr_func": "bt_bmc_read", "instr_loc": 232, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "nread = min_t(ssize_t, len, sizeof(kbuffer) - len_byte);"}, {"instr_func": "bt_bmc_read", "instr_loc": 232, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "nread = min_t(ssize_t, len, sizeof(kbuffer) - len_byte);"}, {"instr_func": "bt_bmc_read", "instr_loc": 232, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "nread = min_t(ssize_t, len, sizeof(kbuffer) - len_byte);"}, {"instr_func": "bt_bmc_read", "instr_loc": 232, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "nread = min_t(ssize_t, len, sizeof(kbuffer) - len_byte);"}, {"instr_func": "bt_bmc_read", "instr_loc": 232, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "nread = min_t(ssize_t, len, sizeof(kbuffer) - len_byte);"}, {"instr_func": "bt_bmc_read", "instr_loc": 236, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "if (copy_to_user(buf, kbuffer, nread + len_byte)) {"}, {"instr_func": "bt_bmc_read", "instr_loc": 236, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "if (copy_to_user(buf, kbuffer, nread + len_byte)) {"}, {"instr_func": "bt_bmc_read", "instr_loc": 232, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "nread = min_t(ssize_t, len, sizeof(kbuffer) - len_byte);"}, {"instr_func": "bt_bmc_read", "instr_loc": 232, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "nread = min_t(ssize_t, len, sizeof(kbuffer) - len_byte);"}, {"instr_func": "bt_bmc_read", "instr_loc": 236, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "if (copy_to_user(buf, kbuffer, nread + len_byte)) {"}], "at_file": "drivers/char/ipmi/bt-bmc.c", "by": "TaintedLoopBoundDetector says:", "at_func": "bt_bmc_read"}, "warn_no": 8},
{"warn_data": {"at_line": 232, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "nread = min_t(ssize_t, len, sizeof(kbuffer) - len_byte);", "inst_trace": [], "at_file": "drivers/char/ipmi/bt-bmc.c", "by": "TaintedSizeDetector says:", "at_func": "bt_bmc_read"}, "warn_no": 9}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %5 = alloca i8*, align 8"}, {"lineno": 234, "file": "drivers/char/ipmi/bt-bmc.c", "instr": "bt_readn(bt_bmc, kbuffer + len_byte, nread);"}],
"warnings":[{"warn_data": {"at_line": 138, "warn_str": "Loop is bounded by a tainted value.", "at": "for (i = 0; i < n; i++)", "inst_trace": [{"instr_func": "bt_bmc_read", "instr_loc": -1, "instr": "  %5 = alloca i8*, align 8"}, {"instr_func": "bt_bmc_read", "instr_loc": 195, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "{"}, {"instr_func": "bt_bmc_read", "instr_loc": 229, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "len = count - 1;"}, {"instr_func": "bt_bmc_read", "instr_loc": 229, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "len = count - 1;"}, {"instr_func": "bt_bmc_read", "instr_loc": 229, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "len = count - 1;"}, {"instr_func": "bt_bmc_read", "instr_loc": 229, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "len = count - 1;"}, {"instr_func": "bt_bmc_read", "instr_loc": 232, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "nread = min_t(ssize_t, len, sizeof(kbuffer) - len_byte);"}, {"instr_func": "bt_bmc_read", "instr_loc": 232, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "nread = min_t(ssize_t, len, sizeof(kbuffer) - len_byte);"}, {"instr_func": "bt_bmc_read", "instr_loc": 232, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "nread = min_t(ssize_t, len, sizeof(kbuffer) - len_byte);"}, {"instr_func": "bt_bmc_read", "instr_loc": 232, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "nread = min_t(ssize_t, len, sizeof(kbuffer) - len_byte);"}, {"instr_func": "bt_bmc_read", "instr_loc": 232, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "nread = min_t(ssize_t, len, sizeof(kbuffer) - len_byte);"}, {"instr_func": "bt_bmc_read", "instr_loc": 232, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "nread = min_t(ssize_t, len, sizeof(kbuffer) - len_byte);"}, {"instr_func": "bt_bmc_read", "instr_loc": 232, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "nread = min_t(ssize_t, len, sizeof(kbuffer) - len_byte);"}, {"instr_func": "bt_bmc_read", "instr_loc": 232, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "nread = min_t(ssize_t, len, sizeof(kbuffer) - len_byte);"}, {"instr_func": "bt_bmc_read", "instr_loc": 234, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "bt_readn(bt_bmc, kbuffer + len_byte, nread);"}, {"instr_func": "bt_bmc_read", "instr_loc": 234, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "bt_readn(bt_bmc, kbuffer + len_byte, nread);"}, {"instr_func": "bt_readn", "instr_loc": 135, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "{"}, {"instr_func": "bt_readn", "instr_loc": 138, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "for (i = 0; i < n; i++)"}, {"instr_func": "bt_readn", "instr_loc": 138, "instr_file": "drivers/char/ipmi/bt-bmc.c", "instr": "for (i = 0; i < n; i++)"}], "at_file": "drivers/char/ipmi/bt-bmc.c", "by": "TaintedLoopBoundDetector says:", "at_func": "bt_readn"}, "warn_no": 1}]}]}