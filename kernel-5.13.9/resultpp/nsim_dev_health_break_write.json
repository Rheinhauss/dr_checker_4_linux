{"all_contexts":[
{"num_warnings": 4,
"context":[{"lineno": -1, "instr": "  %5 = alloca i64, align 8"}],
"warnings":[{"warn_data": {"at_line": 242, "warn_str": "Trying to read from a user pointer.", "at": "if (break_msg[count - 1] == '\\n')", "inst_trace": [{"instr_func": "nsim_dev_health_break_write", "instr_loc": -1, "instr": "  %5 = alloca i64, align 8"}, {"instr_func": "nsim_dev_health_break_write", "instr_loc": 232, "instr_file": "drivers/net/netdevsim/health.c", "instr": "{"}, {"instr_func": "nsim_dev_health_break_write", "instr_loc": 242, "instr_file": "drivers/net/netdevsim/health.c", "instr": "if (break_msg[count - 1] == '\\n')"}, {"instr_func": "nsim_dev_health_break_write", "instr_loc": 242, "instr_file": "drivers/net/netdevsim/health.c", "instr": "if (break_msg[count - 1] == '\\n')"}, {"instr_func": "nsim_dev_health_break_write", "instr_loc": 242, "instr_file": "drivers/net/netdevsim/health.c", "instr": "if (break_msg[count - 1] == '\\n')"}], "at_file": "drivers/net/netdevsim/health.c", "by": "TaintedPointerDereferenceChecker says:", "at_func": "nsim_dev_health_break_write"}, "warn_no": 1},
{"warn_data": {"at_line": 242, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "if (break_msg[count - 1] == '\\n')", "inst_trace": [{"instr_func": "nsim_dev_health_break_write", "instr_loc": -1, "instr": "  %5 = alloca i64, align 8"}, {"instr_func": "nsim_dev_health_break_write", "instr_loc": 232, "instr_file": "drivers/net/netdevsim/health.c", "instr": "{"}, {"instr_func": "nsim_dev_health_break_write", "instr_loc": 242, "instr_file": "drivers/net/netdevsim/health.c", "instr": "if (break_msg[count - 1] == '\\n')"}], "at_file": "drivers/net/netdevsim/health.c", "by": "IntegerOverflowDetector says:", "at_func": "nsim_dev_health_break_write"}, "warn_no": 2},
{"warn_data": {"at_line": 243, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "break_msg[count - 1] = '\\0';", "inst_trace": [{"instr_func": "nsim_dev_health_break_write", "instr_loc": -1, "instr": "  %5 = alloca i64, align 8"}, {"instr_func": "nsim_dev_health_break_write", "instr_loc": 232, "instr_file": "drivers/net/netdevsim/health.c", "instr": "{"}, {"instr_func": "nsim_dev_health_break_write", "instr_loc": 243, "instr_file": "drivers/net/netdevsim/health.c", "instr": "break_msg[count - 1] = '\\0';"}], "at_file": "drivers/net/netdevsim/health.c", "by": "IntegerOverflowDetector says:", "at_func": "nsim_dev_health_break_write"}, "warn_no": 3},
{"warn_data": {"at_line": 243, "warn_str": "Trying to write to a user pointer.", "at": "break_msg[count - 1] = '\\0';", "inst_trace": [{"instr_func": "nsim_dev_health_break_write", "instr_loc": -1, "instr": "  %5 = alloca i64, align 8"}, {"instr_func": "nsim_dev_health_break_write", "instr_loc": 232, "instr_file": "drivers/net/netdevsim/health.c", "instr": "{"}, {"instr_func": "nsim_dev_health_break_write", "instr_loc": 243, "instr_file": "drivers/net/netdevsim/health.c", "instr": "break_msg[count - 1] = '\\0';"}, {"instr_func": "nsim_dev_health_break_write", "instr_loc": 243, "instr_file": "drivers/net/netdevsim/health.c", "instr": "break_msg[count - 1] = '\\0';"}, {"instr_func": "nsim_dev_health_break_write", "instr_loc": 243, "instr_file": "drivers/net/netdevsim/health.c", "instr": "break_msg[count - 1] = '\\0';"}], "at_file": "drivers/net/netdevsim/health.c", "by": "TaintedPointerDereferenceChecker says:", "at_func": "nsim_dev_health_break_write"}, "warn_no": 4}]}]}