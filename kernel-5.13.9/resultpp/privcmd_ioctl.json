{"all_contexts":[
{"num_warnings": 5,
"context":[{"lineno": -1, "instr": "  %4 = alloca %struct.file*, align 8"}, {"lineno": 867, "file": "drivers/xen/privcmd.c", "instr": "ret = privcmd_ioctl_mmap_resource(file, udata);"}],
"warnings":[{"warn_data": {"at_line": 757, "warn_str": "Trying to use a global variable without locking.", "at": "if (!vma || vma->vm_ops != &privcmd_vm_ops) {", "inst_trace": [{"instr_func": "privcmd_ioctl", "instr_loc": -1, "instr": "  %4 = alloca %struct.file*, align 8"}, {"instr_func": "privcmd_ioctl", "instr_loc": 867, "instr_file": "drivers/xen/privcmd.c", "instr": "ret = privcmd_ioctl_mmap_resource(file, udata);"}], "at_file": "drivers/xen/privcmd.c", "by": "GlobalVariableRaceDetector says:", "at_func": "privcmd_ioctl_mmap_resource"}, "warn_no": 1},
{"warn_data": {"at_line": 722, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "{", "inst_trace": [], "at_file": "drivers/xen/privcmd.c", "by": "TaintedSizeDetector says:", "at_func": "privcmd_ioctl_mmap_resource"}, "warn_no": 2},
{"warn_data": {"at_line": 770, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "unsigned int nr = DIV_ROUND_UP(kdata.num, XEN_PFN_PER_PAGE);", "inst_trace": [{"instr_func": "privcmd_ioctl_mmap_resource", "instr_loc": 722, "instr_file": "drivers/xen/privcmd.c", "instr": "{"}, {"instr_func": "privcmd_ioctl_mmap_resource", "instr_loc": 770, "instr_file": "drivers/xen/privcmd.c", "instr": "unsigned int nr = DIV_ROUND_UP(kdata.num, XEN_PFN_PER_PAGE);"}], "at_file": "drivers/xen/privcmd.c", "by": "IntegerOverflowDetector says:", "at_func": "privcmd_ioctl_mmap_resource"}, "warn_no": 3},
{"warn_data": {"at_line": 770, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "unsigned int nr = DIV_ROUND_UP(kdata.num, XEN_PFN_PER_PAGE);", "inst_trace": [{"instr_func": "privcmd_ioctl_mmap_resource", "instr_loc": 722, "instr_file": "drivers/xen/privcmd.c", "instr": "{"}, {"instr_func": "privcmd_ioctl_mmap_resource", "instr_loc": 770, "instr_file": "drivers/xen/privcmd.c", "instr": "unsigned int nr = DIV_ROUND_UP(kdata.num, XEN_PFN_PER_PAGE);"}, {"instr_func": "privcmd_ioctl_mmap_resource", "instr_loc": 770, "instr_file": "drivers/xen/privcmd.c", "instr": "unsigned int nr = DIV_ROUND_UP(kdata.num, XEN_PFN_PER_PAGE);"}], "at_file": "drivers/xen/privcmd.c", "by": "IntegerOverflowDetector says:", "at_func": "privcmd_ioctl_mmap_resource"}, "warn_no": 4},
{"warn_data": {"at_line": 779, "warn_str": "Loop is bounded by a tainted value.", "at": "for (i = 0; i < kdata.num; i++) {", "inst_trace": [{"instr_func": "privcmd_ioctl_mmap_resource", "instr_loc": 722, "instr_file": "drivers/xen/privcmd.c", "instr": "{"}, {"instr_func": "privcmd_ioctl_mmap_resource", "instr_loc": 779, "instr_file": "drivers/xen/privcmd.c", "instr": "for (i = 0; i < kdata.num; i++) {"}, {"instr_func": "privcmd_ioctl_mmap_resource", "instr_loc": 779, "instr_file": "drivers/xen/privcmd.c", "instr": "for (i = 0; i < kdata.num; i++) {"}], "at_file": "drivers/xen/privcmd.c", "by": "TaintedLoopBoundDetector says:", "at_func": "privcmd_ioctl_mmap_resource"}, "warn_no": 5}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %4 = alloca %struct.file*, align 8"}, {"lineno": 867, "file": "drivers/xen/privcmd.c", "instr": "ret = privcmd_ioctl_mmap_resource(file, udata);"}, {"lineno": 762, "file": "drivers/xen/privcmd.c", "instr": "pfns = kcalloc(kdata.num, sizeof(*pfns), GFP_KERNEL);"}, {"lineno": 625, "file": "./include/linux/slab.h", "instr": "  %11 = call i8* @kmalloc_array(i64 %7, i64 %8, i32 %10) #14, !dbg !6960"}],
"warnings":[{"warn_data": {"at_line": 557, "warn_str": "Trying to use a global variable without locking.", "at": "  %278 = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %277, !dbg !7241", "inst_trace": [{"instr_func": "privcmd_ioctl", "instr_loc": -1, "instr": "  %4 = alloca %struct.file*, align 8"}, {"instr_func": "privcmd_ioctl", "instr_loc": 867, "instr_file": "drivers/xen/privcmd.c", "instr": "ret = privcmd_ioctl_mmap_resource(file, udata);"}, {"instr_func": "privcmd_ioctl_mmap_resource", "instr_loc": 762, "instr_file": "drivers/xen/privcmd.c", "instr": "pfns = kcalloc(kdata.num, sizeof(*pfns), GFP_KERNEL);"}, {"instr_func": "kcalloc", "instr_loc": 625, "instr_file": "./include/linux/slab.h", "instr": "  %11 = call i8* @kmalloc_array(i64 %7, i64 %8, i32 %10) #14, !dbg !6960"}], "at_file": "./include/linux/slab.h", "by": "GlobalVariableRaceDetector says:", "at_func": "kmalloc_array"}, "warn_no": 1}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %4 = alloca %struct.file*, align 8"}, {"lineno": 867, "file": "drivers/xen/privcmd.c", "instr": "ret = privcmd_ioctl_mmap_resource(file, udata);"}, {"lineno": 769, "file": "drivers/xen/privcmd.c", "instr": "xen_feature(XENFEAT_auto_translated_physmap)) {"}],
"warnings":[{"warn_data": {"at_line": 21, "warn_str": "Trying to use a global variable without locking.", "at": "  %5 = getelementptr [32 x i8], [32 x i8]* @xen_features, i64 0, i64 %4, !dbg !6952", "inst_trace": [{"instr_func": "privcmd_ioctl", "instr_loc": -1, "instr": "  %4 = alloca %struct.file*, align 8"}, {"instr_func": "privcmd_ioctl", "instr_loc": 867, "instr_file": "drivers/xen/privcmd.c", "instr": "ret = privcmd_ioctl_mmap_resource(file, udata);"}, {"instr_func": "privcmd_ioctl_mmap_resource", "instr_loc": 769, "instr_file": "drivers/xen/privcmd.c", "instr": "xen_feature(XENFEAT_auto_translated_physmap)) {"}], "at_file": "./include/xen/features.h", "by": "GlobalVariableRaceDetector says:", "at_func": "xen_feature"}, "warn_no": 1}]},
{"num_warnings": 10,
"context":[{"lineno": -1, "instr": "  %4 = alloca %struct.file*, align 8"}, {"lineno": 859, "file": "drivers/xen/privcmd.c", "instr": "ret = privcmd_ioctl_dm_op(file, udata);"}],
"warnings":[{"warn_data": {"at_line": 637, "warn_str": "Trying to use a global variable without locking.", "at": "if (kdata.num > privcmd_dm_op_max_num)", "inst_trace": [{"instr_func": "privcmd_ioctl", "instr_loc": -1, "instr": "  %4 = alloca %struct.file*, align 8"}, {"instr_func": "privcmd_ioctl", "instr_loc": 859, "instr_file": "drivers/xen/privcmd.c", "instr": "ret = privcmd_ioctl_dm_op(file, udata);"}], "at_file": "drivers/xen/privcmd.c", "by": "GlobalVariableRaceDetector says:", "at_func": "privcmd_ioctl_dm_op"}, "warn_no": 1},
{"warn_data": {"at_line": 616, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "{", "inst_trace": [], "at_file": "drivers/xen/privcmd.c", "by": "TaintedSizeDetector says:", "at_func": "privcmd_ioctl_dm_op"}, "warn_no": 2},
{"warn_data": {"at_line": 662, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "nr_pages += DIV_ROUND_UP(", "inst_trace": [{"instr_func": "privcmd_ioctl_dm_op", "instr_loc": 644, "instr_file": "drivers/xen/privcmd.c", "instr": "if (copy_from_user(kbufs, kdata.ubufs,"}, {"instr_func": "privcmd_ioctl_dm_op", "instr_loc": 662, "instr_file": "drivers/xen/privcmd.c", "instr": "nr_pages += DIV_ROUND_UP("}], "at_file": "drivers/xen/privcmd.c", "by": "IntegerOverflowDetector says:", "at_func": "privcmd_ioctl_dm_op"}, "warn_no": 3},
{"warn_data": {"at_line": 644, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "if (copy_from_user(kbufs, kdata.ubufs,", "inst_trace": [], "at_file": "drivers/xen/privcmd.c", "by": "TaintedSizeDetector says:", "at_func": "privcmd_ioctl_dm_op"}, "warn_no": 4},
{"warn_data": {"at_line": 651, "warn_str": "Loop is bounded by a tainted value.", "at": "if (kbufs[i].size > privcmd_dm_op_buf_max_size) {", "inst_trace": [{"instr_func": "privcmd_ioctl_dm_op", "instr_loc": 644, "instr_file": "drivers/xen/privcmd.c", "instr": "if (copy_from_user(kbufs, kdata.ubufs,"}, {"instr_func": "privcmd_ioctl_dm_op", "instr_loc": 651, "instr_file": "drivers/xen/privcmd.c", "instr": "if (kbufs[i].size > privcmd_dm_op_buf_max_size) {"}, {"instr_func": "privcmd_ioctl_dm_op", "instr_loc": 651, "instr_file": "drivers/xen/privcmd.c", "instr": "if (kbufs[i].size > privcmd_dm_op_buf_max_size) {"}], "at_file": "drivers/xen/privcmd.c", "by": "TaintedLoopBoundDetector says:", "at_func": "privcmd_ioctl_dm_op"}, "warn_no": 5},
{"warn_data": {"at_line": 650, "warn_str": "Loop is bounded by a tainted value.", "at": "for (i = 0; i < kdata.num; i++) {", "inst_trace": [{"instr_func": "privcmd_ioctl_dm_op", "instr_loc": 616, "instr_file": "drivers/xen/privcmd.c", "instr": "{"}, {"instr_func": "privcmd_ioctl_dm_op", "instr_loc": 650, "instr_file": "drivers/xen/privcmd.c", "instr": "for (i = 0; i < kdata.num; i++) {"}, {"instr_func": "privcmd_ioctl_dm_op", "instr_loc": 650, "instr_file": "drivers/xen/privcmd.c", "instr": "for (i = 0; i < kdata.num; i++) {"}], "at_file": "drivers/xen/privcmd.c", "by": "TaintedLoopBoundDetector says:", "at_func": "privcmd_ioctl_dm_op"}, "warn_no": 6},
{"warn_data": {"at_line": 662, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "nr_pages += DIV_ROUND_UP(", "inst_trace": [{"instr_func": "privcmd_ioctl_dm_op", "instr_loc": 644, "instr_file": "drivers/xen/privcmd.c", "instr": "if (copy_from_user(kbufs, kdata.ubufs,"}, {"instr_func": "privcmd_ioctl_dm_op", "instr_loc": 662, "instr_file": "drivers/xen/privcmd.c", "instr": "nr_pages += DIV_ROUND_UP("}, {"instr_func": "privcmd_ioctl_dm_op", "instr_loc": 662, "instr_file": "drivers/xen/privcmd.c", "instr": "nr_pages += DIV_ROUND_UP("}], "at_file": "drivers/xen/privcmd.c", "by": "IntegerOverflowDetector says:", "at_func": "privcmd_ioctl_dm_op"}, "warn_no": 7},
{"warn_data": {"at_line": 662, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "nr_pages += DIV_ROUND_UP(", "inst_trace": [{"instr_func": "privcmd_ioctl_dm_op", "instr_loc": 644, "instr_file": "drivers/xen/privcmd.c", "instr": "if (copy_from_user(kbufs, kdata.ubufs,"}, {"instr_func": "privcmd_ioctl_dm_op", "instr_loc": 662, "instr_file": "drivers/xen/privcmd.c", "instr": "nr_pages += DIV_ROUND_UP("}, {"instr_func": "privcmd_ioctl_dm_op", "instr_loc": 662, "instr_file": "drivers/xen/privcmd.c", "instr": "nr_pages += DIV_ROUND_UP("}, {"instr_func": "privcmd_ioctl_dm_op", "instr_loc": 662, "instr_file": "drivers/xen/privcmd.c", "instr": "nr_pages += DIV_ROUND_UP("}], "at_file": "drivers/xen/privcmd.c", "by": "IntegerOverflowDetector says:", "at_func": "privcmd_ioctl_dm_op"}, "warn_no": 8},
{"warn_data": {"at_line": 662, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "nr_pages += DIV_ROUND_UP(", "inst_trace": [{"instr_func": "privcmd_ioctl_dm_op", "instr_loc": 644, "instr_file": "drivers/xen/privcmd.c", "instr": "if (copy_from_user(kbufs, kdata.ubufs,"}, {"instr_func": "privcmd_ioctl_dm_op", "instr_loc": 662, "instr_file": "drivers/xen/privcmd.c", "instr": "nr_pages += DIV_ROUND_UP("}, {"instr_func": "privcmd_ioctl_dm_op", "instr_loc": 662, "instr_file": "drivers/xen/privcmd.c", "instr": "nr_pages += DIV_ROUND_UP("}, {"instr_func": "privcmd_ioctl_dm_op", "instr_loc": 662, "instr_file": "drivers/xen/privcmd.c", "instr": "nr_pages += DIV_ROUND_UP("}, {"instr_func": "privcmd_ioctl_dm_op", "instr_loc": 662, "instr_file": "drivers/xen/privcmd.c", "instr": "nr_pages += DIV_ROUND_UP("}, {"instr_func": "privcmd_ioctl_dm_op", "instr_loc": 662, "instr_file": "drivers/xen/privcmd.c", "instr": "nr_pages += DIV_ROUND_UP("}], "at_file": "drivers/xen/privcmd.c", "by": "IntegerOverflowDetector says:", "at_func": "privcmd_ioctl_dm_op"}, "warn_no": 9},
{"warn_data": {"at_line": 685, "warn_str": "Loop is bounded by a tainted value.", "at": "for (i = 0; i < kdata.num; i++) {", "inst_trace": [{"instr_func": "privcmd_ioctl_dm_op", "instr_loc": 616, "instr_file": "drivers/xen/privcmd.c", "instr": "{"}, {"instr_func": "privcmd_ioctl_dm_op", "instr_loc": 685, "instr_file": "drivers/xen/privcmd.c", "instr": "for (i = 0; i < kdata.num; i++) {"}, {"instr_func": "privcmd_ioctl_dm_op", "instr_loc": 685, "instr_file": "drivers/xen/privcmd.c", "instr": "for (i = 0; i < kdata.num; i++) {"}], "at_file": "drivers/xen/privcmd.c", "by": "TaintedLoopBoundDetector says:", "at_func": "privcmd_ioctl_dm_op"}, "warn_no": 10}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %4 = alloca %struct.file*, align 8"}, {"lineno": 863, "file": "drivers/xen/privcmd.c", "instr": "ret = privcmd_ioctl_restrict(file, udata);"}],
"warnings":[{"warn_data": {"at_line": 704, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "{", "inst_trace": [], "at_file": "drivers/xen/privcmd.c", "by": "TaintedSizeDetector says:", "at_func": "privcmd_ioctl_restrict"}, "warn_no": 1}]},
{"num_warnings": 2,
"context":[{"lineno": -1, "instr": "  %4 = alloca %struct.file*, align 8"}, {"lineno": 859, "file": "drivers/xen/privcmd.c", "instr": "ret = privcmd_ioctl_dm_op(file, udata);"}, {"lineno": 656, "file": "drivers/xen/privcmd.c", "instr": "if (!access_ok(kbufs[i].uptr,"}],
"warnings":[{"warn_data": {"at_line": 32, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "  %24 = add i64 %23, %22, !dbg !6964", "inst_trace": [{"instr_func": "privcmd_ioctl_dm_op", "instr_loc": 644, "instr_file": "drivers/xen/privcmd.c", "instr": "if (copy_from_user(kbufs, kdata.ubufs,"}, {"instr_func": "privcmd_ioctl_dm_op", "instr_loc": 656, "instr_file": "drivers/xen/privcmd.c", "instr": "if (!access_ok(kbufs[i].uptr,"}, {"instr_func": "privcmd_ioctl_dm_op", "instr_loc": 656, "instr_file": "drivers/xen/privcmd.c", "instr": "if (!access_ok(kbufs[i].uptr,"}, {"instr_func": "__chk_range_not_ok", "instr_loc": 20, "instr_file": "./arch/x86/include/asm/uaccess.h", "instr": "  store i64 %1, i64* %6, align 8"}, {"instr_func": "__chk_range_not_ok", "instr_loc": 32, "instr_file": "./arch/x86/include/asm/uaccess.h", "instr": "  %22 = load i64, i64* %6, align 8, !dbg !6963"}], "at_file": "./arch/x86/include/asm/uaccess.h", "by": "IntegerOverflowDetector says:", "at_func": "__chk_range_not_ok"}, "warn_no": 1},
{"warn_data": {"at_line": 29, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "  %14 = sub i64 %12, %13, !dbg !6961", "inst_trace": [{"instr_func": "privcmd_ioctl_dm_op", "instr_loc": 644, "instr_file": "drivers/xen/privcmd.c", "instr": "if (copy_from_user(kbufs, kdata.ubufs,"}, {"instr_func": "privcmd_ioctl_dm_op", "instr_loc": 656, "instr_file": "drivers/xen/privcmd.c", "instr": "if (!access_ok(kbufs[i].uptr,"}, {"instr_func": "privcmd_ioctl_dm_op", "instr_loc": 656, "instr_file": "drivers/xen/privcmd.c", "instr": "if (!access_ok(kbufs[i].uptr,"}, {"instr_func": "__chk_range_not_ok", "instr_loc": 20, "instr_file": "./arch/x86/include/asm/uaccess.h", "instr": "  store i64 %1, i64* %6, align 8"}, {"instr_func": "__chk_range_not_ok", "instr_loc": 29, "instr_file": "./arch/x86/include/asm/uaccess.h", "instr": "  %13 = load i64, i64* %6, align 8, !dbg !6961"}], "at_file": "./arch/x86/include/asm/uaccess.h", "by": "IntegerOverflowDetector says:", "at_func": "__chk_range_not_ok"}, "warn_no": 2}]},
{"num_warnings": 6,
"context":[{"lineno": -1, "instr": "  %4 = alloca %struct.file*, align 8"}, {"lineno": 859, "file": "drivers/xen/privcmd.c", "instr": "ret = privcmd_ioctl_dm_op(file, udata);"}, {"lineno": 679, "file": "drivers/xen/privcmd.c", "instr": "rc = lock_pages(kbufs, kdata.num, pages, nr_pages, &pinned);"}],
"warnings":[{"warn_data": {"at_line": 603, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "nr_pages -= page_count;", "inst_trace": [{"instr_func": "privcmd_ioctl_dm_op", "instr_loc": 644, "instr_file": "drivers/xen/privcmd.c", "instr": "if (copy_from_user(kbufs, kdata.ubufs,"}, {"instr_func": "privcmd_ioctl_dm_op", "instr_loc": 662, "instr_file": "drivers/xen/privcmd.c", "instr": "nr_pages += DIV_ROUND_UP("}, {"instr_func": "privcmd_ioctl_dm_op", "instr_loc": 662, "instr_file": "drivers/xen/privcmd.c", "instr": "nr_pages += DIV_ROUND_UP("}, {"instr_func": "privcmd_ioctl_dm_op", "instr_loc": 662, "instr_file": "drivers/xen/privcmd.c", "instr": "nr_pages += DIV_ROUND_UP("}, {"instr_func": "privcmd_ioctl_dm_op", "instr_loc": 662, "instr_file": "drivers/xen/privcmd.c", "instr": "nr_pages += DIV_ROUND_UP("}, {"instr_func": "privcmd_ioctl_dm_op", "instr_loc": 662, "instr_file": "drivers/xen/privcmd.c", "instr": "nr_pages += DIV_ROUND_UP("}, {"instr_func": "privcmd_ioctl_dm_op", "instr_loc": 662, "instr_file": "drivers/xen/privcmd.c", "instr": "nr_pages += DIV_ROUND_UP("}, {"instr_func": "privcmd_ioctl_dm_op", "instr_loc": 662, "instr_file": "drivers/xen/privcmd.c", "instr": "nr_pages += DIV_ROUND_UP("}, {"instr_func": "privcmd_ioctl_dm_op", "instr_loc": 662, "instr_file": "drivers/xen/privcmd.c", "instr": "nr_pages += DIV_ROUND_UP("}, {"instr_func": "privcmd_ioctl_dm_op", "instr_loc": 679, "instr_file": "drivers/xen/privcmd.c", "instr": "rc = lock_pages(kbufs, kdata.num, pages, nr_pages, &pinned);"}, {"instr_func": "privcmd_ioctl_dm_op", "instr_loc": 679, "instr_file": "drivers/xen/privcmd.c", "instr": "rc = lock_pages(kbufs, kdata.num, pages, nr_pages, &pinned);"}, {"instr_func": "lock_pages", "instr_loc": 583, "instr_file": "drivers/xen/privcmd.c", "instr": "{"}, {"instr_func": "lock_pages", "instr_loc": 603, "instr_file": "drivers/xen/privcmd.c", "instr": "nr_pages -= page_count;"}], "at_file": "drivers/xen/privcmd.c", "by": "IntegerOverflowDetector says:", "at_func": "lock_pages"}, "warn_no": 1},
{"warn_data": {"at_line": 593, "warn_str": "Loop is bounded by a tainted value.", "at": "if (requested > nr_pages)", "inst_trace": [{"instr_func": "privcmd_ioctl_dm_op", "instr_loc": 644, "instr_file": "drivers/xen/privcmd.c", "instr": "if (copy_from_user(kbufs, kdata.ubufs,"}, {"instr_func": "privcmd_ioctl_dm_op", "instr_loc": 662, "instr_file": "drivers/xen/privcmd.c", "instr": "nr_pages += DIV_ROUND_UP("}, {"instr_func": "privcmd_ioctl_dm_op", "instr_loc": 662, "instr_file": "drivers/xen/privcmd.c", "instr": "nr_pages += DIV_ROUND_UP("}, {"instr_func": "privcmd_ioctl_dm_op", "instr_loc": 662, "instr_file": "drivers/xen/privcmd.c", "instr": "nr_pages += DIV_ROUND_UP("}, {"instr_func": "privcmd_ioctl_dm_op", "instr_loc": 662, "instr_file": "drivers/xen/privcmd.c", "instr": "nr_pages += DIV_ROUND_UP("}, {"instr_func": "privcmd_ioctl_dm_op", "instr_loc": 662, "instr_file": "drivers/xen/privcmd.c", "instr": "nr_pages += DIV_ROUND_UP("}, {"instr_func": "privcmd_ioctl_dm_op", "instr_loc": 662, "instr_file": "drivers/xen/privcmd.c", "instr": "nr_pages += DIV_ROUND_UP("}, {"instr_func": "privcmd_ioctl_dm_op", "instr_loc": 662, "instr_file": "drivers/xen/privcmd.c", "instr": "nr_pages += DIV_ROUND_UP("}, {"instr_func": "privcmd_ioctl_dm_op", "instr_loc": 662, "instr_file": "drivers/xen/privcmd.c", "instr": "nr_pages += DIV_ROUND_UP("}, {"instr_func": "privcmd_ioctl_dm_op", "instr_loc": 662, "instr_file": "drivers/xen/privcmd.c", "instr": "nr_pages += DIV_ROUND_UP("}, {"instr_func": "privcmd_ioctl_dm_op", "instr_loc": 662, "instr_file": "drivers/xen/privcmd.c", "instr": "nr_pages += DIV_ROUND_UP("}, {"instr_func": "privcmd_ioctl_dm_op", "instr_loc": 662, "instr_file": "drivers/xen/privcmd.c", "instr": "nr_pages += DIV_ROUND_UP("}, {"instr_func": "privcmd_ioctl_dm_op", "instr_loc": 662, "instr_file": "drivers/xen/privcmd.c", "instr": "nr_pages += DIV_ROUND_UP("}, {"instr_func": "privcmd_ioctl_dm_op", "instr_loc": 662, "instr_file": "drivers/xen/privcmd.c", "instr": "nr_pages += DIV_ROUND_UP("}, {"instr_func": "privcmd_ioctl_dm_op", "instr_loc": 662, "instr_file": "drivers/xen/privcmd.c", "instr": "nr_pages += DIV_ROUND_UP("}, {"instr_func": "privcmd_ioctl_dm_op", "instr_loc": 662, "instr_file": "drivers/xen/privcmd.c", "instr": "nr_pages += DIV_ROUND_UP("}, {"instr_func": "privcmd_ioctl_dm_op", "instr_loc": 662, "instr_file": "drivers/xen/privcmd.c", "instr": "nr_pages += DIV_ROUND_UP("}, {"instr_func": "privcmd_ioctl_dm_op", "instr_loc": 679, "instr_file": "drivers/xen/privcmd.c", "instr": "rc = lock_pages(kbufs, kdata.num, pages, nr_pages, &pinned);"}, {"instr_func": "privcmd_ioctl_dm_op", "instr_loc": 679, "instr_file": "drivers/xen/privcmd.c", "instr": "rc = lock_pages(kbufs, kdata.num, pages, nr_pages, &pinned);"}, {"instr_func": "lock_pages", "instr_loc": 583, "instr_file": "drivers/xen/privcmd.c", "instr": "{"}, {"instr_func": "lock_pages", "instr_loc": 593, "instr_file": "drivers/xen/privcmd.c", "instr": "if (requested > nr_pages)"}, {"instr_func": "lock_pages", "instr_loc": 593, "instr_file": "drivers/xen/privcmd.c", "instr": "if (requested > nr_pages)"}], "at_file": "drivers/xen/privcmd.c", "by": "TaintedLoopBoundDetector says:", "at_func": "lock_pages"}, "warn_no": 2},
{"warn_data": {"at_line": 590, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "requested = DIV_ROUND_UP(", "inst_trace": [{"instr_func": "privcmd_ioctl_dm_op", "instr_loc": 644, "instr_file": "drivers/xen/privcmd.c", "instr": "if (copy_from_user(kbufs, kdata.ubufs,"}, {"instr_func": "lock_pages", "instr_loc": 590, "instr_file": "drivers/xen/privcmd.c", "instr": "requested = DIV_ROUND_UP("}], "at_file": "drivers/xen/privcmd.c", "by": "IntegerOverflowDetector says:", "at_func": "lock_pages"}, "warn_no": 3},
{"warn_data": {"at_line": 586, "warn_str": "Loop is bounded by a tainted value.", "at": "for (i = 0; i < num; i++) {", "inst_trace": [{"instr_func": "privcmd_ioctl_dm_op", "instr_loc": 616, "instr_file": "drivers/xen/privcmd.c", "instr": "{"}, {"instr_func": "privcmd_ioctl_dm_op", "instr_loc": 679, "instr_file": "drivers/xen/privcmd.c", "instr": "rc = lock_pages(kbufs, kdata.num, pages, nr_pages, &pinned);"}, {"instr_func": "privcmd_ioctl_dm_op", "instr_loc": 679, "instr_file": "drivers/xen/privcmd.c", "instr": "rc = lock_pages(kbufs, kdata.num, pages, nr_pages, &pinned);"}, {"instr_func": "lock_pages", "instr_loc": 583, "instr_file": "drivers/xen/privcmd.c", "instr": "{"}, {"instr_func": "lock_pages", "instr_loc": 586, "instr_file": "drivers/xen/privcmd.c", "instr": "for (i = 0; i < num; i++) {"}, {"instr_func": "lock_pages", "instr_loc": 586, "instr_file": "drivers/xen/privcmd.c", "instr": "for (i = 0; i < num; i++) {"}], "at_file": "drivers/xen/privcmd.c", "by": "TaintedLoopBoundDetector says:", "at_func": "lock_pages"}, "warn_no": 4},
{"warn_data": {"at_line": 590, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "requested = DIV_ROUND_UP(", "inst_trace": [{"instr_func": "privcmd_ioctl_dm_op", "instr_loc": 644, "instr_file": "drivers/xen/privcmd.c", "instr": "if (copy_from_user(kbufs, kdata.ubufs,"}, {"instr_func": "lock_pages", "instr_loc": 590, "instr_file": "drivers/xen/privcmd.c", "instr": "requested = DIV_ROUND_UP("}, {"instr_func": "lock_pages", "instr_loc": 590, "instr_file": "drivers/xen/privcmd.c", "instr": "requested = DIV_ROUND_UP("}], "at_file": "drivers/xen/privcmd.c", "by": "IntegerOverflowDetector says:", "at_func": "lock_pages"}, "warn_no": 5},
{"warn_data": {"at_line": 590, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "requested = DIV_ROUND_UP(", "inst_trace": [{"instr_func": "privcmd_ioctl_dm_op", "instr_loc": 644, "instr_file": "drivers/xen/privcmd.c", "instr": "if (copy_from_user(kbufs, kdata.ubufs,"}, {"instr_func": "lock_pages", "instr_loc": 590, "instr_file": "drivers/xen/privcmd.c", "instr": "requested = DIV_ROUND_UP("}, {"instr_func": "lock_pages", "instr_loc": 590, "instr_file": "drivers/xen/privcmd.c", "instr": "requested = DIV_ROUND_UP("}, {"instr_func": "lock_pages", "instr_loc": 590, "instr_file": "drivers/xen/privcmd.c", "instr": "requested = DIV_ROUND_UP("}], "at_file": "drivers/xen/privcmd.c", "by": "IntegerOverflowDetector says:", "at_func": "lock_pages"}, "warn_no": 6}]},
{"num_warnings": 7,
"context":[{"lineno": -1, "instr": "  %4 = alloca %struct.file*, align 8"}, {"lineno": 855, "file": "drivers/xen/privcmd.c", "instr": "ret = privcmd_ioctl_mmap_batch(file, udata, 2);"}],
"warnings":[{"warn_data": {"at_line": 464, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "if (copy_from_user(&m, udata, sizeof(struct privcmd_mmapbatch_v2)))", "inst_trace": [], "at_file": "drivers/xen/privcmd.c", "by": "TaintedSizeDetector says:", "at_func": "privcmd_ioctl_mmap_batch"}, "warn_no": 1},
{"warn_data": {"at_line": 456, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "if (copy_from_user(&m, udata, sizeof(struct privcmd_mmapbatch)))", "inst_trace": [], "at_file": "drivers/xen/privcmd.c", "by": "TaintedSizeDetector says:", "at_func": "privcmd_ioctl_mmap_batch"}, "warn_no": 2},
{"warn_data": {"at_line": 478, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "nr_pages = DIV_ROUND_UP(m.num, XEN_PFN_PER_PAGE);", "inst_trace": [{"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 464, "instr_file": "drivers/xen/privcmd.c", "instr": "if (copy_from_user(&m, udata, sizeof(struct privcmd_mmapbatch_v2)))"}, {"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 478, "instr_file": "drivers/xen/privcmd.c", "instr": "nr_pages = DIV_ROUND_UP(m.num, XEN_PFN_PER_PAGE);"}], "at_file": "drivers/xen/privcmd.c", "by": "IntegerOverflowDetector says:", "at_func": "privcmd_ioctl_mmap_batch"}, "warn_no": 3},
{"warn_data": {"at_line": 478, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "nr_pages = DIV_ROUND_UP(m.num, XEN_PFN_PER_PAGE);", "inst_trace": [{"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 464, "instr_file": "drivers/xen/privcmd.c", "instr": "if (copy_from_user(&m, udata, sizeof(struct privcmd_mmapbatch_v2)))"}, {"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 478, "instr_file": "drivers/xen/privcmd.c", "instr": "nr_pages = DIV_ROUND_UP(m.num, XEN_PFN_PER_PAGE);"}, {"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 478, "instr_file": "drivers/xen/privcmd.c", "instr": "nr_pages = DIV_ROUND_UP(m.num, XEN_PFN_PER_PAGE);"}], "at_file": "drivers/xen/privcmd.c", "by": "IntegerOverflowDetector says:", "at_func": "privcmd_ioctl_mmap_batch"}, "warn_no": 4},
{"warn_data": {"at_line": 533, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "m.addr + (nr_pages << PAGE_SHIFT) > vma->vm_end) {", "inst_trace": [{"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 464, "instr_file": "drivers/xen/privcmd.c", "instr": "if (copy_from_user(&m, udata, sizeof(struct privcmd_mmapbatch_v2)))"}, {"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 533, "instr_file": "drivers/xen/privcmd.c", "instr": "m.addr + (nr_pages << PAGE_SHIFT) > vma->vm_end) {"}], "at_file": "drivers/xen/privcmd.c", "by": "IntegerOverflowDetector says:", "at_func": "privcmd_ioctl_mmap_batch"}, "warn_no": 5},
{"warn_data": {"at_line": 503, "warn_str": "Trying to use a global variable without locking.", "at": "vma->vm_ops != &privcmd_vm_ops) {", "inst_trace": [{"instr_func": "privcmd_ioctl", "instr_loc": -1, "instr": "  %4 = alloca %struct.file*, align 8"}, {"instr_func": "privcmd_ioctl", "instr_loc": 855, "instr_file": "drivers/xen/privcmd.c", "instr": "ret = privcmd_ioctl_mmap_batch(file, udata, 2);"}], "at_file": "drivers/xen/privcmd.c", "by": "GlobalVariableRaceDetector says:", "at_func": "privcmd_ioctl_mmap_batch"}, "warn_no": 6},
{"warn_data": {"at_line": 521, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "m.addr + (nr_pages << PAGE_SHIFT) != vma->vm_end) {", "inst_trace": [{"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 464, "instr_file": "drivers/xen/privcmd.c", "instr": "if (copy_from_user(&m, udata, sizeof(struct privcmd_mmapbatch_v2)))"}, {"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 521, "instr_file": "drivers/xen/privcmd.c", "instr": "m.addr + (nr_pages << PAGE_SHIFT) != vma->vm_end) {"}], "at_file": "drivers/xen/privcmd.c", "by": "IntegerOverflowDetector says:", "at_func": "privcmd_ioctl_mmap_batch"}, "warn_no": 7}]},
{"num_warnings": 2,
"context":[{"lineno": -1, "instr": "  %4 = alloca %struct.file*, align 8"}, {"lineno": 855, "file": "drivers/xen/privcmd.c", "instr": "ret = privcmd_ioctl_mmap_batch(file, udata, 2);"}, {"lineno": 467, "file": "drivers/xen/privcmd.c", "instr": "if (!access_ok(m.err, m.num * (sizeof(*m.err))))"}],
"warnings":[{"warn_data": {"at_line": 32, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "  %24 = add i64 %23, %22, !dbg !6964", "inst_trace": [{"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 464, "instr_file": "drivers/xen/privcmd.c", "instr": "if (copy_from_user(&m, udata, sizeof(struct privcmd_mmapbatch_v2)))"}, {"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 467, "instr_file": "drivers/xen/privcmd.c", "instr": "if (!access_ok(m.err, m.num * (sizeof(*m.err))))"}, {"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 467, "instr_file": "drivers/xen/privcmd.c", "instr": "if (!access_ok(m.err, m.num * (sizeof(*m.err))))"}, {"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 467, "instr_file": "drivers/xen/privcmd.c", "instr": "if (!access_ok(m.err, m.num * (sizeof(*m.err))))"}, {"instr_func": "__chk_range_not_ok", "instr_loc": 20, "instr_file": "./arch/x86/include/asm/uaccess.h", "instr": "  store i64 %1, i64* %6, align 8"}, {"instr_func": "__chk_range_not_ok", "instr_loc": 32, "instr_file": "./arch/x86/include/asm/uaccess.h", "instr": "  %22 = load i64, i64* %6, align 8, !dbg !6963"}], "at_file": "./arch/x86/include/asm/uaccess.h", "by": "IntegerOverflowDetector says:", "at_func": "__chk_range_not_ok"}, "warn_no": 1},
{"warn_data": {"at_line": 29, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "  %14 = sub i64 %12, %13, !dbg !6961", "inst_trace": [{"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 464, "instr_file": "drivers/xen/privcmd.c", "instr": "if (copy_from_user(&m, udata, sizeof(struct privcmd_mmapbatch_v2)))"}, {"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 467, "instr_file": "drivers/xen/privcmd.c", "instr": "if (!access_ok(m.err, m.num * (sizeof(*m.err))))"}, {"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 467, "instr_file": "drivers/xen/privcmd.c", "instr": "if (!access_ok(m.err, m.num * (sizeof(*m.err))))"}, {"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 467, "instr_file": "drivers/xen/privcmd.c", "instr": "if (!access_ok(m.err, m.num * (sizeof(*m.err))))"}, {"instr_func": "__chk_range_not_ok", "instr_loc": 20, "instr_file": "./arch/x86/include/asm/uaccess.h", "instr": "  store i64 %1, i64* %6, align 8"}, {"instr_func": "__chk_range_not_ok", "instr_loc": 29, "instr_file": "./arch/x86/include/asm/uaccess.h", "instr": "  %13 = load i64, i64* %6, align 8, !dbg !6961"}], "at_file": "./arch/x86/include/asm/uaccess.h", "by": "IntegerOverflowDetector says:", "at_func": "__chk_range_not_ok"}, "warn_no": 2}]},
{"num_warnings": 2,
"context":[{"lineno": -1, "instr": "  %4 = alloca %struct.file*, align 8"}, {"lineno": 855, "file": "drivers/xen/privcmd.c", "instr": "ret = privcmd_ioctl_mmap_batch(file, udata, 2);"}, {"lineno": 460, "file": "drivers/xen/privcmd.c", "instr": "if (!access_ok(m.arr, m.num * sizeof(*m.arr)))"}],
"warnings":[{"warn_data": {"at_line": 32, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "  %24 = add i64 %23, %22, !dbg !6964", "inst_trace": [{"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 464, "instr_file": "drivers/xen/privcmd.c", "instr": "if (copy_from_user(&m, udata, sizeof(struct privcmd_mmapbatch_v2)))"}, {"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 460, "instr_file": "drivers/xen/privcmd.c", "instr": "if (!access_ok(m.arr, m.num * sizeof(*m.arr)))"}, {"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 460, "instr_file": "drivers/xen/privcmd.c", "instr": "if (!access_ok(m.arr, m.num * sizeof(*m.arr)))"}, {"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 460, "instr_file": "drivers/xen/privcmd.c", "instr": "if (!access_ok(m.arr, m.num * sizeof(*m.arr)))"}, {"instr_func": "__chk_range_not_ok", "instr_loc": 20, "instr_file": "./arch/x86/include/asm/uaccess.h", "instr": "  store i64 %1, i64* %6, align 8"}, {"instr_func": "__chk_range_not_ok", "instr_loc": 32, "instr_file": "./arch/x86/include/asm/uaccess.h", "instr": "  %22 = load i64, i64* %6, align 8, !dbg !6963"}], "at_file": "./arch/x86/include/asm/uaccess.h", "by": "IntegerOverflowDetector says:", "at_func": "__chk_range_not_ok"}, "warn_no": 1},
{"warn_data": {"at_line": 29, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "  %14 = sub i64 %12, %13, !dbg !6961", "inst_trace": [{"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 464, "instr_file": "drivers/xen/privcmd.c", "instr": "if (copy_from_user(&m, udata, sizeof(struct privcmd_mmapbatch_v2)))"}, {"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 460, "instr_file": "drivers/xen/privcmd.c", "instr": "if (!access_ok(m.arr, m.num * sizeof(*m.arr)))"}, {"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 460, "instr_file": "drivers/xen/privcmd.c", "instr": "if (!access_ok(m.arr, m.num * sizeof(*m.arr)))"}, {"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 460, "instr_file": "drivers/xen/privcmd.c", "instr": "if (!access_ok(m.arr, m.num * sizeof(*m.arr)))"}, {"instr_func": "__chk_range_not_ok", "instr_loc": 20, "instr_file": "./arch/x86/include/asm/uaccess.h", "instr": "  store i64 %1, i64* %6, align 8"}, {"instr_func": "__chk_range_not_ok", "instr_loc": 29, "instr_file": "./arch/x86/include/asm/uaccess.h", "instr": "  %13 = load i64, i64* %6, align 8, !dbg !6961"}], "at_file": "./arch/x86/include/asm/uaccess.h", "by": "IntegerOverflowDetector says:", "at_func": "__chk_range_not_ok"}, "warn_no": 2}]},
{"num_warnings": 4,
"context":[{"lineno": -1, "instr": "  %4 = alloca %struct.file*, align 8"}, {"lineno": 855, "file": "drivers/xen/privcmd.c", "instr": "ret = privcmd_ioctl_mmap_batch(file, udata, 2);"}, {"lineno": 482, "file": "drivers/xen/privcmd.c", "instr": "ret = gather_array(&pagelist, m.num, sizeof(xen_pfn_t), m.arr);"}],
"warnings":[{"warn_data": {"at_line": 127, "warn_str": "Trying to use a global variable without locking.", "at": "pagedata = page_address(page);", "inst_trace": [{"instr_func": "privcmd_ioctl", "instr_loc": -1, "instr": "  %4 = alloca %struct.file*, align 8"}, {"instr_func": "privcmd_ioctl", "instr_loc": 855, "instr_file": "drivers/xen/privcmd.c", "instr": "ret = privcmd_ioctl_mmap_batch(file, udata, 2);"}, {"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 482, "instr_file": "drivers/xen/privcmd.c", "instr": "ret = gather_array(&pagelist, m.num, sizeof(xen_pfn_t), m.arr);"}], "at_file": "drivers/xen/privcmd.c", "by": "GlobalVariableRaceDetector says:", "at_func": "gather_array"}, "warn_no": 1},
{"warn_data": {"at_line": 119, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "while (nelem--) {", "inst_trace": [{"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 464, "instr_file": "drivers/xen/privcmd.c", "instr": "if (copy_from_user(&m, udata, sizeof(struct privcmd_mmapbatch_v2)))"}, {"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 482, "instr_file": "drivers/xen/privcmd.c", "instr": "ret = gather_array(&pagelist, m.num, sizeof(xen_pfn_t), m.arr);"}, {"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 482, "instr_file": "drivers/xen/privcmd.c", "instr": "ret = gather_array(&pagelist, m.num, sizeof(xen_pfn_t), m.arr);"}, {"instr_func": "gather_array", "instr_loc": 109, "instr_file": "drivers/xen/privcmd.c", "instr": "{"}, {"instr_func": "gather_array", "instr_loc": 119, "instr_file": "drivers/xen/privcmd.c", "instr": "while (nelem--) {"}], "at_file": "drivers/xen/privcmd.c", "by": "IntegerOverflowDetector says:", "at_func": "gather_array"}, "warn_no": 2},
{"warn_data": {"at_line": 119, "warn_str": "Loop is bounded by a tainted value.", "at": "while (nelem--) {", "inst_trace": [{"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 464, "instr_file": "drivers/xen/privcmd.c", "instr": "if (copy_from_user(&m, udata, sizeof(struct privcmd_mmapbatch_v2)))"}, {"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 482, "instr_file": "drivers/xen/privcmd.c", "instr": "ret = gather_array(&pagelist, m.num, sizeof(xen_pfn_t), m.arr);"}, {"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 482, "instr_file": "drivers/xen/privcmd.c", "instr": "ret = gather_array(&pagelist, m.num, sizeof(xen_pfn_t), m.arr);"}, {"instr_func": "gather_array", "instr_loc": 109, "instr_file": "drivers/xen/privcmd.c", "instr": "{"}, {"instr_func": "gather_array", "instr_loc": 119, "instr_file": "drivers/xen/privcmd.c", "instr": "while (nelem--) {"}, {"instr_func": "gather_array", "instr_loc": 119, "instr_file": "drivers/xen/privcmd.c", "instr": "while (nelem--) {"}], "at_file": "drivers/xen/privcmd.c", "by": "TaintedLoopBoundDetector says:", "at_func": "gather_array"}, "warn_no": 3},
{"warn_data": {"at_line": 133, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "ret = -EFAULT;", "inst_trace": [], "at_file": "drivers/xen/privcmd.c", "by": "TaintedSizeDetector says:", "at_func": "gather_array"}, "warn_no": 4}]},
{"num_warnings": 3,
"context":[{"lineno": -1, "instr": "  %4 = alloca %struct.file*, align 8"}, {"lineno": 855, "file": "drivers/xen/privcmd.c", "instr": "ret = privcmd_ioctl_mmap_batch(file, udata, 2);"}, {"lineno": 552, "file": "drivers/xen/privcmd.c", "instr": "BUG_ON(traverse_pages_block(m.num, sizeof(xen_pfn_t),"}],
"warnings":[{"warn_data": {"at_line": 203, "warn_str": "Trying to use a global variable without locking.", "at": "page = list_entry(pos, struct page, lru);", "inst_trace": [{"instr_func": "privcmd_ioctl", "instr_loc": -1, "instr": "  %4 = alloca %struct.file*, align 8"}, {"instr_func": "privcmd_ioctl", "instr_loc": 855, "instr_file": "drivers/xen/privcmd.c", "instr": "ret = privcmd_ioctl_mmap_batch(file, udata, 2);"}, {"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 552, "instr_file": "drivers/xen/privcmd.c", "instr": "BUG_ON(traverse_pages_block(m.num, sizeof(xen_pfn_t),"}], "at_file": "drivers/xen/privcmd.c", "by": "GlobalVariableRaceDetector says:", "at_func": "traverse_pages_block"}, "warn_no": 1},
{"warn_data": {"at_line": 208, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "nelem -= nr;", "inst_trace": [{"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 464, "instr_file": "drivers/xen/privcmd.c", "instr": "if (copy_from_user(&m, udata, sizeof(struct privcmd_mmapbatch_v2)))"}, {"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 552, "instr_file": "drivers/xen/privcmd.c", "instr": "BUG_ON(traverse_pages_block(m.num, sizeof(xen_pfn_t),"}, {"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 552, "instr_file": "drivers/xen/privcmd.c", "instr": "BUG_ON(traverse_pages_block(m.num, sizeof(xen_pfn_t),"}, {"instr_func": "traverse_pages_block", "instr_loc": 191, "instr_file": "drivers/xen/privcmd.c", "instr": "{"}, {"instr_func": "traverse_pages_block", "instr_loc": 208, "instr_file": "drivers/xen/privcmd.c", "instr": "nelem -= nr;"}], "at_file": "drivers/xen/privcmd.c", "by": "IntegerOverflowDetector says:", "at_func": "traverse_pages_block"}, "warn_no": 2},
{"warn_data": {"at_line": 197, "warn_str": "Loop is bounded by a tainted value.", "at": "while (nelem) {", "inst_trace": [{"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 464, "instr_file": "drivers/xen/privcmd.c", "instr": "if (copy_from_user(&m, udata, sizeof(struct privcmd_mmapbatch_v2)))"}, {"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 552, "instr_file": "drivers/xen/privcmd.c", "instr": "BUG_ON(traverse_pages_block(m.num, sizeof(xen_pfn_t),"}, {"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 552, "instr_file": "drivers/xen/privcmd.c", "instr": "BUG_ON(traverse_pages_block(m.num, sizeof(xen_pfn_t),"}, {"instr_func": "traverse_pages_block", "instr_loc": 191, "instr_file": "drivers/xen/privcmd.c", "instr": "{"}, {"instr_func": "traverse_pages_block", "instr_loc": 197, "instr_file": "drivers/xen/privcmd.c", "instr": "while (nelem) {"}, {"instr_func": "traverse_pages_block", "instr_loc": 197, "instr_file": "drivers/xen/privcmd.c", "instr": "while (nelem) {"}], "at_file": "drivers/xen/privcmd.c", "by": "TaintedLoopBoundDetector says:", "at_func": "traverse_pages_block"}, "warn_no": 3}]},
{"num_warnings": 2,
"context":[{"lineno": -1, "instr": "  %4 = alloca %struct.file*, align 8"}, {"lineno": 855, "file": "drivers/xen/privcmd.c", "instr": "ret = privcmd_ioctl_mmap_batch(file, udata, 2);"}, {"lineno": 552, "file": "drivers/xen/privcmd.c", "instr": "BUG_ON(traverse_pages_block(m.num, sizeof(xen_pfn_t),"}, {"lineno": 205, "file": "drivers/xen/privcmd.c", "instr": "ret = (*fn)(pagedata, nr, state);"}],
"warnings":[{"warn_data": {"at_line": 361, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "st->va += XEN_PAGE_SIZE * nr;", "inst_trace": [{"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 464, "instr_file": "drivers/xen/privcmd.c", "instr": "if (copy_from_user(&m, udata, sizeof(struct privcmd_mmapbatch_v2)))"}, {"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 552, "instr_file": "drivers/xen/privcmd.c", "instr": "BUG_ON(traverse_pages_block(m.num, sizeof(xen_pfn_t),"}, {"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 552, "instr_file": "drivers/xen/privcmd.c", "instr": "BUG_ON(traverse_pages_block(m.num, sizeof(xen_pfn_t),"}, {"instr_func": "traverse_pages_block", "instr_loc": 191, "instr_file": "drivers/xen/privcmd.c", "instr": "{"}, {"instr_func": "traverse_pages_block", "instr_loc": 208, "instr_file": "drivers/xen/privcmd.c", "instr": "nelem -= nr;"}, {"instr_func": "traverse_pages_block", "instr_loc": 208, "instr_file": "drivers/xen/privcmd.c", "instr": "nelem -= nr;"}, {"instr_func": "traverse_pages_block", "instr_loc": 208, "instr_file": "drivers/xen/privcmd.c", "instr": "nelem -= nr;"}, {"instr_func": "traverse_pages_block", "instr_loc": 201, "instr_file": "drivers/xen/privcmd.c", "instr": "nr = nelem;"}, {"instr_func": "traverse_pages_block", "instr_loc": 201, "instr_file": "drivers/xen/privcmd.c", "instr": "nr = nelem;"}, {"instr_func": "traverse_pages_block", "instr_loc": 205, "instr_file": "drivers/xen/privcmd.c", "instr": "ret = (*fn)(pagedata, nr, state);"}, {"instr_func": "traverse_pages_block", "instr_loc": 205, "instr_file": "drivers/xen/privcmd.c", "instr": "ret = (*fn)(pagedata, nr, state);"}, {"instr_func": "mmap_batch_fn", "instr_loc": 335, "instr_file": "drivers/xen/privcmd.c", "instr": "{"}, {"instr_func": "mmap_batch_fn", "instr_loc": 361, "instr_file": "drivers/xen/privcmd.c", "instr": "st->va += XEN_PAGE_SIZE * nr;"}, {"instr_func": "mmap_batch_fn", "instr_loc": 361, "instr_file": "drivers/xen/privcmd.c", "instr": "st->va += XEN_PAGE_SIZE * nr;"}], "at_file": "drivers/xen/privcmd.c", "by": "IntegerOverflowDetector says:", "at_func": "mmap_batch_fn"}, "warn_no": 1},
{"warn_data": {"at_line": 362, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "st->index += nr / XEN_PFN_PER_PAGE;", "inst_trace": [{"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 464, "instr_file": "drivers/xen/privcmd.c", "instr": "if (copy_from_user(&m, udata, sizeof(struct privcmd_mmapbatch_v2)))"}, {"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 552, "instr_file": "drivers/xen/privcmd.c", "instr": "BUG_ON(traverse_pages_block(m.num, sizeof(xen_pfn_t),"}, {"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 552, "instr_file": "drivers/xen/privcmd.c", "instr": "BUG_ON(traverse_pages_block(m.num, sizeof(xen_pfn_t),"}, {"instr_func": "traverse_pages_block", "instr_loc": 191, "instr_file": "drivers/xen/privcmd.c", "instr": "{"}, {"instr_func": "traverse_pages_block", "instr_loc": 208, "instr_file": "drivers/xen/privcmd.c", "instr": "nelem -= nr;"}, {"instr_func": "traverse_pages_block", "instr_loc": 208, "instr_file": "drivers/xen/privcmd.c", "instr": "nelem -= nr;"}, {"instr_func": "traverse_pages_block", "instr_loc": 208, "instr_file": "drivers/xen/privcmd.c", "instr": "nelem -= nr;"}, {"instr_func": "traverse_pages_block", "instr_loc": 201, "instr_file": "drivers/xen/privcmd.c", "instr": "nr = nelem;"}, {"instr_func": "traverse_pages_block", "instr_loc": 201, "instr_file": "drivers/xen/privcmd.c", "instr": "nr = nelem;"}, {"instr_func": "traverse_pages_block", "instr_loc": 205, "instr_file": "drivers/xen/privcmd.c", "instr": "ret = (*fn)(pagedata, nr, state);"}, {"instr_func": "traverse_pages_block", "instr_loc": 205, "instr_file": "drivers/xen/privcmd.c", "instr": "ret = (*fn)(pagedata, nr, state);"}, {"instr_func": "mmap_batch_fn", "instr_loc": 335, "instr_file": "drivers/xen/privcmd.c", "instr": "{"}, {"instr_func": "mmap_batch_fn", "instr_loc": 362, "instr_file": "drivers/xen/privcmd.c", "instr": "st->index += nr / XEN_PFN_PER_PAGE;"}, {"instr_func": "mmap_batch_fn", "instr_loc": 362, "instr_file": "drivers/xen/privcmd.c", "instr": "st->index += nr / XEN_PFN_PER_PAGE;"}], "at_file": "drivers/xen/privcmd.c", "by": "IntegerOverflowDetector says:", "at_func": "mmap_batch_fn"}, "warn_no": 2}]},
{"num_warnings": 2,
"context":[{"lineno": -1, "instr": "  %4 = alloca %struct.file*, align 8"}, {"lineno": 855, "file": "drivers/xen/privcmd.c", "instr": "ret = privcmd_ioctl_mmap_batch(file, udata, 2);"}, {"lineno": 561, "file": "drivers/xen/privcmd.c", "instr": "ret = traverse_pages_block(m.num, sizeof(xen_pfn_t),"}],
"warnings":[{"warn_data": {"at_line": 208, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "nelem -= nr;", "inst_trace": [{"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 464, "instr_file": "drivers/xen/privcmd.c", "instr": "if (copy_from_user(&m, udata, sizeof(struct privcmd_mmapbatch_v2)))"}, {"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 561, "instr_file": "drivers/xen/privcmd.c", "instr": "ret = traverse_pages_block(m.num, sizeof(xen_pfn_t),"}, {"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 561, "instr_file": "drivers/xen/privcmd.c", "instr": "ret = traverse_pages_block(m.num, sizeof(xen_pfn_t),"}, {"instr_func": "traverse_pages_block", "instr_loc": 191, "instr_file": "drivers/xen/privcmd.c", "instr": "{"}, {"instr_func": "traverse_pages_block", "instr_loc": 208, "instr_file": "drivers/xen/privcmd.c", "instr": "nelem -= nr;"}], "at_file": "drivers/xen/privcmd.c", "by": "IntegerOverflowDetector says:", "at_func": "traverse_pages_block"}, "warn_no": 1},
{"warn_data": {"at_line": 197, "warn_str": "Loop is bounded by a tainted value.", "at": "while (nelem) {", "inst_trace": [{"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 464, "instr_file": "drivers/xen/privcmd.c", "instr": "if (copy_from_user(&m, udata, sizeof(struct privcmd_mmapbatch_v2)))"}, {"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 561, "instr_file": "drivers/xen/privcmd.c", "instr": "ret = traverse_pages_block(m.num, sizeof(xen_pfn_t),"}, {"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 561, "instr_file": "drivers/xen/privcmd.c", "instr": "ret = traverse_pages_block(m.num, sizeof(xen_pfn_t),"}, {"instr_func": "traverse_pages_block", "instr_loc": 191, "instr_file": "drivers/xen/privcmd.c", "instr": "{"}, {"instr_func": "traverse_pages_block", "instr_loc": 197, "instr_file": "drivers/xen/privcmd.c", "instr": "while (nelem) {"}, {"instr_func": "traverse_pages_block", "instr_loc": 197, "instr_file": "drivers/xen/privcmd.c", "instr": "while (nelem) {"}], "at_file": "drivers/xen/privcmd.c", "by": "TaintedLoopBoundDetector says:", "at_func": "traverse_pages_block"}, "warn_no": 2}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %4 = alloca %struct.file*, align 8"}, {"lineno": 855, "file": "drivers/xen/privcmd.c", "instr": "ret = privcmd_ioctl_mmap_batch(file, udata, 2);"}, {"lineno": 561, "file": "drivers/xen/privcmd.c", "instr": "ret = traverse_pages_block(m.num, sizeof(xen_pfn_t),"}, {"lineno": 205, "file": "drivers/xen/privcmd.c", "instr": "ret = (*fn)(pagedata, nr, state);"}],
"warnings":[{"warn_data": {"at_line": 406, "warn_str": "Loop is bounded by a tainted value.", "at": "for (i = 0; i < nr; i++) {", "inst_trace": [{"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 464, "instr_file": "drivers/xen/privcmd.c", "instr": "if (copy_from_user(&m, udata, sizeof(struct privcmd_mmapbatch_v2)))"}, {"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 561, "instr_file": "drivers/xen/privcmd.c", "instr": "ret = traverse_pages_block(m.num, sizeof(xen_pfn_t),"}, {"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 561, "instr_file": "drivers/xen/privcmd.c", "instr": "ret = traverse_pages_block(m.num, sizeof(xen_pfn_t),"}, {"instr_func": "traverse_pages_block", "instr_loc": 191, "instr_file": "drivers/xen/privcmd.c", "instr": "{"}, {"instr_func": "traverse_pages_block", "instr_loc": 208, "instr_file": "drivers/xen/privcmd.c", "instr": "nelem -= nr;"}, {"instr_func": "traverse_pages_block", "instr_loc": 208, "instr_file": "drivers/xen/privcmd.c", "instr": "nelem -= nr;"}, {"instr_func": "traverse_pages_block", "instr_loc": 208, "instr_file": "drivers/xen/privcmd.c", "instr": "nelem -= nr;"}, {"instr_func": "traverse_pages_block", "instr_loc": 201, "instr_file": "drivers/xen/privcmd.c", "instr": "nr = nelem;"}, {"instr_func": "traverse_pages_block", "instr_loc": 201, "instr_file": "drivers/xen/privcmd.c", "instr": "nr = nelem;"}, {"instr_func": "traverse_pages_block", "instr_loc": 205, "instr_file": "drivers/xen/privcmd.c", "instr": "ret = (*fn)(pagedata, nr, state);"}, {"instr_func": "traverse_pages_block", "instr_loc": 205, "instr_file": "drivers/xen/privcmd.c", "instr": "ret = (*fn)(pagedata, nr, state);"}, {"instr_func": "mmap_return_errors", "instr_loc": 400, "instr_file": "drivers/xen/privcmd.c", "instr": "{"}, {"instr_func": "mmap_return_errors", "instr_loc": 406, "instr_file": "drivers/xen/privcmd.c", "instr": "for (i = 0; i < nr; i++) {"}, {"instr_func": "mmap_return_errors", "instr_loc": 406, "instr_file": "drivers/xen/privcmd.c", "instr": "for (i = 0; i < nr; i++) {"}], "at_file": "drivers/xen/privcmd.c", "by": "TaintedLoopBoundDetector says:", "at_func": "mmap_return_errors"}, "warn_no": 1}]},
{"num_warnings": 6,
"context":[{"lineno": -1, "instr": "  %4 = alloca %struct.file*, align 8"}, {"lineno": 851, "file": "drivers/xen/privcmd.c", "instr": "ret = privcmd_ioctl_mmap_batch(file, udata, 1);"}],
"warnings":[{"warn_data": {"at_line": 464, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "if (copy_from_user(&m, udata, sizeof(struct privcmd_mmapbatch_v2)))", "inst_trace": [], "at_file": "drivers/xen/privcmd.c", "by": "TaintedSizeDetector says:", "at_func": "privcmd_ioctl_mmap_batch"}, "warn_no": 1},
{"warn_data": {"at_line": 456, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "if (copy_from_user(&m, udata, sizeof(struct privcmd_mmapbatch)))", "inst_trace": [], "at_file": "drivers/xen/privcmd.c", "by": "TaintedSizeDetector says:", "at_func": "privcmd_ioctl_mmap_batch"}, "warn_no": 2},
{"warn_data": {"at_line": 478, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "nr_pages = DIV_ROUND_UP(m.num, XEN_PFN_PER_PAGE);", "inst_trace": [{"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 464, "instr_file": "drivers/xen/privcmd.c", "instr": "if (copy_from_user(&m, udata, sizeof(struct privcmd_mmapbatch_v2)))"}, {"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 478, "instr_file": "drivers/xen/privcmd.c", "instr": "nr_pages = DIV_ROUND_UP(m.num, XEN_PFN_PER_PAGE);"}], "at_file": "drivers/xen/privcmd.c", "by": "IntegerOverflowDetector says:", "at_func": "privcmd_ioctl_mmap_batch"}, "warn_no": 3},
{"warn_data": {"at_line": 478, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "nr_pages = DIV_ROUND_UP(m.num, XEN_PFN_PER_PAGE);", "inst_trace": [{"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 464, "instr_file": "drivers/xen/privcmd.c", "instr": "if (copy_from_user(&m, udata, sizeof(struct privcmd_mmapbatch_v2)))"}, {"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 478, "instr_file": "drivers/xen/privcmd.c", "instr": "nr_pages = DIV_ROUND_UP(m.num, XEN_PFN_PER_PAGE);"}, {"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 478, "instr_file": "drivers/xen/privcmd.c", "instr": "nr_pages = DIV_ROUND_UP(m.num, XEN_PFN_PER_PAGE);"}], "at_file": "drivers/xen/privcmd.c", "by": "IntegerOverflowDetector says:", "at_func": "privcmd_ioctl_mmap_batch"}, "warn_no": 4},
{"warn_data": {"at_line": 533, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "m.addr + (nr_pages << PAGE_SHIFT) > vma->vm_end) {", "inst_trace": [{"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 464, "instr_file": "drivers/xen/privcmd.c", "instr": "if (copy_from_user(&m, udata, sizeof(struct privcmd_mmapbatch_v2)))"}, {"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 533, "instr_file": "drivers/xen/privcmd.c", "instr": "m.addr + (nr_pages << PAGE_SHIFT) > vma->vm_end) {"}], "at_file": "drivers/xen/privcmd.c", "by": "IntegerOverflowDetector says:", "at_func": "privcmd_ioctl_mmap_batch"}, "warn_no": 5},
{"warn_data": {"at_line": 521, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "m.addr + (nr_pages << PAGE_SHIFT) != vma->vm_end) {", "inst_trace": [{"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 464, "instr_file": "drivers/xen/privcmd.c", "instr": "if (copy_from_user(&m, udata, sizeof(struct privcmd_mmapbatch_v2)))"}, {"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 521, "instr_file": "drivers/xen/privcmd.c", "instr": "m.addr + (nr_pages << PAGE_SHIFT) != vma->vm_end) {"}], "at_file": "drivers/xen/privcmd.c", "by": "IntegerOverflowDetector says:", "at_func": "privcmd_ioctl_mmap_batch"}, "warn_no": 6}]},
{"num_warnings": 2,
"context":[{"lineno": -1, "instr": "  %4 = alloca %struct.file*, align 8"}, {"lineno": 851, "file": "drivers/xen/privcmd.c", "instr": "ret = privcmd_ioctl_mmap_batch(file, udata, 1);"}, {"lineno": 467, "file": "drivers/xen/privcmd.c", "instr": "if (!access_ok(m.err, m.num * (sizeof(*m.err))))"}],
"warnings":[{"warn_data": {"at_line": 32, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "  %24 = add i64 %23, %22, !dbg !6964", "inst_trace": [{"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 464, "instr_file": "drivers/xen/privcmd.c", "instr": "if (copy_from_user(&m, udata, sizeof(struct privcmd_mmapbatch_v2)))"}, {"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 467, "instr_file": "drivers/xen/privcmd.c", "instr": "if (!access_ok(m.err, m.num * (sizeof(*m.err))))"}, {"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 467, "instr_file": "drivers/xen/privcmd.c", "instr": "if (!access_ok(m.err, m.num * (sizeof(*m.err))))"}, {"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 467, "instr_file": "drivers/xen/privcmd.c", "instr": "if (!access_ok(m.err, m.num * (sizeof(*m.err))))"}, {"instr_func": "__chk_range_not_ok", "instr_loc": 20, "instr_file": "./arch/x86/include/asm/uaccess.h", "instr": "  store i64 %1, i64* %6, align 8"}, {"instr_func": "__chk_range_not_ok", "instr_loc": 32, "instr_file": "./arch/x86/include/asm/uaccess.h", "instr": "  %22 = load i64, i64* %6, align 8, !dbg !6963"}], "at_file": "./arch/x86/include/asm/uaccess.h", "by": "IntegerOverflowDetector says:", "at_func": "__chk_range_not_ok"}, "warn_no": 1},
{"warn_data": {"at_line": 29, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "  %14 = sub i64 %12, %13, !dbg !6961", "inst_trace": [{"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 464, "instr_file": "drivers/xen/privcmd.c", "instr": "if (copy_from_user(&m, udata, sizeof(struct privcmd_mmapbatch_v2)))"}, {"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 467, "instr_file": "drivers/xen/privcmd.c", "instr": "if (!access_ok(m.err, m.num * (sizeof(*m.err))))"}, {"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 467, "instr_file": "drivers/xen/privcmd.c", "instr": "if (!access_ok(m.err, m.num * (sizeof(*m.err))))"}, {"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 467, "instr_file": "drivers/xen/privcmd.c", "instr": "if (!access_ok(m.err, m.num * (sizeof(*m.err))))"}, {"instr_func": "__chk_range_not_ok", "instr_loc": 20, "instr_file": "./arch/x86/include/asm/uaccess.h", "instr": "  store i64 %1, i64* %6, align 8"}, {"instr_func": "__chk_range_not_ok", "instr_loc": 29, "instr_file": "./arch/x86/include/asm/uaccess.h", "instr": "  %13 = load i64, i64* %6, align 8, !dbg !6961"}], "at_file": "./arch/x86/include/asm/uaccess.h", "by": "IntegerOverflowDetector says:", "at_func": "__chk_range_not_ok"}, "warn_no": 2}]},
{"num_warnings": 2,
"context":[{"lineno": -1, "instr": "  %4 = alloca %struct.file*, align 8"}, {"lineno": 851, "file": "drivers/xen/privcmd.c", "instr": "ret = privcmd_ioctl_mmap_batch(file, udata, 1);"}, {"lineno": 460, "file": "drivers/xen/privcmd.c", "instr": "if (!access_ok(m.arr, m.num * sizeof(*m.arr)))"}],
"warnings":[{"warn_data": {"at_line": 32, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "  %24 = add i64 %23, %22, !dbg !6964", "inst_trace": [{"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 464, "instr_file": "drivers/xen/privcmd.c", "instr": "if (copy_from_user(&m, udata, sizeof(struct privcmd_mmapbatch_v2)))"}, {"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 460, "instr_file": "drivers/xen/privcmd.c", "instr": "if (!access_ok(m.arr, m.num * sizeof(*m.arr)))"}, {"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 460, "instr_file": "drivers/xen/privcmd.c", "instr": "if (!access_ok(m.arr, m.num * sizeof(*m.arr)))"}, {"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 460, "instr_file": "drivers/xen/privcmd.c", "instr": "if (!access_ok(m.arr, m.num * sizeof(*m.arr)))"}, {"instr_func": "__chk_range_not_ok", "instr_loc": 20, "instr_file": "./arch/x86/include/asm/uaccess.h", "instr": "  store i64 %1, i64* %6, align 8"}, {"instr_func": "__chk_range_not_ok", "instr_loc": 32, "instr_file": "./arch/x86/include/asm/uaccess.h", "instr": "  %22 = load i64, i64* %6, align 8, !dbg !6963"}], "at_file": "./arch/x86/include/asm/uaccess.h", "by": "IntegerOverflowDetector says:", "at_func": "__chk_range_not_ok"}, "warn_no": 1},
{"warn_data": {"at_line": 29, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "  %14 = sub i64 %12, %13, !dbg !6961", "inst_trace": [{"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 464, "instr_file": "drivers/xen/privcmd.c", "instr": "if (copy_from_user(&m, udata, sizeof(struct privcmd_mmapbatch_v2)))"}, {"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 460, "instr_file": "drivers/xen/privcmd.c", "instr": "if (!access_ok(m.arr, m.num * sizeof(*m.arr)))"}, {"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 460, "instr_file": "drivers/xen/privcmd.c", "instr": "if (!access_ok(m.arr, m.num * sizeof(*m.arr)))"}, {"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 460, "instr_file": "drivers/xen/privcmd.c", "instr": "if (!access_ok(m.arr, m.num * sizeof(*m.arr)))"}, {"instr_func": "__chk_range_not_ok", "instr_loc": 20, "instr_file": "./arch/x86/include/asm/uaccess.h", "instr": "  store i64 %1, i64* %6, align 8"}, {"instr_func": "__chk_range_not_ok", "instr_loc": 29, "instr_file": "./arch/x86/include/asm/uaccess.h", "instr": "  %13 = load i64, i64* %6, align 8, !dbg !6961"}], "at_file": "./arch/x86/include/asm/uaccess.h", "by": "IntegerOverflowDetector says:", "at_func": "__chk_range_not_ok"}, "warn_no": 2}]},
{"num_warnings": 3,
"context":[{"lineno": -1, "instr": "  %4 = alloca %struct.file*, align 8"}, {"lineno": 851, "file": "drivers/xen/privcmd.c", "instr": "ret = privcmd_ioctl_mmap_batch(file, udata, 1);"}, {"lineno": 482, "file": "drivers/xen/privcmd.c", "instr": "ret = gather_array(&pagelist, m.num, sizeof(xen_pfn_t), m.arr);"}],
"warnings":[{"warn_data": {"at_line": 119, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "while (nelem--) {", "inst_trace": [{"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 464, "instr_file": "drivers/xen/privcmd.c", "instr": "if (copy_from_user(&m, udata, sizeof(struct privcmd_mmapbatch_v2)))"}, {"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 482, "instr_file": "drivers/xen/privcmd.c", "instr": "ret = gather_array(&pagelist, m.num, sizeof(xen_pfn_t), m.arr);"}, {"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 482, "instr_file": "drivers/xen/privcmd.c", "instr": "ret = gather_array(&pagelist, m.num, sizeof(xen_pfn_t), m.arr);"}, {"instr_func": "gather_array", "instr_loc": 109, "instr_file": "drivers/xen/privcmd.c", "instr": "{"}, {"instr_func": "gather_array", "instr_loc": 119, "instr_file": "drivers/xen/privcmd.c", "instr": "while (nelem--) {"}], "at_file": "drivers/xen/privcmd.c", "by": "IntegerOverflowDetector says:", "at_func": "gather_array"}, "warn_no": 1},
{"warn_data": {"at_line": 119, "warn_str": "Loop is bounded by a tainted value.", "at": "while (nelem--) {", "inst_trace": [{"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 464, "instr_file": "drivers/xen/privcmd.c", "instr": "if (copy_from_user(&m, udata, sizeof(struct privcmd_mmapbatch_v2)))"}, {"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 482, "instr_file": "drivers/xen/privcmd.c", "instr": "ret = gather_array(&pagelist, m.num, sizeof(xen_pfn_t), m.arr);"}, {"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 482, "instr_file": "drivers/xen/privcmd.c", "instr": "ret = gather_array(&pagelist, m.num, sizeof(xen_pfn_t), m.arr);"}, {"instr_func": "gather_array", "instr_loc": 109, "instr_file": "drivers/xen/privcmd.c", "instr": "{"}, {"instr_func": "gather_array", "instr_loc": 119, "instr_file": "drivers/xen/privcmd.c", "instr": "while (nelem--) {"}, {"instr_func": "gather_array", "instr_loc": 119, "instr_file": "drivers/xen/privcmd.c", "instr": "while (nelem--) {"}], "at_file": "drivers/xen/privcmd.c", "by": "TaintedLoopBoundDetector says:", "at_func": "gather_array"}, "warn_no": 2},
{"warn_data": {"at_line": 133, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "ret = -EFAULT;", "inst_trace": [], "at_file": "drivers/xen/privcmd.c", "by": "TaintedSizeDetector says:", "at_func": "gather_array"}, "warn_no": 3}]},
{"num_warnings": 2,
"context":[{"lineno": -1, "instr": "  %4 = alloca %struct.file*, align 8"}, {"lineno": 851, "file": "drivers/xen/privcmd.c", "instr": "ret = privcmd_ioctl_mmap_batch(file, udata, 1);"}, {"lineno": 552, "file": "drivers/xen/privcmd.c", "instr": "BUG_ON(traverse_pages_block(m.num, sizeof(xen_pfn_t),"}],
"warnings":[{"warn_data": {"at_line": 208, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "nelem -= nr;", "inst_trace": [{"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 464, "instr_file": "drivers/xen/privcmd.c", "instr": "if (copy_from_user(&m, udata, sizeof(struct privcmd_mmapbatch_v2)))"}, {"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 552, "instr_file": "drivers/xen/privcmd.c", "instr": "BUG_ON(traverse_pages_block(m.num, sizeof(xen_pfn_t),"}, {"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 552, "instr_file": "drivers/xen/privcmd.c", "instr": "BUG_ON(traverse_pages_block(m.num, sizeof(xen_pfn_t),"}, {"instr_func": "traverse_pages_block", "instr_loc": 191, "instr_file": "drivers/xen/privcmd.c", "instr": "{"}, {"instr_func": "traverse_pages_block", "instr_loc": 208, "instr_file": "drivers/xen/privcmd.c", "instr": "nelem -= nr;"}], "at_file": "drivers/xen/privcmd.c", "by": "IntegerOverflowDetector says:", "at_func": "traverse_pages_block"}, "warn_no": 1},
{"warn_data": {"at_line": 197, "warn_str": "Loop is bounded by a tainted value.", "at": "while (nelem) {", "inst_trace": [{"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 464, "instr_file": "drivers/xen/privcmd.c", "instr": "if (copy_from_user(&m, udata, sizeof(struct privcmd_mmapbatch_v2)))"}, {"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 552, "instr_file": "drivers/xen/privcmd.c", "instr": "BUG_ON(traverse_pages_block(m.num, sizeof(xen_pfn_t),"}, {"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 552, "instr_file": "drivers/xen/privcmd.c", "instr": "BUG_ON(traverse_pages_block(m.num, sizeof(xen_pfn_t),"}, {"instr_func": "traverse_pages_block", "instr_loc": 191, "instr_file": "drivers/xen/privcmd.c", "instr": "{"}, {"instr_func": "traverse_pages_block", "instr_loc": 197, "instr_file": "drivers/xen/privcmd.c", "instr": "while (nelem) {"}, {"instr_func": "traverse_pages_block", "instr_loc": 197, "instr_file": "drivers/xen/privcmd.c", "instr": "while (nelem) {"}], "at_file": "drivers/xen/privcmd.c", "by": "TaintedLoopBoundDetector says:", "at_func": "traverse_pages_block"}, "warn_no": 2}]},
{"num_warnings": 2,
"context":[{"lineno": -1, "instr": "  %4 = alloca %struct.file*, align 8"}, {"lineno": 851, "file": "drivers/xen/privcmd.c", "instr": "ret = privcmd_ioctl_mmap_batch(file, udata, 1);"}, {"lineno": 552, "file": "drivers/xen/privcmd.c", "instr": "BUG_ON(traverse_pages_block(m.num, sizeof(xen_pfn_t),"}, {"lineno": 205, "file": "drivers/xen/privcmd.c", "instr": "ret = (*fn)(pagedata, nr, state);"}],
"warnings":[{"warn_data": {"at_line": 361, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "st->va += XEN_PAGE_SIZE * nr;", "inst_trace": [{"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 464, "instr_file": "drivers/xen/privcmd.c", "instr": "if (copy_from_user(&m, udata, sizeof(struct privcmd_mmapbatch_v2)))"}, {"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 552, "instr_file": "drivers/xen/privcmd.c", "instr": "BUG_ON(traverse_pages_block(m.num, sizeof(xen_pfn_t),"}, {"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 552, "instr_file": "drivers/xen/privcmd.c", "instr": "BUG_ON(traverse_pages_block(m.num, sizeof(xen_pfn_t),"}, {"instr_func": "traverse_pages_block", "instr_loc": 191, "instr_file": "drivers/xen/privcmd.c", "instr": "{"}, {"instr_func": "traverse_pages_block", "instr_loc": 208, "instr_file": "drivers/xen/privcmd.c", "instr": "nelem -= nr;"}, {"instr_func": "traverse_pages_block", "instr_loc": 208, "instr_file": "drivers/xen/privcmd.c", "instr": "nelem -= nr;"}, {"instr_func": "traverse_pages_block", "instr_loc": 208, "instr_file": "drivers/xen/privcmd.c", "instr": "nelem -= nr;"}, {"instr_func": "traverse_pages_block", "instr_loc": 201, "instr_file": "drivers/xen/privcmd.c", "instr": "nr = nelem;"}, {"instr_func": "traverse_pages_block", "instr_loc": 201, "instr_file": "drivers/xen/privcmd.c", "instr": "nr = nelem;"}, {"instr_func": "traverse_pages_block", "instr_loc": 205, "instr_file": "drivers/xen/privcmd.c", "instr": "ret = (*fn)(pagedata, nr, state);"}, {"instr_func": "traverse_pages_block", "instr_loc": 205, "instr_file": "drivers/xen/privcmd.c", "instr": "ret = (*fn)(pagedata, nr, state);"}, {"instr_func": "mmap_batch_fn", "instr_loc": 335, "instr_file": "drivers/xen/privcmd.c", "instr": "{"}, {"instr_func": "mmap_batch_fn", "instr_loc": 361, "instr_file": "drivers/xen/privcmd.c", "instr": "st->va += XEN_PAGE_SIZE * nr;"}, {"instr_func": "mmap_batch_fn", "instr_loc": 361, "instr_file": "drivers/xen/privcmd.c", "instr": "st->va += XEN_PAGE_SIZE * nr;"}], "at_file": "drivers/xen/privcmd.c", "by": "IntegerOverflowDetector says:", "at_func": "mmap_batch_fn"}, "warn_no": 1},
{"warn_data": {"at_line": 362, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "st->index += nr / XEN_PFN_PER_PAGE;", "inst_trace": [{"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 464, "instr_file": "drivers/xen/privcmd.c", "instr": "if (copy_from_user(&m, udata, sizeof(struct privcmd_mmapbatch_v2)))"}, {"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 552, "instr_file": "drivers/xen/privcmd.c", "instr": "BUG_ON(traverse_pages_block(m.num, sizeof(xen_pfn_t),"}, {"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 552, "instr_file": "drivers/xen/privcmd.c", "instr": "BUG_ON(traverse_pages_block(m.num, sizeof(xen_pfn_t),"}, {"instr_func": "traverse_pages_block", "instr_loc": 191, "instr_file": "drivers/xen/privcmd.c", "instr": "{"}, {"instr_func": "traverse_pages_block", "instr_loc": 208, "instr_file": "drivers/xen/privcmd.c", "instr": "nelem -= nr;"}, {"instr_func": "traverse_pages_block", "instr_loc": 208, "instr_file": "drivers/xen/privcmd.c", "instr": "nelem -= nr;"}, {"instr_func": "traverse_pages_block", "instr_loc": 208, "instr_file": "drivers/xen/privcmd.c", "instr": "nelem -= nr;"}, {"instr_func": "traverse_pages_block", "instr_loc": 201, "instr_file": "drivers/xen/privcmd.c", "instr": "nr = nelem;"}, {"instr_func": "traverse_pages_block", "instr_loc": 201, "instr_file": "drivers/xen/privcmd.c", "instr": "nr = nelem;"}, {"instr_func": "traverse_pages_block", "instr_loc": 205, "instr_file": "drivers/xen/privcmd.c", "instr": "ret = (*fn)(pagedata, nr, state);"}, {"instr_func": "traverse_pages_block", "instr_loc": 205, "instr_file": "drivers/xen/privcmd.c", "instr": "ret = (*fn)(pagedata, nr, state);"}, {"instr_func": "mmap_batch_fn", "instr_loc": 335, "instr_file": "drivers/xen/privcmd.c", "instr": "{"}, {"instr_func": "mmap_batch_fn", "instr_loc": 362, "instr_file": "drivers/xen/privcmd.c", "instr": "st->index += nr / XEN_PFN_PER_PAGE;"}, {"instr_func": "mmap_batch_fn", "instr_loc": 362, "instr_file": "drivers/xen/privcmd.c", "instr": "st->index += nr / XEN_PFN_PER_PAGE;"}], "at_file": "drivers/xen/privcmd.c", "by": "IntegerOverflowDetector says:", "at_func": "mmap_batch_fn"}, "warn_no": 2}]},
{"num_warnings": 2,
"context":[{"lineno": -1, "instr": "  %4 = alloca %struct.file*, align 8"}, {"lineno": 851, "file": "drivers/xen/privcmd.c", "instr": "ret = privcmd_ioctl_mmap_batch(file, udata, 1);"}, {"lineno": 561, "file": "drivers/xen/privcmd.c", "instr": "ret = traverse_pages_block(m.num, sizeof(xen_pfn_t),"}],
"warnings":[{"warn_data": {"at_line": 208, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "nelem -= nr;", "inst_trace": [{"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 464, "instr_file": "drivers/xen/privcmd.c", "instr": "if (copy_from_user(&m, udata, sizeof(struct privcmd_mmapbatch_v2)))"}, {"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 561, "instr_file": "drivers/xen/privcmd.c", "instr": "ret = traverse_pages_block(m.num, sizeof(xen_pfn_t),"}, {"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 561, "instr_file": "drivers/xen/privcmd.c", "instr": "ret = traverse_pages_block(m.num, sizeof(xen_pfn_t),"}, {"instr_func": "traverse_pages_block", "instr_loc": 191, "instr_file": "drivers/xen/privcmd.c", "instr": "{"}, {"instr_func": "traverse_pages_block", "instr_loc": 208, "instr_file": "drivers/xen/privcmd.c", "instr": "nelem -= nr;"}], "at_file": "drivers/xen/privcmd.c", "by": "IntegerOverflowDetector says:", "at_func": "traverse_pages_block"}, "warn_no": 1},
{"warn_data": {"at_line": 197, "warn_str": "Loop is bounded by a tainted value.", "at": "while (nelem) {", "inst_trace": [{"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 464, "instr_file": "drivers/xen/privcmd.c", "instr": "if (copy_from_user(&m, udata, sizeof(struct privcmd_mmapbatch_v2)))"}, {"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 561, "instr_file": "drivers/xen/privcmd.c", "instr": "ret = traverse_pages_block(m.num, sizeof(xen_pfn_t),"}, {"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 561, "instr_file": "drivers/xen/privcmd.c", "instr": "ret = traverse_pages_block(m.num, sizeof(xen_pfn_t),"}, {"instr_func": "traverse_pages_block", "instr_loc": 191, "instr_file": "drivers/xen/privcmd.c", "instr": "{"}, {"instr_func": "traverse_pages_block", "instr_loc": 197, "instr_file": "drivers/xen/privcmd.c", "instr": "while (nelem) {"}, {"instr_func": "traverse_pages_block", "instr_loc": 197, "instr_file": "drivers/xen/privcmd.c", "instr": "while (nelem) {"}], "at_file": "drivers/xen/privcmd.c", "by": "TaintedLoopBoundDetector says:", "at_func": "traverse_pages_block"}, "warn_no": 2}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %4 = alloca %struct.file*, align 8"}, {"lineno": 851, "file": "drivers/xen/privcmd.c", "instr": "ret = privcmd_ioctl_mmap_batch(file, udata, 1);"}, {"lineno": 561, "file": "drivers/xen/privcmd.c", "instr": "ret = traverse_pages_block(m.num, sizeof(xen_pfn_t),"}, {"lineno": 205, "file": "drivers/xen/privcmd.c", "instr": "ret = (*fn)(pagedata, nr, state);"}],
"warnings":[{"warn_data": {"at_line": 406, "warn_str": "Loop is bounded by a tainted value.", "at": "for (i = 0; i < nr; i++) {", "inst_trace": [{"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 464, "instr_file": "drivers/xen/privcmd.c", "instr": "if (copy_from_user(&m, udata, sizeof(struct privcmd_mmapbatch_v2)))"}, {"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 561, "instr_file": "drivers/xen/privcmd.c", "instr": "ret = traverse_pages_block(m.num, sizeof(xen_pfn_t),"}, {"instr_func": "privcmd_ioctl_mmap_batch", "instr_loc": 561, "instr_file": "drivers/xen/privcmd.c", "instr": "ret = traverse_pages_block(m.num, sizeof(xen_pfn_t),"}, {"instr_func": "traverse_pages_block", "instr_loc": 191, "instr_file": "drivers/xen/privcmd.c", "instr": "{"}, {"instr_func": "traverse_pages_block", "instr_loc": 208, "instr_file": "drivers/xen/privcmd.c", "instr": "nelem -= nr;"}, {"instr_func": "traverse_pages_block", "instr_loc": 208, "instr_file": "drivers/xen/privcmd.c", "instr": "nelem -= nr;"}, {"instr_func": "traverse_pages_block", "instr_loc": 208, "instr_file": "drivers/xen/privcmd.c", "instr": "nelem -= nr;"}, {"instr_func": "traverse_pages_block", "instr_loc": 201, "instr_file": "drivers/xen/privcmd.c", "instr": "nr = nelem;"}, {"instr_func": "traverse_pages_block", "instr_loc": 201, "instr_file": "drivers/xen/privcmd.c", "instr": "nr = nelem;"}, {"instr_func": "traverse_pages_block", "instr_loc": 205, "instr_file": "drivers/xen/privcmd.c", "instr": "ret = (*fn)(pagedata, nr, state);"}, {"instr_func": "traverse_pages_block", "instr_loc": 205, "instr_file": "drivers/xen/privcmd.c", "instr": "ret = (*fn)(pagedata, nr, state);"}, {"instr_func": "mmap_return_errors", "instr_loc": 400, "instr_file": "drivers/xen/privcmd.c", "instr": "{"}, {"instr_func": "mmap_return_errors", "instr_loc": 406, "instr_file": "drivers/xen/privcmd.c", "instr": "for (i = 0; i < nr; i++) {"}, {"instr_func": "mmap_return_errors", "instr_loc": 406, "instr_file": "drivers/xen/privcmd.c", "instr": "for (i = 0; i < nr; i++) {"}], "at_file": "drivers/xen/privcmd.c", "by": "TaintedLoopBoundDetector says:", "at_func": "mmap_return_errors"}, "warn_no": 1}]},
{"num_warnings": 2,
"context":[{"lineno": -1, "instr": "  %4 = alloca %struct.file*, align 8"}, {"lineno": 847, "file": "drivers/xen/privcmd.c", "instr": "ret = privcmd_ioctl_mmap(file, udata);"}],
"warnings":[{"warn_data": {"at_line": 264, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "if (copy_from_user(&mmapcmd, udata, sizeof(mmapcmd)))", "inst_trace": [], "at_file": "drivers/xen/privcmd.c", "by": "TaintedSizeDetector says:", "at_func": "privcmd_ioctl_mmap"}, "warn_no": 1},
{"warn_data": {"at_line": 281, "warn_str": "Trying to use a global variable without locking.", "at": "struct page *page = list_first_entry(&pagelist,", "inst_trace": [{"instr_func": "privcmd_ioctl", "instr_loc": -1, "instr": "  %4 = alloca %struct.file*, align 8"}, {"instr_func": "privcmd_ioctl", "instr_loc": 847, "instr_file": "drivers/xen/privcmd.c", "instr": "ret = privcmd_ioctl_mmap(file, udata);"}], "at_file": "drivers/xen/privcmd.c", "by": "GlobalVariableRaceDetector says:", "at_func": "privcmd_ioctl_mmap"}, "warn_no": 2}]},
{"num_warnings": 3,
"context":[{"lineno": -1, "instr": "  %4 = alloca %struct.file*, align 8"}, {"lineno": 847, "file": "drivers/xen/privcmd.c", "instr": "ret = privcmd_ioctl_mmap(file, udata);"}, {"lineno": 271, "file": "drivers/xen/privcmd.c", "instr": "rc = gather_array(&pagelist,"}],
"warnings":[{"warn_data": {"at_line": 119, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "while (nelem--) {", "inst_trace": [{"instr_func": "privcmd_ioctl_mmap", "instr_loc": 264, "instr_file": "drivers/xen/privcmd.c", "instr": "if (copy_from_user(&mmapcmd, udata, sizeof(mmapcmd)))"}, {"instr_func": "privcmd_ioctl_mmap", "instr_loc": 272, "instr_file": "drivers/xen/privcmd.c", "instr": "mmapcmd.num, sizeof(struct privcmd_mmap_entry),"}, {"instr_func": "privcmd_ioctl_mmap", "instr_loc": 271, "instr_file": "drivers/xen/privcmd.c", "instr": "rc = gather_array(&pagelist,"}, {"instr_func": "gather_array", "instr_loc": 109, "instr_file": "drivers/xen/privcmd.c", "instr": "{"}, {"instr_func": "gather_array", "instr_loc": 119, "instr_file": "drivers/xen/privcmd.c", "instr": "while (nelem--) {"}], "at_file": "drivers/xen/privcmd.c", "by": "IntegerOverflowDetector says:", "at_func": "gather_array"}, "warn_no": 1},
{"warn_data": {"at_line": 119, "warn_str": "Loop is bounded by a tainted value.", "at": "while (nelem--) {", "inst_trace": [{"instr_func": "privcmd_ioctl_mmap", "instr_loc": 264, "instr_file": "drivers/xen/privcmd.c", "instr": "if (copy_from_user(&mmapcmd, udata, sizeof(mmapcmd)))"}, {"instr_func": "privcmd_ioctl_mmap", "instr_loc": 272, "instr_file": "drivers/xen/privcmd.c", "instr": "mmapcmd.num, sizeof(struct privcmd_mmap_entry),"}, {"instr_func": "privcmd_ioctl_mmap", "instr_loc": 271, "instr_file": "drivers/xen/privcmd.c", "instr": "rc = gather_array(&pagelist,"}, {"instr_func": "gather_array", "instr_loc": 109, "instr_file": "drivers/xen/privcmd.c", "instr": "{"}, {"instr_func": "gather_array", "instr_loc": 119, "instr_file": "drivers/xen/privcmd.c", "instr": "while (nelem--) {"}, {"instr_func": "gather_array", "instr_loc": 119, "instr_file": "drivers/xen/privcmd.c", "instr": "while (nelem--) {"}], "at_file": "drivers/xen/privcmd.c", "by": "TaintedLoopBoundDetector says:", "at_func": "gather_array"}, "warn_no": 2},
{"warn_data": {"at_line": 133, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "ret = -EFAULT;", "inst_trace": [], "at_file": "drivers/xen/privcmd.c", "by": "TaintedSizeDetector says:", "at_func": "gather_array"}, "warn_no": 3}]},
{"num_warnings": 3,
"context":[{"lineno": -1, "instr": "  %4 = alloca %struct.file*, align 8"}, {"lineno": 847, "file": "drivers/xen/privcmd.c", "instr": "ret = privcmd_ioctl_mmap(file, udata);"}, {"lineno": 297, "file": "drivers/xen/privcmd.c", "instr": "rc = traverse_pages(mmapcmd.num, sizeof(struct privcmd_mmap_entry),"}],
"warnings":[{"warn_data": {"at_line": 169, "warn_str": "Trying to use a global variable without locking.", "at": "page = list_entry(pos, struct page, lru);", "inst_trace": [{"instr_func": "privcmd_ioctl", "instr_loc": -1, "instr": "  %4 = alloca %struct.file*, align 8"}, {"instr_func": "privcmd_ioctl", "instr_loc": 847, "instr_file": "drivers/xen/privcmd.c", "instr": "ret = privcmd_ioctl_mmap(file, udata);"}, {"instr_func": "privcmd_ioctl_mmap", "instr_loc": 297, "instr_file": "drivers/xen/privcmd.c", "instr": "rc = traverse_pages(mmapcmd.num, sizeof(struct privcmd_mmap_entry),"}], "at_file": "drivers/xen/privcmd.c", "by": "GlobalVariableRaceDetector says:", "at_func": "traverse_pages"}, "warn_no": 1},
{"warn_data": {"at_line": 165, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "while (nelem--) {", "inst_trace": [{"instr_func": "privcmd_ioctl_mmap", "instr_loc": 264, "instr_file": "drivers/xen/privcmd.c", "instr": "if (copy_from_user(&mmapcmd, udata, sizeof(mmapcmd)))"}, {"instr_func": "privcmd_ioctl_mmap", "instr_loc": 297, "instr_file": "drivers/xen/privcmd.c", "instr": "rc = traverse_pages(mmapcmd.num, sizeof(struct privcmd_mmap_entry),"}, {"instr_func": "privcmd_ioctl_mmap", "instr_loc": 297, "instr_file": "drivers/xen/privcmd.c", "instr": "rc = traverse_pages(mmapcmd.num, sizeof(struct privcmd_mmap_entry),"}, {"instr_func": "traverse_pages", "instr_loc": 155, "instr_file": "drivers/xen/privcmd.c", "instr": "{"}, {"instr_func": "traverse_pages", "instr_loc": 165, "instr_file": "drivers/xen/privcmd.c", "instr": "while (nelem--) {"}], "at_file": "drivers/xen/privcmd.c", "by": "IntegerOverflowDetector says:", "at_func": "traverse_pages"}, "warn_no": 2},
{"warn_data": {"at_line": 165, "warn_str": "Loop is bounded by a tainted value.", "at": "while (nelem--) {", "inst_trace": [{"instr_func": "privcmd_ioctl_mmap", "instr_loc": 264, "instr_file": "drivers/xen/privcmd.c", "instr": "if (copy_from_user(&mmapcmd, udata, sizeof(mmapcmd)))"}, {"instr_func": "privcmd_ioctl_mmap", "instr_loc": 297, "instr_file": "drivers/xen/privcmd.c", "instr": "rc = traverse_pages(mmapcmd.num, sizeof(struct privcmd_mmap_entry),"}, {"instr_func": "privcmd_ioctl_mmap", "instr_loc": 297, "instr_file": "drivers/xen/privcmd.c", "instr": "rc = traverse_pages(mmapcmd.num, sizeof(struct privcmd_mmap_entry),"}, {"instr_func": "traverse_pages", "instr_loc": 155, "instr_file": "drivers/xen/privcmd.c", "instr": "{"}, {"instr_func": "traverse_pages", "instr_loc": 165, "instr_file": "drivers/xen/privcmd.c", "instr": "while (nelem--) {"}, {"instr_func": "traverse_pages", "instr_loc": 165, "instr_file": "drivers/xen/privcmd.c", "instr": "while (nelem--) {"}], "at_file": "drivers/xen/privcmd.c", "by": "TaintedLoopBoundDetector says:", "at_func": "traverse_pages"}, "warn_no": 3}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %4 = alloca %struct.file*, align 8"}, {"lineno": 843, "file": "drivers/xen/privcmd.c", "instr": "ret = privcmd_ioctl_hypercall(file, udata);"}],
"warnings":[{"warn_data": {"at_line": 77, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "if (copy_from_user(&hypercall, udata, sizeof(hypercall)))", "inst_trace": [], "at_file": "drivers/xen/privcmd.c", "by": "TaintedSizeDetector says:", "at_func": "privcmd_ioctl_hypercall"}, "warn_no": 1}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %4 = alloca %struct.file*, align 8"}, {"lineno": 843, "file": "drivers/xen/privcmd.c", "instr": "ret = privcmd_ioctl_hypercall(file, udata);"}, {"lineno": 81, "file": "drivers/xen/privcmd.c", "instr": "ret = privcmd_call(hypercall.op,"}, {"lineno": 245, "file": "./arch/x86/include/asm/xen/hypercall.h", "instr": "  %20 = call i64 @xen_single_call(i32 %14, i64 %15, i64 %16, i64 %17, i64 %18, i64 %19) #14, !dbg !6975"}],
"warnings":[{"warn_data": {"at_line": 214, "warn_str": "Trying to use a global variable without locking.", "at": "  %46 = getelementptr [0 x %struct.anon.100], [0 x %struct.anon.100]* @hypercall_page, i64 0, i64 %45, !dbg !6980", "inst_trace": [{"instr_func": "privcmd_ioctl", "instr_loc": -1, "instr": "  %4 = alloca %struct.file*, align 8"}, {"instr_func": "privcmd_ioctl", "instr_loc": 843, "instr_file": "drivers/xen/privcmd.c", "instr": "ret = privcmd_ioctl_hypercall(file, udata);"}, {"instr_func": "privcmd_ioctl_hypercall", "instr_loc": 81, "instr_file": "drivers/xen/privcmd.c", "instr": "ret = privcmd_call(hypercall.op,"}, {"instr_func": "privcmd_call", "instr_loc": 245, "instr_file": "./arch/x86/include/asm/xen/hypercall.h", "instr": "  %20 = call i64 @xen_single_call(i32 %14, i64 %15, i64 %16, i64 %17, i64 %18, i64 %19) #14, !dbg !6975"}], "at_file": "./arch/x86/include/asm/xen/hypercall.h", "by": "GlobalVariableRaceDetector says:", "at_func": "xen_single_call"}, "warn_no": 1}]}]}