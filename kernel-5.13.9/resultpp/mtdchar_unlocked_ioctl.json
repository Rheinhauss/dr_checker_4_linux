{"all_contexts":[
{"num_warnings": 21,
"context":[{"lineno": -1, "instr": "  %4 = alloca %struct.file*, align 8"}, {"lineno": 1033, "file": "drivers/mtd/mtdchar.c", "instr": "ret = mtdchar_ioctl(file, cmd, arg);"}],
"warnings":[{"warn_data": {"at_line": 1004, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "struct blkpg_ioctl_arg __user *blk_arg = argp;", "inst_trace": [], "at_file": "drivers/mtd/mtdchar.c", "by": "TaintedSizeDetector says:", "at_func": "mtdchar_ioctl"}, "warn_no": 1},
{"warn_data": {"at_line": 971, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "if (copy_to_user(argp, &mtd->ecc_stats,", "inst_trace": [], "at_file": "drivers/mtd/mtdchar.c", "by": "TaintedSizeDetector says:", "at_func": "mtdchar_ioctl"}, "warn_no": 2},
{"warn_data": {"at_line": 925, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "ret = copy_to_user(argp, buf, retlen);", "inst_trace": [], "at_file": "drivers/mtd/mtdchar.c", "by": "TaintedSizeDetector says:", "at_func": "mtdchar_ioctl"}, "warn_no": 3},
{"warn_data": {"at_line": 961, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "shrink_ecclayout(mtd, usrlay);", "inst_trace": [], "at_file": "drivers/mtd/mtdchar.c", "by": "TaintedSizeDetector says:", "at_func": "mtdchar_ioctl"}, "warn_no": 4},
{"warn_data": {"at_line": 940, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "if (copy_from_user(&oinfo, argp, sizeof(oinfo)))", "inst_trace": [], "at_file": "drivers/mtd/mtdchar.c", "by": "TaintedSizeDetector says:", "at_func": "mtdchar_ioctl"}, "warn_no": 5},
{"warn_data": {"at_line": 881, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "loff_t offs;", "inst_trace": [], "at_file": "drivers/mtd/mtdchar.c", "by": "TaintedSizeDetector says:", "at_func": "mtdchar_ioctl"}, "warn_no": 6},
{"warn_data": {"at_line": 922, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "int nbr = retlen / sizeof(struct otp_info);", "inst_trace": [], "at_file": "drivers/mtd/mtdchar.c", "by": "TaintedSizeDetector says:", "at_func": "mtdchar_ioctl"}, "warn_no": 7},
{"warn_data": {"at_line": 890, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "int mode;", "inst_trace": [], "at_file": "drivers/mtd/mtdchar.c", "by": "TaintedSizeDetector says:", "at_func": "mtdchar_ioctl"}, "warn_no": 8},
{"warn_data": {"at_line": 865, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "if (copy_to_user(argp, &oi, sizeof(struct nand_oobinfo)))", "inst_trace": [], "at_file": "drivers/mtd/mtdchar.c", "by": "TaintedSizeDetector says:", "at_func": "mtdchar_ioctl"}, "warn_no": 9},
{"warn_data": {"at_line": 872, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "loff_t offs;", "inst_trace": [], "at_file": "drivers/mtd/mtdchar.c", "by": "TaintedSizeDetector says:", "at_func": "mtdchar_ioctl"}, "warn_no": 10},
{"warn_data": {"at_line": 801, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "struct mtd_oob_buf64 buf;", "inst_trace": [], "at_file": "drivers/mtd/mtdchar.c", "by": "TaintedSizeDetector says:", "at_func": "mtdchar_ioctl"}, "warn_no": 11},
{"warn_data": {"at_line": 844, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "struct erase_info_user einfo;", "inst_trace": [], "at_file": "drivers/mtd/mtdchar.c", "by": "TaintedSizeDetector says:", "at_func": "mtdchar_ioctl"}, "warn_no": 12},
{"warn_data": {"at_line": 833, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "struct erase_info_user einfo;", "inst_trace": [], "at_file": "drivers/mtd/mtdchar.c", "by": "TaintedSizeDetector says:", "at_func": "mtdchar_ioctl"}, "warn_no": 13},
{"warn_data": {"at_line": 822, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "struct erase_info_user einfo;", "inst_trace": [], "at_file": "drivers/mtd/mtdchar.c", "by": "TaintedSizeDetector says:", "at_func": "mtdchar_ioctl"}, "warn_no": 14},
{"warn_data": {"at_line": 787, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "struct mtd_oob_buf64 buf;", "inst_trace": [], "at_file": "drivers/mtd/mtdchar.c", "by": "TaintedSizeDetector says:", "at_func": "mtdchar_ioctl"}, "warn_no": 15},
{"warn_data": {"at_line": 773, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "struct mtd_oob_buf buf;", "inst_trace": [], "at_file": "drivers/mtd/mtdchar.c", "by": "TaintedSizeDetector says:", "at_func": "mtdchar_ioctl"}, "warn_no": 16},
{"warn_data": {"at_line": 759, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "struct mtd_oob_buf buf;", "inst_trace": [], "at_file": "drivers/mtd/mtdchar.c", "by": "TaintedSizeDetector says:", "at_func": "mtdchar_ioctl"}, "warn_no": 17},
{"warn_data": {"at_line": 740, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "struct erase_info_user einfo32;", "inst_trace": [], "at_file": "drivers/mtd/mtdchar.c", "by": "TaintedSizeDetector says:", "at_func": "mtdchar_ioctl"}, "warn_no": 18},
{"warn_data": {"at_line": 730, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "struct erase_info_user64 einfo64;", "inst_trace": [], "at_file": "drivers/mtd/mtdchar.c", "by": "TaintedSizeDetector says:", "at_func": "mtdchar_ioctl"}, "warn_no": 19},
{"warn_data": {"at_line": 707, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "memset(&info, 0, sizeof(info));", "inst_trace": [], "at_file": "drivers/mtd/mtdchar.c", "by": "TaintedSizeDetector says:", "at_func": "mtdchar_ioctl"}, "warn_no": 20},
{"warn_data": {"at_line": 680, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "if (copy_to_user(argp, &(mtd->numeraseregions), sizeof(int)))", "inst_trace": [], "at_file": "drivers/mtd/mtdchar.c", "by": "TaintedSizeDetector says:", "at_func": "mtdchar_ioctl"}, "warn_no": 21}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %4 = alloca %struct.file*, align 8"}, {"lineno": 1033, "file": "drivers/mtd/mtdchar.c", "instr": "ret = mtdchar_ioctl(file, cmd, arg);"}, {"lineno": 1010, "file": "drivers/mtd/mtdchar.c", "instr": "ret = mtdchar_blkpg_ioctl(mtd, &a);"}],
"warnings":[{"warn_data": {"at_line": 549, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "if (copy_from_user(&p, arg->data, sizeof(p)))", "inst_trace": [], "at_file": "drivers/mtd/mtdchar.c", "by": "TaintedSizeDetector says:", "at_func": "mtdchar_blkpg_ioctl"}, "warn_no": 1}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %4 = alloca %struct.file*, align 8"}, {"lineno": 1033, "file": "drivers/mtd/mtdchar.c", "instr": "ret = mtdchar_ioctl(file, cmd, arg);"}, {"lineno": 815, "file": "drivers/mtd/mtdchar.c", "instr": "ret = mtdchar_write_ioctl(mtd,"}],
"warnings":[{"warn_data": {"at_line": 578, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "{", "inst_trace": [], "at_file": "drivers/mtd/mtdchar.c", "by": "TaintedSizeDetector says:", "at_func": "mtdchar_write_ioctl"}, "warn_no": 1}]},
{"num_warnings": 7,
"context":[{"lineno": -1, "instr": "  %4 = alloca %struct.file*, align 8"}, {"lineno": 1033, "file": "drivers/mtd/mtdchar.c", "instr": "ret = mtdchar_ioctl(file, cmd, arg);"}, {"lineno": 807, "file": "drivers/mtd/mtdchar.c", "instr": "ret = mtdchar_readoob(file, mtd, buf.start, buf.length,"}],
"warnings":[{"warn_data": {"at_line": 399, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "if (ops.ooboffs && ops.ooblen > (mtd->oobsize - ops.ooboffs))", "inst_trace": [{"instr_func": "mtdchar_ioctl", "instr_loc": 801, "instr_file": "drivers/mtd/mtdchar.c", "instr": "struct mtd_oob_buf64 buf;"}, {"instr_func": "mtdchar_ioctl", "instr_loc": 807, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ret = mtdchar_readoob(file, mtd, buf.start, buf.length,"}, {"instr_func": "mtdchar_ioctl", "instr_loc": 807, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ret = mtdchar_readoob(file, mtd, buf.start, buf.length,"}, {"instr_func": "mtdchar_readoob", "instr_loc": 385, "instr_file": "drivers/mtd/mtdchar.c", "instr": "{"}, {"instr_func": "mtdchar_readoob", "instr_loc": 394, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.ooboffs = start & (mtd->writesize - 1);"}, {"instr_func": "mtdchar_readoob", "instr_loc": 394, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.ooboffs = start & (mtd->writesize - 1);"}, {"instr_func": "mtdchar_readoob", "instr_loc": 394, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.ooboffs = start & (mtd->writesize - 1);"}, {"instr_func": "mtdchar_readoob", "instr_loc": 394, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.ooboffs = start & (mtd->writesize - 1);"}, {"instr_func": "mtdchar_readoob", "instr_loc": 399, "instr_file": "drivers/mtd/mtdchar.c", "instr": "if (ops.ooboffs && ops.ooblen > (mtd->oobsize - ops.ooboffs))"}], "at_file": "drivers/mtd/mtdchar.c", "by": "IntegerOverflowDetector says:", "at_func": "mtdchar_readoob"}, "warn_no": 1},
{"warn_data": {"at_line": 402, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "ops.oobbuf = kmalloc(length, GFP_KERNEL);", "inst_trace": [{"instr_func": "mtdchar_ioctl", "instr_loc": 801, "instr_file": "drivers/mtd/mtdchar.c", "instr": "struct mtd_oob_buf64 buf;"}, {"instr_func": "mtdchar_ioctl", "instr_loc": 807, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ret = mtdchar_readoob(file, mtd, buf.start, buf.length,"}, {"instr_func": "mtdchar_ioctl", "instr_loc": 807, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ret = mtdchar_readoob(file, mtd, buf.start, buf.length,"}, {"instr_func": "mtdchar_readoob", "instr_loc": 385, "instr_file": "drivers/mtd/mtdchar.c", "instr": "{"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}], "at_file": "drivers/mtd/mtdchar.c", "by": "IntegerOverflowDetector says:", "at_func": "mtdchar_readoob"}, "warn_no": 2},
{"warn_data": {"at_line": 402, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "ops.oobbuf = kmalloc(length, GFP_KERNEL);", "inst_trace": [{"instr_func": "mtdchar_ioctl", "instr_loc": 801, "instr_file": "drivers/mtd/mtdchar.c", "instr": "struct mtd_oob_buf64 buf;"}, {"instr_func": "mtdchar_ioctl", "instr_loc": 807, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ret = mtdchar_readoob(file, mtd, buf.start, buf.length,"}, {"instr_func": "mtdchar_ioctl", "instr_loc": 807, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ret = mtdchar_readoob(file, mtd, buf.start, buf.length,"}, {"instr_func": "mtdchar_readoob", "instr_loc": 385, "instr_file": "drivers/mtd/mtdchar.c", "instr": "{"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}], "at_file": "drivers/mtd/mtdchar.c", "by": "IntegerOverflowDetector says:", "at_func": "mtdchar_readoob"}, "warn_no": 3},
{"warn_data": {"at_line": 402, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "ops.oobbuf = kmalloc(length, GFP_KERNEL);", "inst_trace": [{"instr_func": "mtdchar_ioctl", "instr_loc": 801, "instr_file": "drivers/mtd/mtdchar.c", "instr": "struct mtd_oob_buf64 buf;"}, {"instr_func": "mtdchar_ioctl", "instr_loc": 807, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ret = mtdchar_readoob(file, mtd, buf.start, buf.length,"}, {"instr_func": "mtdchar_ioctl", "instr_loc": 807, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ret = mtdchar_readoob(file, mtd, buf.start, buf.length,"}, {"instr_func": "mtdchar_readoob", "instr_loc": 385, "instr_file": "drivers/mtd/mtdchar.c", "instr": "{"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}], "at_file": "drivers/mtd/mtdchar.c", "by": "IntegerOverflowDetector says:", "at_func": "mtdchar_readoob"}, "warn_no": 4},
{"warn_data": {"at_line": 402, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "ops.oobbuf = kmalloc(length, GFP_KERNEL);", "inst_trace": [{"instr_func": "mtdchar_ioctl", "instr_loc": 801, "instr_file": "drivers/mtd/mtdchar.c", "instr": "struct mtd_oob_buf64 buf;"}, {"instr_func": "mtdchar_ioctl", "instr_loc": 807, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ret = mtdchar_readoob(file, mtd, buf.start, buf.length,"}, {"instr_func": "mtdchar_ioctl", "instr_loc": 807, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ret = mtdchar_readoob(file, mtd, buf.start, buf.length,"}, {"instr_func": "mtdchar_readoob", "instr_loc": 385, "instr_file": "drivers/mtd/mtdchar.c", "instr": "{"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}], "at_file": "drivers/mtd/mtdchar.c", "by": "IntegerOverflowDetector says:", "at_func": "mtdchar_readoob"}, "warn_no": 5},
{"warn_data": {"at_line": 402, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "ops.oobbuf = kmalloc(length, GFP_KERNEL);", "inst_trace": [{"instr_func": "mtdchar_ioctl", "instr_loc": 801, "instr_file": "drivers/mtd/mtdchar.c", "instr": "struct mtd_oob_buf64 buf;"}, {"instr_func": "mtdchar_ioctl", "instr_loc": 807, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ret = mtdchar_readoob(file, mtd, buf.start, buf.length,"}, {"instr_func": "mtdchar_ioctl", "instr_loc": 807, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ret = mtdchar_readoob(file, mtd, buf.start, buf.length,"}, {"instr_func": "mtdchar_readoob", "instr_loc": 385, "instr_file": "drivers/mtd/mtdchar.c", "instr": "{"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}], "at_file": "drivers/mtd/mtdchar.c", "by": "IntegerOverflowDetector says:", "at_func": "mtdchar_readoob"}, "warn_no": 6},
{"warn_data": {"at_line": 411, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "else if (ops.oobretlen && copy_to_user(ptr, ops.oobbuf,", "inst_trace": [], "at_file": "drivers/mtd/mtdchar.c", "by": "TaintedSizeDetector says:", "at_func": "mtdchar_readoob"}, "warn_no": 7}]},
{"num_warnings": 2,
"context":[{"lineno": -1, "instr": "  %4 = alloca %struct.file*, align 8"}, {"lineno": 1033, "file": "drivers/mtd/mtdchar.c", "instr": "ret = mtdchar_ioctl(file, cmd, arg);"}, {"lineno": 793, "file": "drivers/mtd/mtdchar.c", "instr": "ret = mtdchar_writeoob(file, mtd, buf.start, buf.length,"}],
"warnings":[{"warn_data": {"at_line": 362, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "if (ops.ooboffs && ops.ooblen > (mtd->oobsize - ops.ooboffs))", "inst_trace": [{"instr_func": "mtdchar_ioctl", "instr_loc": 787, "instr_file": "drivers/mtd/mtdchar.c", "instr": "struct mtd_oob_buf64 buf;"}, {"instr_func": "mtdchar_ioctl", "instr_loc": 793, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ret = mtdchar_writeoob(file, mtd, buf.start, buf.length,"}, {"instr_func": "mtdchar_ioctl", "instr_loc": 793, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ret = mtdchar_writeoob(file, mtd, buf.start, buf.length,"}, {"instr_func": "mtdchar_writeoob", "instr_loc": 343, "instr_file": "drivers/mtd/mtdchar.c", "instr": "{"}, {"instr_func": "mtdchar_writeoob", "instr_loc": 357, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.ooboffs = start & (mtd->writesize - 1);"}, {"instr_func": "mtdchar_writeoob", "instr_loc": 357, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.ooboffs = start & (mtd->writesize - 1);"}, {"instr_func": "mtdchar_writeoob", "instr_loc": 357, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.ooboffs = start & (mtd->writesize - 1);"}, {"instr_func": "mtdchar_writeoob", "instr_loc": 357, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.ooboffs = start & (mtd->writesize - 1);"}, {"instr_func": "mtdchar_writeoob", "instr_loc": 362, "instr_file": "drivers/mtd/mtdchar.c", "instr": "if (ops.ooboffs && ops.ooblen > (mtd->oobsize - ops.ooboffs))"}], "at_file": "drivers/mtd/mtdchar.c", "by": "IntegerOverflowDetector says:", "at_func": "mtdchar_writeoob"}, "warn_no": 1},
{"warn_data": {"at_line": 374, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "retlen = ops.oobretlen;", "inst_trace": [], "at_file": "drivers/mtd/mtdchar.c", "by": "TaintedSizeDetector says:", "at_func": "mtdchar_writeoob"}, "warn_no": 2}]},
{"num_warnings": 7,
"context":[{"lineno": -1, "instr": "  %4 = alloca %struct.file*, align 8"}, {"lineno": 1033, "file": "drivers/mtd/mtdchar.c", "instr": "ret = mtdchar_ioctl(file, cmd, arg);"}, {"lineno": 780, "file": "drivers/mtd/mtdchar.c", "instr": "ret = mtdchar_readoob(file, mtd, buf.start, buf.length,"}],
"warnings":[{"warn_data": {"at_line": 399, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "if (ops.ooboffs && ops.ooblen > (mtd->oobsize - ops.ooboffs))", "inst_trace": [{"instr_func": "mtdchar_ioctl", "instr_loc": 773, "instr_file": "drivers/mtd/mtdchar.c", "instr": "struct mtd_oob_buf buf;"}, {"instr_func": "mtdchar_ioctl", "instr_loc": 780, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ret = mtdchar_readoob(file, mtd, buf.start, buf.length,"}, {"instr_func": "mtdchar_ioctl", "instr_loc": 780, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ret = mtdchar_readoob(file, mtd, buf.start, buf.length,"}, {"instr_func": "mtdchar_readoob", "instr_loc": 385, "instr_file": "drivers/mtd/mtdchar.c", "instr": "{"}, {"instr_func": "mtdchar_readoob", "instr_loc": 394, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.ooboffs = start & (mtd->writesize - 1);"}, {"instr_func": "mtdchar_readoob", "instr_loc": 394, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.ooboffs = start & (mtd->writesize - 1);"}, {"instr_func": "mtdchar_readoob", "instr_loc": 394, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.ooboffs = start & (mtd->writesize - 1);"}, {"instr_func": "mtdchar_readoob", "instr_loc": 394, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.ooboffs = start & (mtd->writesize - 1);"}, {"instr_func": "mtdchar_readoob", "instr_loc": 399, "instr_file": "drivers/mtd/mtdchar.c", "instr": "if (ops.ooboffs && ops.ooblen > (mtd->oobsize - ops.ooboffs))"}], "at_file": "drivers/mtd/mtdchar.c", "by": "IntegerOverflowDetector says:", "at_func": "mtdchar_readoob"}, "warn_no": 1},
{"warn_data": {"at_line": 402, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "ops.oobbuf = kmalloc(length, GFP_KERNEL);", "inst_trace": [{"instr_func": "mtdchar_ioctl", "instr_loc": 773, "instr_file": "drivers/mtd/mtdchar.c", "instr": "struct mtd_oob_buf buf;"}, {"instr_func": "mtdchar_ioctl", "instr_loc": 780, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ret = mtdchar_readoob(file, mtd, buf.start, buf.length,"}, {"instr_func": "mtdchar_ioctl", "instr_loc": 780, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ret = mtdchar_readoob(file, mtd, buf.start, buf.length,"}, {"instr_func": "mtdchar_readoob", "instr_loc": 385, "instr_file": "drivers/mtd/mtdchar.c", "instr": "{"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}], "at_file": "drivers/mtd/mtdchar.c", "by": "IntegerOverflowDetector says:", "at_func": "mtdchar_readoob"}, "warn_no": 2},
{"warn_data": {"at_line": 402, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "ops.oobbuf = kmalloc(length, GFP_KERNEL);", "inst_trace": [{"instr_func": "mtdchar_ioctl", "instr_loc": 773, "instr_file": "drivers/mtd/mtdchar.c", "instr": "struct mtd_oob_buf buf;"}, {"instr_func": "mtdchar_ioctl", "instr_loc": 780, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ret = mtdchar_readoob(file, mtd, buf.start, buf.length,"}, {"instr_func": "mtdchar_ioctl", "instr_loc": 780, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ret = mtdchar_readoob(file, mtd, buf.start, buf.length,"}, {"instr_func": "mtdchar_readoob", "instr_loc": 385, "instr_file": "drivers/mtd/mtdchar.c", "instr": "{"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}], "at_file": "drivers/mtd/mtdchar.c", "by": "IntegerOverflowDetector says:", "at_func": "mtdchar_readoob"}, "warn_no": 3},
{"warn_data": {"at_line": 402, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "ops.oobbuf = kmalloc(length, GFP_KERNEL);", "inst_trace": [{"instr_func": "mtdchar_ioctl", "instr_loc": 773, "instr_file": "drivers/mtd/mtdchar.c", "instr": "struct mtd_oob_buf buf;"}, {"instr_func": "mtdchar_ioctl", "instr_loc": 780, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ret = mtdchar_readoob(file, mtd, buf.start, buf.length,"}, {"instr_func": "mtdchar_ioctl", "instr_loc": 780, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ret = mtdchar_readoob(file, mtd, buf.start, buf.length,"}, {"instr_func": "mtdchar_readoob", "instr_loc": 385, "instr_file": "drivers/mtd/mtdchar.c", "instr": "{"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}], "at_file": "drivers/mtd/mtdchar.c", "by": "IntegerOverflowDetector says:", "at_func": "mtdchar_readoob"}, "warn_no": 4},
{"warn_data": {"at_line": 402, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "ops.oobbuf = kmalloc(length, GFP_KERNEL);", "inst_trace": [{"instr_func": "mtdchar_ioctl", "instr_loc": 773, "instr_file": "drivers/mtd/mtdchar.c", "instr": "struct mtd_oob_buf buf;"}, {"instr_func": "mtdchar_ioctl", "instr_loc": 780, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ret = mtdchar_readoob(file, mtd, buf.start, buf.length,"}, {"instr_func": "mtdchar_ioctl", "instr_loc": 780, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ret = mtdchar_readoob(file, mtd, buf.start, buf.length,"}, {"instr_func": "mtdchar_readoob", "instr_loc": 385, "instr_file": "drivers/mtd/mtdchar.c", "instr": "{"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}], "at_file": "drivers/mtd/mtdchar.c", "by": "IntegerOverflowDetector says:", "at_func": "mtdchar_readoob"}, "warn_no": 5},
{"warn_data": {"at_line": 402, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "ops.oobbuf = kmalloc(length, GFP_KERNEL);", "inst_trace": [{"instr_func": "mtdchar_ioctl", "instr_loc": 773, "instr_file": "drivers/mtd/mtdchar.c", "instr": "struct mtd_oob_buf buf;"}, {"instr_func": "mtdchar_ioctl", "instr_loc": 780, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ret = mtdchar_readoob(file, mtd, buf.start, buf.length,"}, {"instr_func": "mtdchar_ioctl", "instr_loc": 780, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ret = mtdchar_readoob(file, mtd, buf.start, buf.length,"}, {"instr_func": "mtdchar_readoob", "instr_loc": 385, "instr_file": "drivers/mtd/mtdchar.c", "instr": "{"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}, {"instr_func": "mtdchar_readoob", "instr_loc": 402, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.oobbuf = kmalloc(length, GFP_KERNEL);"}], "at_file": "drivers/mtd/mtdchar.c", "by": "IntegerOverflowDetector says:", "at_func": "mtdchar_readoob"}, "warn_no": 6},
{"warn_data": {"at_line": 411, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "else if (ops.oobretlen && copy_to_user(ptr, ops.oobbuf,", "inst_trace": [], "at_file": "drivers/mtd/mtdchar.c", "by": "TaintedSizeDetector says:", "at_func": "mtdchar_readoob"}, "warn_no": 7}]},
{"num_warnings": 2,
"context":[{"lineno": -1, "instr": "  %4 = alloca %struct.file*, align 8"}, {"lineno": 1033, "file": "drivers/mtd/mtdchar.c", "instr": "ret = mtdchar_ioctl(file, cmd, arg);"}, {"lineno": 766, "file": "drivers/mtd/mtdchar.c", "instr": "ret = mtdchar_writeoob(file, mtd, buf.start, buf.length,"}],
"warnings":[{"warn_data": {"at_line": 362, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "if (ops.ooboffs && ops.ooblen > (mtd->oobsize - ops.ooboffs))", "inst_trace": [{"instr_func": "mtdchar_ioctl", "instr_loc": 759, "instr_file": "drivers/mtd/mtdchar.c", "instr": "struct mtd_oob_buf buf;"}, {"instr_func": "mtdchar_ioctl", "instr_loc": 766, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ret = mtdchar_writeoob(file, mtd, buf.start, buf.length,"}, {"instr_func": "mtdchar_ioctl", "instr_loc": 766, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ret = mtdchar_writeoob(file, mtd, buf.start, buf.length,"}, {"instr_func": "mtdchar_writeoob", "instr_loc": 343, "instr_file": "drivers/mtd/mtdchar.c", "instr": "{"}, {"instr_func": "mtdchar_writeoob", "instr_loc": 357, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.ooboffs = start & (mtd->writesize - 1);"}, {"instr_func": "mtdchar_writeoob", "instr_loc": 357, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.ooboffs = start & (mtd->writesize - 1);"}, {"instr_func": "mtdchar_writeoob", "instr_loc": 357, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.ooboffs = start & (mtd->writesize - 1);"}, {"instr_func": "mtdchar_writeoob", "instr_loc": 357, "instr_file": "drivers/mtd/mtdchar.c", "instr": "ops.ooboffs = start & (mtd->writesize - 1);"}, {"instr_func": "mtdchar_writeoob", "instr_loc": 362, "instr_file": "drivers/mtd/mtdchar.c", "instr": "if (ops.ooboffs && ops.ooblen > (mtd->oobsize - ops.ooboffs))"}], "at_file": "drivers/mtd/mtdchar.c", "by": "IntegerOverflowDetector says:", "at_func": "mtdchar_writeoob"}, "warn_no": 1},
{"warn_data": {"at_line": 374, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "retlen = ops.oobretlen;", "inst_trace": [], "at_file": "drivers/mtd/mtdchar.c", "by": "TaintedSizeDetector says:", "at_func": "mtdchar_writeoob"}, "warn_no": 2}]}]}