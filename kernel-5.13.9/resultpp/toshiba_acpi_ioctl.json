{"all_contexts":[
{"num_warnings": 5,
"context":[{"lineno": -1, "instr": "  %4 = alloca i8*, align 8"}],
"warnings":[{"warn_data": {"at_line": 2540, "warn_str": "Trying to use a global variable without locking.", "at": "if (!sci_open(toshiba_acpi))", "inst_trace": [{"instr_func": "toshiba_acpi_ioctl", "instr_loc": -1, "instr": "  %4 = alloca i8*, align 8"}], "at_file": "drivers/platform/x86/toshiba_acpi.c", "by": "GlobalVariableRaceDetector says:", "at_func": "toshiba_acpi_ioctl"}, "warn_no": 1},
{"warn_data": {"at_line": 2535, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "if (copy_from_user(&regs, argp, sizeof(SMMRegisters)))", "inst_trace": [], "at_file": "drivers/platform/x86/toshiba_acpi.c", "by": "TaintedSizeDetector says:", "at_func": "toshiba_acpi_ioctl"}, "warn_no": 2},
{"warn_data": {"at_line": 2546, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "if (copy_to_user(argp, &regs, sizeof(SMMRegisters)))", "inst_trace": [], "at_file": "drivers/platform/x86/toshiba_acpi.c", "by": "TaintedSizeDetector says:", "at_func": "toshiba_acpi_ioctl"}, "warn_no": 3},
{"warn_data": {"at_line": 2531, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "if (copy_to_user(argp, &regs, sizeof(SMMRegisters)))", "inst_trace": [], "at_file": "drivers/platform/x86/toshiba_acpi.c", "by": "TaintedSizeDetector says:", "at_func": "toshiba_acpi_ioctl"}, "warn_no": 4},
{"warn_data": {"at_line": 2526, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "if (copy_from_user(&regs, argp, sizeof(SMMRegisters)))", "inst_trace": [], "at_file": "drivers/platform/x86/toshiba_acpi.c", "by": "TaintedSizeDetector says:", "at_func": "toshiba_acpi_ioctl"}, "warn_no": 5}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %4 = alloca i8*, align 8"}, {"lineno": 2542, "file": "drivers/platform/x86/toshiba_acpi.c", "instr": "ret = toshiba_acpi_smm_bridge(&regs);"}],
"warnings":[{"warn_data": {"at_line": 2497, "warn_str": "Trying to use a global variable without locking.", "at": "status = tci_raw(toshiba_acpi, in, out);", "inst_trace": [{"instr_func": "toshiba_acpi_ioctl", "instr_loc": -1, "instr": "  %4 = alloca i8*, align 8"}, {"instr_func": "toshiba_acpi_ioctl", "instr_loc": 2542, "instr_file": "drivers/platform/x86/toshiba_acpi.c", "instr": "ret = toshiba_acpi_smm_bridge(&regs);"}], "at_file": "drivers/platform/x86/toshiba_acpi.c", "by": "GlobalVariableRaceDetector says:", "at_func": "toshiba_acpi_smm_bridge"}, "warn_no": 1}]}]}