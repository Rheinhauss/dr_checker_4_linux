{"all_contexts":[
{"num_warnings": 3,
"context":[{"lineno": -1, "instr": "  %4 = alloca i64, align 8"}, {"lineno": 400, "file": "drivers/dma-buf/sw_sync.c", "instr": "return sw_sync_ioctl_inc(obj, arg);"}],
"warnings":[{"warn_data": {"at_line": 382, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "value -= INT_MAX;", "inst_trace": [{"instr_func": "sw_sync_ioctl_inc", "instr_loc": 374, "instr_file": "drivers/dma-buf/sw_sync.c", "instr": "{"}, {"instr_func": "sw_sync_ioctl_inc", "instr_loc": 382, "instr_file": "drivers/dma-buf/sw_sync.c", "instr": "value -= INT_MAX;"}], "at_file": "drivers/dma-buf/sw_sync.c", "by": "IntegerOverflowDetector says:", "at_func": "sw_sync_ioctl_inc"}, "warn_no": 1},
{"warn_data": {"at_line": 374, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "{", "inst_trace": [], "at_file": "drivers/dma-buf/sw_sync.c", "by": "TaintedSizeDetector says:", "at_func": "sw_sync_ioctl_inc"}, "warn_no": 2},
{"warn_data": {"at_line": 380, "warn_str": "Loop is bounded by a tainted value.", "at": "while (value > INT_MAX)  {", "inst_trace": [{"instr_func": "sw_sync_ioctl_inc", "instr_loc": 374, "instr_file": "drivers/dma-buf/sw_sync.c", "instr": "{"}, {"instr_func": "sw_sync_ioctl_inc", "instr_loc": 380, "instr_file": "drivers/dma-buf/sw_sync.c", "instr": "while (value > INT_MAX)  {"}, {"instr_func": "sw_sync_ioctl_inc", "instr_loc": 380, "instr_file": "drivers/dma-buf/sw_sync.c", "instr": "while (value > INT_MAX)  {"}], "at_file": "drivers/dma-buf/sw_sync.c", "by": "TaintedLoopBoundDetector says:", "at_func": "sw_sync_ioctl_inc"}, "warn_no": 3}]},
{"num_warnings": 2,
"context":[{"lineno": -1, "instr": "  %4 = alloca i64, align 8"}, {"lineno": 397, "file": "drivers/dma-buf/sw_sync.c", "instr": "return sw_sync_ioctl_create_fence(obj, arg);"}],
"warnings":[{"warn_data": {"at_line": 339, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "if (copy_from_user(&data, (void __user *)arg, sizeof(data))) {", "inst_trace": [], "at_file": "drivers/dma-buf/sw_sync.c", "by": "TaintedSizeDetector says:", "at_func": "sw_sync_ioctl_create_fence"}, "warn_no": 1},
{"warn_data": {"at_line": 357, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "data.fence = fd;", "inst_trace": [], "at_file": "drivers/dma-buf/sw_sync.c", "by": "TaintedSizeDetector says:", "at_func": "sw_sync_ioctl_create_fence"}, "warn_no": 2}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %4 = alloca i64, align 8"}, {"lineno": 400, "file": "drivers/dma-buf/sw_sync.c", "instr": "return sw_sync_ioctl_inc(obj, arg);"}, {"lineno": 385, "file": "drivers/dma-buf/sw_sync.c", "instr": "sync_timeline_signal(obj, value);"}],
"warnings":[{"warn_data": {"at_line": 200, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "obj->value += inc;", "inst_trace": [{"instr_func": "sw_sync_ioctl_inc", "instr_loc": 374, "instr_file": "drivers/dma-buf/sw_sync.c", "instr": "{"}, {"instr_func": "sw_sync_ioctl_inc", "instr_loc": 382, "instr_file": "drivers/dma-buf/sw_sync.c", "instr": "value -= INT_MAX;"}, {"instr_func": "sw_sync_ioctl_inc", "instr_loc": 382, "instr_file": "drivers/dma-buf/sw_sync.c", "instr": "value -= INT_MAX;"}, {"instr_func": "sw_sync_ioctl_inc", "instr_loc": 382, "instr_file": "drivers/dma-buf/sw_sync.c", "instr": "value -= INT_MAX;"}, {"instr_func": "sw_sync_ioctl_inc", "instr_loc": 382, "instr_file": "drivers/dma-buf/sw_sync.c", "instr": "value -= INT_MAX;"}, {"instr_func": "sw_sync_ioctl_inc", "instr_loc": 382, "instr_file": "drivers/dma-buf/sw_sync.c", "instr": "value -= INT_MAX;"}, {"instr_func": "sw_sync_ioctl_inc", "instr_loc": 382, "instr_file": "drivers/dma-buf/sw_sync.c", "instr": "value -= INT_MAX;"}, {"instr_func": "sw_sync_ioctl_inc", "instr_loc": 382, "instr_file": "drivers/dma-buf/sw_sync.c", "instr": "value -= INT_MAX;"}, {"instr_func": "sw_sync_ioctl_inc", "instr_loc": 382, "instr_file": "drivers/dma-buf/sw_sync.c", "instr": "value -= INT_MAX;"}, {"instr_func": "sw_sync_ioctl_inc", "instr_loc": 382, "instr_file": "drivers/dma-buf/sw_sync.c", "instr": "value -= INT_MAX;"}, {"instr_func": "sw_sync_ioctl_inc", "instr_loc": 385, "instr_file": "drivers/dma-buf/sw_sync.c", "instr": "sync_timeline_signal(obj, value);"}, {"instr_func": "sw_sync_ioctl_inc", "instr_loc": 385, "instr_file": "drivers/dma-buf/sw_sync.c", "instr": "sync_timeline_signal(obj, value);"}, {"instr_func": "sync_timeline_signal", "instr_loc": 193, "instr_file": "drivers/dma-buf/sw_sync.c", "instr": "{"}, {"instr_func": "sync_timeline_signal", "instr_loc": 200, "instr_file": "drivers/dma-buf/sw_sync.c", "instr": "obj->value += inc;"}], "at_file": "drivers/dma-buf/sw_sync.c", "by": "IntegerOverflowDetector says:", "at_func": "sync_timeline_signal"}, "warn_no": 1}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %4 = alloca i64, align 8"}, {"lineno": 397, "file": "drivers/dma-buf/sw_sync.c", "instr": "return sw_sync_ioctl_create_fence(obj, arg);"}, {"lineno": 344, "file": "drivers/dma-buf/sw_sync.c", "instr": "pt = sync_pt_create(obj, data.value);"}],
"warnings":[{"warn_data": {"at_line": 258, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "cmp = value - other->base.seqno;", "inst_trace": [{"instr_func": "sw_sync_ioctl_create_fence", "instr_loc": 339, "instr_file": "drivers/dma-buf/sw_sync.c", "instr": "if (copy_from_user(&data, (void __user *)arg, sizeof(data))) {"}, {"instr_func": "sw_sync_ioctl_create_fence", "instr_loc": 344, "instr_file": "drivers/dma-buf/sw_sync.c", "instr": "pt = sync_pt_create(obj, data.value);"}, {"instr_func": "sw_sync_ioctl_create_fence", "instr_loc": 344, "instr_file": "drivers/dma-buf/sw_sync.c", "instr": "pt = sync_pt_create(obj, data.value);"}, {"instr_func": "sync_pt_create", "instr_loc": 235, "instr_file": "drivers/dma-buf/sw_sync.c", "instr": "{"}, {"instr_func": "sync_pt_create", "instr_loc": 258, "instr_file": "drivers/dma-buf/sw_sync.c", "instr": "cmp = value - other->base.seqno;"}], "at_file": "drivers/dma-buf/sw_sync.c", "by": "IntegerOverflowDetector says:", "at_func": "sync_pt_create"}, "warn_no": 1}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %4 = alloca i64, align 8"}, {"lineno": 397, "file": "drivers/dma-buf/sw_sync.c", "instr": "return sw_sync_ioctl_create_fence(obj, arg);"}, {"lineno": 344, "file": "drivers/dma-buf/sw_sync.c", "instr": "pt = sync_pt_create(obj, data.value);"}, {"lineno": 238, "file": "drivers/dma-buf/sw_sync.c", "instr": "pt = kzalloc(sizeof(*pt), GFP_KERNEL);"}],
"warnings":[{"warn_data": {"at_line": 557, "warn_str": "Trying to use a global variable without locking.", "at": "  %234 = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %233, !dbg !6648", "inst_trace": [{"instr_func": "sw_sync_ioctl", "instr_loc": -1, "instr": "  %4 = alloca i64, align 8"}, {"instr_func": "sw_sync_ioctl", "instr_loc": 397, "instr_file": "drivers/dma-buf/sw_sync.c", "instr": "return sw_sync_ioctl_create_fence(obj, arg);"}, {"instr_func": "sw_sync_ioctl_create_fence", "instr_loc": 344, "instr_file": "drivers/dma-buf/sw_sync.c", "instr": "pt = sync_pt_create(obj, data.value);"}, {"instr_func": "sync_pt_create", "instr_loc": 238, "instr_file": "drivers/dma-buf/sw_sync.c", "instr": "pt = kzalloc(sizeof(*pt), GFP_KERNEL);"}], "at_file": "./include/linux/slab.h", "by": "GlobalVariableRaceDetector says:", "at_func": "kzalloc"}, "warn_no": 1}]}]}