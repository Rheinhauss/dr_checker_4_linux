{"all_contexts":[
{"num_warnings": 2,
"context":[{"lineno": -1, "instr": "  %5 = alloca i64, align 8"}],
"warnings":[{"warn_data": {"at_line": 1600, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "value = DIV_ROUND_UP(value, HZ_PER_KHZ);", "inst_trace": [{"instr_func": "max_freq_store", "instr_loc": -1, "instr": "  %5 = alloca i64, align 8"}, {"instr_func": "max_freq_store", "instr_loc": 1585, "instr_file": "drivers/devfreq/devfreq.c", "instr": "ret = sscanf(buf, \"%lu\", &value);"}, {"instr_func": "max_freq_store", "instr_loc": 1600, "instr_file": "drivers/devfreq/devfreq.c", "instr": "value = DIV_ROUND_UP(value, HZ_PER_KHZ);"}, {"instr_func": "max_freq_store", "instr_loc": 1600, "instr_file": "drivers/devfreq/devfreq.c", "instr": "value = DIV_ROUND_UP(value, HZ_PER_KHZ);"}], "at_file": "drivers/devfreq/devfreq.c", "by": "IntegerOverflowDetector says:", "at_func": "max_freq_store"}, "warn_no": 1},
{"warn_data": {"at_line": 1600, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "value = DIV_ROUND_UP(value, HZ_PER_KHZ);", "inst_trace": [{"instr_func": "max_freq_store", "instr_loc": -1, "instr": "  %5 = alloca i64, align 8"}, {"instr_func": "max_freq_store", "instr_loc": 1585, "instr_file": "drivers/devfreq/devfreq.c", "instr": "ret = sscanf(buf, \"%lu\", &value);"}, {"instr_func": "max_freq_store", "instr_loc": 1600, "instr_file": "drivers/devfreq/devfreq.c", "instr": "value = DIV_ROUND_UP(value, HZ_PER_KHZ);"}], "at_file": "drivers/devfreq/devfreq.c", "by": "IntegerOverflowDetector says:", "at_func": "max_freq_store"}, "warn_no": 2}]}]}