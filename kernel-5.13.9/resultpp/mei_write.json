{"all_contexts":[
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %5 = alloca i1, align 1"}],
"warnings":[{"warn_data": {"at_line": 378, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "cb->vtag = mei_cl_vtag_by_fp(cl, file);", "inst_trace": [], "at_file": "drivers/misc/mei/main.c", "by": "TaintedSizeDetector says:", "at_func": "mei_write"}, "warn_no": 1}]},
{"num_warnings": 6,
"context":[{"lineno": -1, "instr": "  %5 = alloca i1, align 1"}, {"lineno": 373, "file": "drivers/misc/mei/main.c", "instr": "cb = mei_cl_alloc_cb(cl, length, MEI_FOP_WRITE, file);"}],
"warnings":[{"warn_data": {"at_line": 498, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "cb->buf.data = kmalloc(roundup(length, MEI_SLOT_SIZE), GFP_KERNEL);", "inst_trace": [{"instr_func": "mei_write", "instr_loc": -1, "instr": "  %5 = alloca i1, align 1"}, {"instr_func": "mei_write", "instr_loc": 313, "instr_file": "drivers/misc/mei/main.c", "instr": "{"}, {"instr_func": "mei_write", "instr_loc": 373, "instr_file": "drivers/misc/mei/main.c", "instr": "cb = mei_cl_alloc_cb(cl, length, MEI_FOP_WRITE, file);"}, {"instr_func": "mei_write", "instr_loc": 373, "instr_file": "drivers/misc/mei/main.c", "instr": "cb = mei_cl_alloc_cb(cl, length, MEI_FOP_WRITE, file);"}, {"instr_func": "mei_cl_alloc_cb", "instr_loc": 488, "instr_file": "drivers/misc/mei/client.c", "instr": "{"}, {"instr_func": "mei_cl_alloc_cb", "instr_loc": 498, "instr_file": "drivers/misc/mei/client.c", "instr": "cb->buf.data = kmalloc(roundup(length, MEI_SLOT_SIZE), GFP_KERNEL);"}], "at_file": "drivers/misc/mei/client.c", "by": "IntegerOverflowDetector says:", "at_func": "mei_cl_alloc_cb"}, "warn_no": 1},
{"warn_data": {"at_line": 498, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "cb->buf.data = kmalloc(roundup(length, MEI_SLOT_SIZE), GFP_KERNEL);", "inst_trace": [{"instr_func": "mei_write", "instr_loc": -1, "instr": "  %5 = alloca i1, align 1"}, {"instr_func": "mei_write", "instr_loc": 313, "instr_file": "drivers/misc/mei/main.c", "instr": "{"}, {"instr_func": "mei_write", "instr_loc": 373, "instr_file": "drivers/misc/mei/main.c", "instr": "cb = mei_cl_alloc_cb(cl, length, MEI_FOP_WRITE, file);"}, {"instr_func": "mei_write", "instr_loc": 373, "instr_file": "drivers/misc/mei/main.c", "instr": "cb = mei_cl_alloc_cb(cl, length, MEI_FOP_WRITE, file);"}, {"instr_func": "mei_cl_alloc_cb", "instr_loc": 488, "instr_file": "drivers/misc/mei/client.c", "instr": "{"}, {"instr_func": "mei_cl_alloc_cb", "instr_loc": 498, "instr_file": "drivers/misc/mei/client.c", "instr": "cb->buf.data = kmalloc(roundup(length, MEI_SLOT_SIZE), GFP_KERNEL);"}, {"instr_func": "mei_cl_alloc_cb", "instr_loc": 498, "instr_file": "drivers/misc/mei/client.c", "instr": "cb->buf.data = kmalloc(roundup(length, MEI_SLOT_SIZE), GFP_KERNEL);"}, {"instr_func": "mei_cl_alloc_cb", "instr_loc": 498, "instr_file": "drivers/misc/mei/client.c", "instr": "cb->buf.data = kmalloc(roundup(length, MEI_SLOT_SIZE), GFP_KERNEL);"}, {"instr_func": "mei_cl_alloc_cb", "instr_loc": 498, "instr_file": "drivers/misc/mei/client.c", "instr": "cb->buf.data = kmalloc(roundup(length, MEI_SLOT_SIZE), GFP_KERNEL);"}, {"instr_func": "mei_cl_alloc_cb", "instr_loc": 498, "instr_file": "drivers/misc/mei/client.c", "instr": "cb->buf.data = kmalloc(roundup(length, MEI_SLOT_SIZE), GFP_KERNEL);"}, {"instr_func": "mei_cl_alloc_cb", "instr_loc": 498, "instr_file": "drivers/misc/mei/client.c", "instr": "cb->buf.data = kmalloc(roundup(length, MEI_SLOT_SIZE), GFP_KERNEL);"}, {"instr_func": "mei_cl_alloc_cb", "instr_loc": 498, "instr_file": "drivers/misc/mei/client.c", "instr": "cb->buf.data = kmalloc(roundup(length, MEI_SLOT_SIZE), GFP_KERNEL);"}, {"instr_func": "mei_cl_alloc_cb", "instr_loc": 498, "instr_file": "drivers/misc/mei/client.c", "instr": "cb->buf.data = kmalloc(roundup(length, MEI_SLOT_SIZE), GFP_KERNEL);"}, {"instr_func": "mei_cl_alloc_cb", "instr_loc": 498, "instr_file": "drivers/misc/mei/client.c", "instr": "cb->buf.data = kmalloc(roundup(length, MEI_SLOT_SIZE), GFP_KERNEL);"}, {"instr_func": "mei_cl_alloc_cb", "instr_loc": 498, "instr_file": "drivers/misc/mei/client.c", "instr": "cb->buf.data = kmalloc(roundup(length, MEI_SLOT_SIZE), GFP_KERNEL);"}, {"instr_func": "mei_cl_alloc_cb", "instr_loc": 498, "instr_file": "drivers/misc/mei/client.c", "instr": "cb->buf.data = kmalloc(roundup(length, MEI_SLOT_SIZE), GFP_KERNEL);"}, {"instr_func": "mei_cl_alloc_cb", "instr_loc": 498, "instr_file": "drivers/misc/mei/client.c", "instr": "cb->buf.data = kmalloc(roundup(length, MEI_SLOT_SIZE), GFP_KERNEL);"}], "at_file": "drivers/misc/mei/client.c", "by": "IntegerOverflowDetector says:", "at_func": "mei_cl_alloc_cb"}, "warn_no": 2},
{"warn_data": {"at_line": 498, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "cb->buf.data = kmalloc(roundup(length, MEI_SLOT_SIZE), GFP_KERNEL);", "inst_trace": [{"instr_func": "mei_write", "instr_loc": -1, "instr": "  %5 = alloca i1, align 1"}, {"instr_func": "mei_write", "instr_loc": 313, "instr_file": "drivers/misc/mei/main.c", "instr": "{"}, {"instr_func": "mei_write", "instr_loc": 373, "instr_file": "drivers/misc/mei/main.c", "instr": "cb = mei_cl_alloc_cb(cl, length, MEI_FOP_WRITE, file);"}, {"instr_func": "mei_write", "instr_loc": 373, "instr_file": "drivers/misc/mei/main.c", "instr": "cb = mei_cl_alloc_cb(cl, length, MEI_FOP_WRITE, file);"}, {"instr_func": "mei_cl_alloc_cb", "instr_loc": 488, "instr_file": "drivers/misc/mei/client.c", "instr": "{"}, {"instr_func": "mei_cl_alloc_cb", "instr_loc": 498, "instr_file": "drivers/misc/mei/client.c", "instr": "cb->buf.data = kmalloc(roundup(length, MEI_SLOT_SIZE), GFP_KERNEL);"}, {"instr_func": "mei_cl_alloc_cb", "instr_loc": 498, "instr_file": "drivers/misc/mei/client.c", "instr": "cb->buf.data = kmalloc(roundup(length, MEI_SLOT_SIZE), GFP_KERNEL);"}, {"instr_func": "mei_cl_alloc_cb", "instr_loc": 498, "instr_file": "drivers/misc/mei/client.c", "instr": "cb->buf.data = kmalloc(roundup(length, MEI_SLOT_SIZE), GFP_KERNEL);"}, {"instr_func": "mei_cl_alloc_cb", "instr_loc": 498, "instr_file": "drivers/misc/mei/client.c", "instr": "cb->buf.data = kmalloc(roundup(length, MEI_SLOT_SIZE), GFP_KERNEL);"}, {"instr_func": "mei_cl_alloc_cb", "instr_loc": 498, "instr_file": "drivers/misc/mei/client.c", "instr": "cb->buf.data = kmalloc(roundup(length, MEI_SLOT_SIZE), GFP_KERNEL);"}, {"instr_func": "mei_cl_alloc_cb", "instr_loc": 498, "instr_file": "drivers/misc/mei/client.c", "instr": "cb->buf.data = kmalloc(roundup(length, MEI_SLOT_SIZE), GFP_KERNEL);"}, {"instr_func": "mei_cl_alloc_cb", "instr_loc": 498, "instr_file": "drivers/misc/mei/client.c", "instr": "cb->buf.data = kmalloc(roundup(length, MEI_SLOT_SIZE), GFP_KERNEL);"}, {"instr_func": "mei_cl_alloc_cb", "instr_loc": 498, "instr_file": "drivers/misc/mei/client.c", "instr": "cb->buf.data = kmalloc(roundup(length, MEI_SLOT_SIZE), GFP_KERNEL);"}, {"instr_func": "mei_cl_alloc_cb", "instr_loc": 498, "instr_file": "drivers/misc/mei/client.c", "instr": "cb->buf.data = kmalloc(roundup(length, MEI_SLOT_SIZE), GFP_KERNEL);"}, {"instr_func": "mei_cl_alloc_cb", "instr_loc": 498, "instr_file": "drivers/misc/mei/client.c", "instr": "cb->buf.data = kmalloc(roundup(length, MEI_SLOT_SIZE), GFP_KERNEL);"}, {"instr_func": "mei_cl_alloc_cb", "instr_loc": 498, "instr_file": "drivers/misc/mei/client.c", "instr": "cb->buf.data = kmalloc(roundup(length, MEI_SLOT_SIZE), GFP_KERNEL);"}, {"instr_func": "mei_cl_alloc_cb", "instr_loc": 498, "instr_file": "drivers/misc/mei/client.c", "instr": "cb->buf.data = kmalloc(roundup(length, MEI_SLOT_SIZE), GFP_KERNEL);"}], "at_file": "drivers/misc/mei/client.c", "by": "IntegerOverflowDetector says:", "at_func": "mei_cl_alloc_cb"}, "warn_no": 3},
{"warn_data": {"at_line": 498, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "cb->buf.data = kmalloc(roundup(length, MEI_SLOT_SIZE), GFP_KERNEL);", "inst_trace": [{"instr_func": "mei_write", "instr_loc": -1, "instr": "  %5 = alloca i1, align 1"}, {"instr_func": "mei_write", "instr_loc": 313, "instr_file": "drivers/misc/mei/main.c", "instr": "{"}, {"instr_func": "mei_write", "instr_loc": 373, "instr_file": "drivers/misc/mei/main.c", "instr": "cb = mei_cl_alloc_cb(cl, length, MEI_FOP_WRITE, file);"}, {"instr_func": "mei_write", "instr_loc": 373, "instr_file": "drivers/misc/mei/main.c", "instr": "cb = mei_cl_alloc_cb(cl, length, MEI_FOP_WRITE, file);"}, {"instr_func": "mei_cl_alloc_cb", "instr_loc": 488, "instr_file": "drivers/misc/mei/client.c", "instr": "{"}, {"instr_func": "mei_cl_alloc_cb", "instr_loc": 498, "instr_file": "drivers/misc/mei/client.c", "instr": "cb->buf.data = kmalloc(roundup(length, MEI_SLOT_SIZE), GFP_KERNEL);"}, {"instr_func": "mei_cl_alloc_cb", "instr_loc": 498, "instr_file": "drivers/misc/mei/client.c", "instr": "cb->buf.data = kmalloc(roundup(length, MEI_SLOT_SIZE), GFP_KERNEL);"}, {"instr_func": "mei_cl_alloc_cb", "instr_loc": 498, "instr_file": "drivers/misc/mei/client.c", "instr": "cb->buf.data = kmalloc(roundup(length, MEI_SLOT_SIZE), GFP_KERNEL);"}, {"instr_func": "mei_cl_alloc_cb", "instr_loc": 498, "instr_file": "drivers/misc/mei/client.c", "instr": "cb->buf.data = kmalloc(roundup(length, MEI_SLOT_SIZE), GFP_KERNEL);"}, {"instr_func": "mei_cl_alloc_cb", "instr_loc": 498, "instr_file": "drivers/misc/mei/client.c", "instr": "cb->buf.data = kmalloc(roundup(length, MEI_SLOT_SIZE), GFP_KERNEL);"}, {"instr_func": "mei_cl_alloc_cb", "instr_loc": 498, "instr_file": "drivers/misc/mei/client.c", "instr": "cb->buf.data = kmalloc(roundup(length, MEI_SLOT_SIZE), GFP_KERNEL);"}, {"instr_func": "mei_cl_alloc_cb", "instr_loc": 498, "instr_file": "drivers/misc/mei/client.c", "instr": "cb->buf.data = kmalloc(roundup(length, MEI_SLOT_SIZE), GFP_KERNEL);"}, {"instr_func": "mei_cl_alloc_cb", "instr_loc": 498, "instr_file": "drivers/misc/mei/client.c", "instr": "cb->buf.data = kmalloc(roundup(length, MEI_SLOT_SIZE), GFP_KERNEL);"}, {"instr_func": "mei_cl_alloc_cb", "instr_loc": 498, "instr_file": "drivers/misc/mei/client.c", "instr": "cb->buf.data = kmalloc(roundup(length, MEI_SLOT_SIZE), GFP_KERNEL);"}, {"instr_func": "mei_cl_alloc_cb", "instr_loc": 498, "instr_file": "drivers/misc/mei/client.c", "instr": "cb->buf.data = kmalloc(roundup(length, MEI_SLOT_SIZE), GFP_KERNEL);"}, {"instr_func": "mei_cl_alloc_cb", "instr_loc": 498, "instr_file": "drivers/misc/mei/client.c", "instr": "cb->buf.data = kmalloc(roundup(length, MEI_SLOT_SIZE), GFP_KERNEL);"}, {"instr_func": "mei_cl_alloc_cb", "instr_loc": 498, "instr_file": "drivers/misc/mei/client.c", "instr": "cb->buf.data = kmalloc(roundup(length, MEI_SLOT_SIZE), GFP_KERNEL);"}], "at_file": "drivers/misc/mei/client.c", "by": "IntegerOverflowDetector says:", "at_func": "mei_cl_alloc_cb"}, "warn_no": 4},
{"warn_data": {"at_line": 498, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "cb->buf.data = kmalloc(roundup(length, MEI_SLOT_SIZE), GFP_KERNEL);", "inst_trace": [{"instr_func": "mei_write", "instr_loc": -1, "instr": "  %5 = alloca i1, align 1"}, {"instr_func": "mei_write", "instr_loc": 313, "instr_file": "drivers/misc/mei/main.c", "instr": "{"}, {"instr_func": "mei_write", "instr_loc": 373, "instr_file": "drivers/misc/mei/main.c", "instr": "cb = mei_cl_alloc_cb(cl, length, MEI_FOP_WRITE, file);"}, {"instr_func": "mei_write", "instr_loc": 373, "instr_file": "drivers/misc/mei/main.c", "instr": "cb = mei_cl_alloc_cb(cl, length, MEI_FOP_WRITE, file);"}, {"instr_func": "mei_cl_alloc_cb", "instr_loc": 488, "instr_file": "drivers/misc/mei/client.c", "instr": "{"}, {"instr_func": "mei_cl_alloc_cb", "instr_loc": 498, "instr_file": "drivers/misc/mei/client.c", "instr": "cb->buf.data = kmalloc(roundup(length, MEI_SLOT_SIZE), GFP_KERNEL);"}, {"instr_func": "mei_cl_alloc_cb", "instr_loc": 498, "instr_file": "drivers/misc/mei/client.c", "instr": "cb->buf.data = kmalloc(roundup(length, MEI_SLOT_SIZE), GFP_KERNEL);"}, {"instr_func": "mei_cl_alloc_cb", "instr_loc": 498, "instr_file": "drivers/misc/mei/client.c", "instr": "cb->buf.data = kmalloc(roundup(length, MEI_SLOT_SIZE), GFP_KERNEL);"}, {"instr_func": "mei_cl_alloc_cb", "instr_loc": 498, "instr_file": "drivers/misc/mei/client.c", "instr": "cb->buf.data = kmalloc(roundup(length, MEI_SLOT_SIZE), GFP_KERNEL);"}, {"instr_func": "mei_cl_alloc_cb", "instr_loc": 498, "instr_file": "drivers/misc/mei/client.c", "instr": "cb->buf.data = kmalloc(roundup(length, MEI_SLOT_SIZE), GFP_KERNEL);"}, {"instr_func": "mei_cl_alloc_cb", "instr_loc": 498, "instr_file": "drivers/misc/mei/client.c", "instr": "cb->buf.data = kmalloc(roundup(length, MEI_SLOT_SIZE), GFP_KERNEL);"}, {"instr_func": "mei_cl_alloc_cb", "instr_loc": 498, "instr_file": "drivers/misc/mei/client.c", "instr": "cb->buf.data = kmalloc(roundup(length, MEI_SLOT_SIZE), GFP_KERNEL);"}, {"instr_func": "mei_cl_alloc_cb", "instr_loc": 498, "instr_file": "drivers/misc/mei/client.c", "instr": "cb->buf.data = kmalloc(roundup(length, MEI_SLOT_SIZE), GFP_KERNEL);"}, {"instr_func": "mei_cl_alloc_cb", "instr_loc": 498, "instr_file": "drivers/misc/mei/client.c", "instr": "cb->buf.data = kmalloc(roundup(length, MEI_SLOT_SIZE), GFP_KERNEL);"}, {"instr_func": "mei_cl_alloc_cb", "instr_loc": 498, "instr_file": "drivers/misc/mei/client.c", "instr": "cb->buf.data = kmalloc(roundup(length, MEI_SLOT_SIZE), GFP_KERNEL);"}, {"instr_func": "mei_cl_alloc_cb", "instr_loc": 498, "instr_file": "drivers/misc/mei/client.c", "instr": "cb->buf.data = kmalloc(roundup(length, MEI_SLOT_SIZE), GFP_KERNEL);"}, {"instr_func": "mei_cl_alloc_cb", "instr_loc": 498, "instr_file": "drivers/misc/mei/client.c", "instr": "cb->buf.data = kmalloc(roundup(length, MEI_SLOT_SIZE), GFP_KERNEL);"}], "at_file": "drivers/misc/mei/client.c", "by": "IntegerOverflowDetector says:", "at_func": "mei_cl_alloc_cb"}, "warn_no": 5},
{"warn_data": {"at_line": 498, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "cb->buf.data = kmalloc(roundup(length, MEI_SLOT_SIZE), GFP_KERNEL);", "inst_trace": [{"instr_func": "mei_write", "instr_loc": -1, "instr": "  %5 = alloca i1, align 1"}, {"instr_func": "mei_write", "instr_loc": 313, "instr_file": "drivers/misc/mei/main.c", "instr": "{"}, {"instr_func": "mei_write", "instr_loc": 373, "instr_file": "drivers/misc/mei/main.c", "instr": "cb = mei_cl_alloc_cb(cl, length, MEI_FOP_WRITE, file);"}, {"instr_func": "mei_write", "instr_loc": 373, "instr_file": "drivers/misc/mei/main.c", "instr": "cb = mei_cl_alloc_cb(cl, length, MEI_FOP_WRITE, file);"}, {"instr_func": "mei_cl_alloc_cb", "instr_loc": 488, "instr_file": "drivers/misc/mei/client.c", "instr": "{"}, {"instr_func": "mei_cl_alloc_cb", "instr_loc": 498, "instr_file": "drivers/misc/mei/client.c", "instr": "cb->buf.data = kmalloc(roundup(length, MEI_SLOT_SIZE), GFP_KERNEL);"}, {"instr_func": "mei_cl_alloc_cb", "instr_loc": 498, "instr_file": "drivers/misc/mei/client.c", "instr": "cb->buf.data = kmalloc(roundup(length, MEI_SLOT_SIZE), GFP_KERNEL);"}, {"instr_func": "mei_cl_alloc_cb", "instr_loc": 498, "instr_file": "drivers/misc/mei/client.c", "instr": "cb->buf.data = kmalloc(roundup(length, MEI_SLOT_SIZE), GFP_KERNEL);"}, {"instr_func": "mei_cl_alloc_cb", "instr_loc": 498, "instr_file": "drivers/misc/mei/client.c", "instr": "cb->buf.data = kmalloc(roundup(length, MEI_SLOT_SIZE), GFP_KERNEL);"}, {"instr_func": "mei_cl_alloc_cb", "instr_loc": 498, "instr_file": "drivers/misc/mei/client.c", "instr": "cb->buf.data = kmalloc(roundup(length, MEI_SLOT_SIZE), GFP_KERNEL);"}, {"instr_func": "mei_cl_alloc_cb", "instr_loc": 498, "instr_file": "drivers/misc/mei/client.c", "instr": "cb->buf.data = kmalloc(roundup(length, MEI_SLOT_SIZE), GFP_KERNEL);"}, {"instr_func": "mei_cl_alloc_cb", "instr_loc": 498, "instr_file": "drivers/misc/mei/client.c", "instr": "cb->buf.data = kmalloc(roundup(length, MEI_SLOT_SIZE), GFP_KERNEL);"}, {"instr_func": "mei_cl_alloc_cb", "instr_loc": 498, "instr_file": "drivers/misc/mei/client.c", "instr": "cb->buf.data = kmalloc(roundup(length, MEI_SLOT_SIZE), GFP_KERNEL);"}, {"instr_func": "mei_cl_alloc_cb", "instr_loc": 498, "instr_file": "drivers/misc/mei/client.c", "instr": "cb->buf.data = kmalloc(roundup(length, MEI_SLOT_SIZE), GFP_KERNEL);"}, {"instr_func": "mei_cl_alloc_cb", "instr_loc": 498, "instr_file": "drivers/misc/mei/client.c", "instr": "cb->buf.data = kmalloc(roundup(length, MEI_SLOT_SIZE), GFP_KERNEL);"}, {"instr_func": "mei_cl_alloc_cb", "instr_loc": 498, "instr_file": "drivers/misc/mei/client.c", "instr": "cb->buf.data = kmalloc(roundup(length, MEI_SLOT_SIZE), GFP_KERNEL);"}, {"instr_func": "mei_cl_alloc_cb", "instr_loc": 498, "instr_file": "drivers/misc/mei/client.c", "instr": "cb->buf.data = kmalloc(roundup(length, MEI_SLOT_SIZE), GFP_KERNEL);"}], "at_file": "drivers/misc/mei/client.c", "by": "IntegerOverflowDetector says:", "at_func": "mei_cl_alloc_cb"}, "warn_no": 6}]}]}