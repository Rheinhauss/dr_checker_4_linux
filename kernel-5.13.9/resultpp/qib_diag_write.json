{"all_contexts":[
{"num_warnings": 2,
"context":[{"lineno": -1, "instr": "  %5 = alloca %struct.spinlock*, align 8"}],
"warnings":[{"warn_data": {"at_line": 868, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "u64 data64;", "inst_trace": [], "at_file": "drivers/infiniband/hw/qib/qib_diag.c", "by": "TaintedSizeDetector says:", "at_func": "qib_diag_write"}, "warn_no": 1},
{"warn_data": {"at_line": 899, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "*off += count;", "inst_trace": [{"instr_func": "qib_diag_write", "instr_loc": -1, "instr": "  %5 = alloca %struct.spinlock*, align 8"}, {"instr_func": "qib_diag_write", "instr_loc": 835, "instr_file": "drivers/infiniband/hw/qib/qib_diag.c", "instr": "{"}, {"instr_func": "qib_diag_write", "instr_loc": 899, "instr_file": "drivers/infiniband/hw/qib/qib_diag.c", "instr": "*off += count;"}], "at_file": "drivers/infiniband/hw/qib/qib_diag.c", "by": "IntegerOverflowDetector says:", "at_func": "qib_diag_write"}, "warn_no": 2}]},
{"num_warnings": 2,
"context":[{"lineno": -1, "instr": "  %5 = alloca %struct.spinlock*, align 8"}, {"lineno": 893, "file": "drivers/infiniband/hw/qib/qib_diag.c", "instr": "ret = qib_write_umem64(dd, (u32) *off, data,"}],
"warnings":[{"warn_data": {"at_line": 401, "warn_str": "Loop is bounded by a tainted value.", "at": "while (reg_addr < reg_end) {", "inst_trace": [{"instr_func": "qib_diag_write", "instr_loc": -1, "instr": "  %5 = alloca %struct.spinlock*, align 8"}, {"instr_func": "qib_diag_write", "instr_loc": 835, "instr_file": "drivers/infiniband/hw/qib/qib_diag.c", "instr": "{"}, {"instr_func": "qib_diag_write", "instr_loc": 894, "instr_file": "drivers/infiniband/hw/qib/qib_diag.c", "instr": "count);"}, {"instr_func": "qib_diag_write", "instr_loc": 893, "instr_file": "drivers/infiniband/hw/qib/qib_diag.c", "instr": "ret = qib_write_umem64(dd, (u32) *off, data,"}, {"instr_func": "qib_write_umem64", "instr_loc": 385, "instr_file": "drivers/infiniband/hw/qib/qib_diag.c", "instr": "{"}, {"instr_func": "qib_write_umem64", "instr_loc": 398, "instr_file": "drivers/infiniband/hw/qib/qib_diag.c", "instr": "reg_end = reg_addr + (count / sizeof(u64));"}, {"instr_func": "qib_write_umem64", "instr_loc": 398, "instr_file": "drivers/infiniband/hw/qib/qib_diag.c", "instr": "reg_end = reg_addr + (count / sizeof(u64));"}, {"instr_func": "qib_write_umem64", "instr_loc": 398, "instr_file": "drivers/infiniband/hw/qib/qib_diag.c", "instr": "reg_end = reg_addr + (count / sizeof(u64));"}, {"instr_func": "qib_write_umem64", "instr_loc": 398, "instr_file": "drivers/infiniband/hw/qib/qib_diag.c", "instr": "reg_end = reg_addr + (count / sizeof(u64));"}, {"instr_func": "qib_write_umem64", "instr_loc": 401, "instr_file": "drivers/infiniband/hw/qib/qib_diag.c", "instr": "while (reg_addr < reg_end) {"}, {"instr_func": "qib_write_umem64", "instr_loc": 401, "instr_file": "drivers/infiniband/hw/qib/qib_diag.c", "instr": "while (reg_addr < reg_end) {"}], "at_file": "drivers/infiniband/hw/qib/qib_diag.c", "by": "TaintedLoopBoundDetector says:", "at_func": "qib_write_umem64"}, "warn_no": 1},
{"warn_data": {"at_line": 402, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "u64 data;", "inst_trace": [], "at_file": "drivers/infiniband/hw/qib/qib_diag.c", "by": "TaintedSizeDetector says:", "at_func": "qib_write_umem64"}, "warn_no": 2}]},
{"num_warnings": 2,
"context":[{"lineno": -1, "instr": "  %5 = alloca %struct.spinlock*, align 8"}, {"lineno": 890, "file": "drivers/infiniband/hw/qib/qib_diag.c", "instr": "ret = qib_write_umem32(dd, (u32) *off, data,"}],
"warnings":[{"warn_data": {"at_line": 491, "warn_str": "Loop is bounded by a tainted value.", "at": "while (reg_addr < reg_end) {", "inst_trace": [{"instr_func": "qib_diag_write", "instr_loc": -1, "instr": "  %5 = alloca %struct.spinlock*, align 8"}, {"instr_func": "qib_diag_write", "instr_loc": 835, "instr_file": "drivers/infiniband/hw/qib/qib_diag.c", "instr": "{"}, {"instr_func": "qib_diag_write", "instr_loc": 891, "instr_file": "drivers/infiniband/hw/qib/qib_diag.c", "instr": "count);"}, {"instr_func": "qib_diag_write", "instr_loc": 890, "instr_file": "drivers/infiniband/hw/qib/qib_diag.c", "instr": "ret = qib_write_umem32(dd, (u32) *off, data,"}, {"instr_func": "qib_write_umem32", "instr_loc": 476, "instr_file": "drivers/infiniband/hw/qib/qib_diag.c", "instr": "{"}, {"instr_func": "qib_write_umem32", "instr_loc": 489, "instr_file": "drivers/infiniband/hw/qib/qib_diag.c", "instr": "reg_end = reg_addr + (count / sizeof(u32));"}, {"instr_func": "qib_write_umem32", "instr_loc": 489, "instr_file": "drivers/infiniband/hw/qib/qib_diag.c", "instr": "reg_end = reg_addr + (count / sizeof(u32));"}, {"instr_func": "qib_write_umem32", "instr_loc": 489, "instr_file": "drivers/infiniband/hw/qib/qib_diag.c", "instr": "reg_end = reg_addr + (count / sizeof(u32));"}, {"instr_func": "qib_write_umem32", "instr_loc": 489, "instr_file": "drivers/infiniband/hw/qib/qib_diag.c", "instr": "reg_end = reg_addr + (count / sizeof(u32));"}, {"instr_func": "qib_write_umem32", "instr_loc": 491, "instr_file": "drivers/infiniband/hw/qib/qib_diag.c", "instr": "while (reg_addr < reg_end) {"}, {"instr_func": "qib_write_umem32", "instr_loc": 491, "instr_file": "drivers/infiniband/hw/qib/qib_diag.c", "instr": "while (reg_addr < reg_end) {"}], "at_file": "drivers/infiniband/hw/qib/qib_diag.c", "by": "TaintedLoopBoundDetector says:", "at_func": "qib_write_umem32"}, "warn_no": 1},
{"warn_data": {"at_line": 492, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "u32 data;", "inst_trace": [], "at_file": "drivers/infiniband/hw/qib/qib_diag.c", "by": "TaintedSizeDetector says:", "at_func": "qib_write_umem32"}, "warn_no": 2}]}]}