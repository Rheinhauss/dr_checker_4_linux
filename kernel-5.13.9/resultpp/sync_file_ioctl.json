{"all_contexts":[
{"num_warnings": 3,
"context":[{"lineno": -1, "instr": "  %4 = alloca i64, align 8"}, {"lineno": 472, "file": "drivers/dma-buf/sync_file.c", "instr": "return sync_file_ioctl_fence_info(sync_file, arg);"}],
"warnings":[{"warn_data": {"at_line": 400, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "{", "inst_trace": [], "at_file": "drivers/dma-buf/sync_file.c", "by": "TaintedSizeDetector says:", "at_func": "sync_file_ioctl_fence_info"}, "warn_no": 1},
{"warn_data": {"at_line": 447, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "no_fences:", "inst_trace": [], "at_file": "drivers/dma-buf/sync_file.c", "by": "TaintedSizeDetector says:", "at_func": "sync_file_ioctl_fence_info"}, "warn_no": 2},
{"warn_data": {"at_line": 441, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "if (copy_to_user(u64_to_user_ptr(info.sync_fence_info), fence_info,", "inst_trace": [], "at_file": "drivers/dma-buf/sync_file.c", "by": "TaintedSizeDetector says:", "at_func": "sync_file_ioctl_fence_info"}, "warn_no": 3}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %4 = alloca i64, align 8"}, {"lineno": 472, "file": "drivers/dma-buf/sync_file.c", "instr": "return sync_file_ioctl_fence_info(sync_file, arg);"}, {"lineno": 413, "file": "drivers/dma-buf/sync_file.c", "instr": "fences = get_fences(sync_file, &num_fences);"}, {"lineno": 178, "file": "drivers/dma-buf/sync_file.c", "instr": "if (dma_fence_is_array(sync_file->fence)) {"}],
"warnings":[{"warn_data": {"at_line": 58, "warn_str": "Trying to use a global variable without locking.", "at": "  %6 = icmp eq %struct.dma_fence_ops* %5, @dma_fence_array_ops, !dbg !3557", "inst_trace": [{"instr_func": "sync_file_ioctl", "instr_loc": -1, "instr": "  %4 = alloca i64, align 8"}, {"instr_func": "sync_file_ioctl", "instr_loc": 472, "instr_file": "drivers/dma-buf/sync_file.c", "instr": "return sync_file_ioctl_fence_info(sync_file, arg);"}, {"instr_func": "sync_file_ioctl_fence_info", "instr_loc": 413, "instr_file": "drivers/dma-buf/sync_file.c", "instr": "fences = get_fences(sync_file, &num_fences);"}, {"instr_func": "get_fences", "instr_loc": 178, "instr_file": "drivers/dma-buf/sync_file.c", "instr": "if (dma_fence_is_array(sync_file->fence)) {"}], "at_file": "./include/linux/dma-fence-array.h", "by": "GlobalVariableRaceDetector says:", "at_func": "dma_fence_is_array"}, "warn_no": 1}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %4 = alloca i64, align 8"}, {"lineno": 472, "file": "drivers/dma-buf/sync_file.c", "instr": "return sync_file_ioctl_fence_info(sync_file, arg);"}, {"lineno": 413, "file": "drivers/dma-buf/sync_file.c", "instr": "fences = get_fences(sync_file, &num_fences);"}, {"lineno": 179, "file": "drivers/dma-buf/sync_file.c", "instr": "struct dma_fence_array *array = to_dma_fence_array(sync_file->fence);"}],
"warnings":[{"warn_data": {"at_line": 71, "warn_str": "Trying to use a global variable without locking.", "at": "  %9 = icmp ne %struct.dma_fence_ops* %8, @dma_fence_array_ops, !dbg !3560", "inst_trace": [{"instr_func": "sync_file_ioctl", "instr_loc": -1, "instr": "  %4 = alloca i64, align 8"}, {"instr_func": "sync_file_ioctl", "instr_loc": 472, "instr_file": "drivers/dma-buf/sync_file.c", "instr": "return sync_file_ioctl_fence_info(sync_file, arg);"}, {"instr_func": "sync_file_ioctl_fence_info", "instr_loc": 413, "instr_file": "drivers/dma-buf/sync_file.c", "instr": "fences = get_fences(sync_file, &num_fences);"}, {"instr_func": "get_fences", "instr_loc": 179, "instr_file": "drivers/dma-buf/sync_file.c", "instr": "struct dma_fence_array *array = to_dma_fence_array(sync_file->fence);"}], "at_file": "./include/linux/dma-fence-array.h", "by": "GlobalVariableRaceDetector says:", "at_func": "to_dma_fence_array"}, "warn_no": 1}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %4 = alloca i64, align 8"}, {"lineno": 472, "file": "drivers/dma-buf/sync_file.c", "instr": "return sync_file_ioctl_fence_info(sync_file, arg);"}, {"lineno": 432, "file": "drivers/dma-buf/sync_file.c", "instr": "fence_info = kzalloc(size, GFP_KERNEL);"}],
"warnings":[{"warn_data": {"at_line": 557, "warn_str": "Trying to use a global variable without locking.", "at": "  %234 = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %233, !dbg !3824", "inst_trace": [{"instr_func": "sync_file_ioctl", "instr_loc": -1, "instr": "  %4 = alloca i64, align 8"}, {"instr_func": "sync_file_ioctl", "instr_loc": 472, "instr_file": "drivers/dma-buf/sync_file.c", "instr": "return sync_file_ioctl_fence_info(sync_file, arg);"}, {"instr_func": "sync_file_ioctl_fence_info", "instr_loc": 432, "instr_file": "drivers/dma-buf/sync_file.c", "instr": "fence_info = kzalloc(size, GFP_KERNEL);"}], "at_file": "./include/linux/slab.h", "by": "GlobalVariableRaceDetector says:", "at_func": "kzalloc"}, "warn_no": 1}]},
{"num_warnings": 2,
"context":[{"lineno": -1, "instr": "  %4 = alloca i64, align 8"}, {"lineno": 469, "file": "drivers/dma-buf/sync_file.c", "instr": "return sync_file_ioctl_merge(sync_file, arg);"}],
"warnings":[{"warn_data": {"at_line": 334, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "if (copy_from_user(&data, (void __user *)arg, sizeof(data))) {", "inst_trace": [], "at_file": "drivers/dma-buf/sync_file.c", "by": "TaintedSizeDetector says:", "at_func": "sync_file_ioctl_merge"}, "warn_no": 1},
{"warn_data": {"at_line": 357, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "data.fence = fd;", "inst_trace": [], "at_file": "drivers/dma-buf/sync_file.c", "by": "TaintedSizeDetector says:", "at_func": "sync_file_ioctl_merge"}, "warn_no": 2}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %4 = alloca i64, align 8"}, {"lineno": 469, "file": "drivers/dma-buf/sync_file.c", "instr": "return sync_file_ioctl_merge(sync_file, arg);"}, {"lineno": 344, "file": "drivers/dma-buf/sync_file.c", "instr": "fence2 = sync_file_fdget(data.fd2);"}],
"warnings":[{"warn_data": {"at_line": 85, "warn_str": "Trying to use a global variable without locking.", "at": "if (file->f_op != &sync_file_fops)", "inst_trace": [{"instr_func": "sync_file_ioctl", "instr_loc": -1, "instr": "  %4 = alloca i64, align 8"}, {"instr_func": "sync_file_ioctl", "instr_loc": 469, "instr_file": "drivers/dma-buf/sync_file.c", "instr": "return sync_file_ioctl_merge(sync_file, arg);"}, {"instr_func": "sync_file_ioctl_merge", "instr_loc": 344, "instr_file": "drivers/dma-buf/sync_file.c", "instr": "fence2 = sync_file_fdget(data.fd2);"}], "at_file": "drivers/dma-buf/sync_file.c", "by": "GlobalVariableRaceDetector says:", "at_func": "sync_file_fdget"}, "warn_no": 1}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %4 = alloca i64, align 8"}, {"lineno": 469, "file": "drivers/dma-buf/sync_file.c", "instr": "return sync_file_ioctl_merge(sync_file, arg);"}, {"lineno": 351, "file": "drivers/dma-buf/sync_file.c", "instr": "fence3 = sync_file_merge(data.name, sync_file, fence2);"}, {"lineno": 228, "file": "drivers/dma-buf/sync_file.c", "instr": "fences = kcalloc(num_fences, sizeof(*fences), GFP_KERNEL);"}, {"lineno": 625, "file": "./include/linux/slab.h", "instr": "  %11 = call i8* @kmalloc_array(i64 %7, i64 %8, i32 %10) #9, !dbg !3565"}],
"warnings":[{"warn_data": {"at_line": 557, "warn_str": "Trying to use a global variable without locking.", "at": "  %278 = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %277, !dbg !3847", "inst_trace": [{"instr_func": "sync_file_ioctl", "instr_loc": -1, "instr": "  %4 = alloca i64, align 8"}, {"instr_func": "sync_file_ioctl", "instr_loc": 469, "instr_file": "drivers/dma-buf/sync_file.c", "instr": "return sync_file_ioctl_merge(sync_file, arg);"}, {"instr_func": "sync_file_ioctl_merge", "instr_loc": 351, "instr_file": "drivers/dma-buf/sync_file.c", "instr": "fence3 = sync_file_merge(data.name, sync_file, fence2);"}, {"instr_func": "sync_file_merge", "instr_loc": 228, "instr_file": "drivers/dma-buf/sync_file.c", "instr": "fences = kcalloc(num_fences, sizeof(*fences), GFP_KERNEL);"}, {"instr_func": "kcalloc", "instr_loc": 625, "instr_file": "./include/linux/slab.h", "instr": "  %11 = call i8* @kmalloc_array(i64 %7, i64 %8, i32 %10) #9, !dbg !3565"}], "at_file": "./include/linux/slab.h", "by": "GlobalVariableRaceDetector says:", "at_func": "kmalloc_array"}, "warn_no": 1}]}]}