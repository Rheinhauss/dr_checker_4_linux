{"all_contexts":[
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %5 = alloca i64, align 8"}, {"lineno": 5390, "file": "kernel/events/core.c", "instr": "ctx = perf_event_ctx_lock(event);"}, {"lineno": 1369, "file": "kernel/events/core.c", "instr": "return perf_event_ctx_lock_nested(event, 0);"}],
"warnings":[{"warn_data": {"at_line": 1347, "warn_str": "Trying to use a global variable without locking.", "at": "again:", "inst_trace": [{"instr_func": "perf_read", "instr_loc": -1, "instr": "  %5 = alloca i64, align 8"}, {"instr_func": "perf_read", "instr_loc": 5390, "instr_file": "kernel/events/core.c", "instr": "ctx = perf_event_ctx_lock(event);"}, {"instr_func": "perf_event_ctx_lock", "instr_loc": 1369, "instr_file": "kernel/events/core.c", "instr": "return perf_event_ctx_lock_nested(event, 0);"}], "at_file": "kernel/events/core.c", "by": "GlobalVariableRaceDetector says:", "at_func": "perf_event_ctx_lock_nested"}, "warn_no": 1}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %5 = alloca i64, align 8"}, {"lineno": 5391, "file": "kernel/events/core.c", "instr": "ret = __perf_read(event, buf, count);"}, {"lineno": 5374, "file": "kernel/events/core.c", "instr": "ret = perf_read_one(event, read_format, buf);"}],
"warnings":[{"warn_data": {"at_line": 5331, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "if (copy_to_user(buf, values, n * sizeof(u64)))", "inst_trace": [], "at_file": "kernel/events/core.c", "by": "TaintedSizeDetector says:", "at_func": "perf_read_one"}, "warn_no": 1}]},
{"num_warnings": 2,
"context":[{"lineno": -1, "instr": "  %5 = alloca i64, align 8"}, {"lineno": 5391, "file": "kernel/events/core.c", "instr": "ret = __perf_read(event, buf, count);"}, {"lineno": 5372, "file": "kernel/events/core.c", "instr": "ret = perf_read_group(event, read_format, buf);"}],
"warnings":[{"warn_data": {"at_line": 5278, "warn_str": "Trying to use a global variable without locking.", "at": "lockdep_assert_held(&ctx->mutex);", "inst_trace": [{"instr_func": "perf_read", "instr_loc": -1, "instr": "  %5 = alloca i64, align 8"}, {"instr_func": "perf_read", "instr_loc": 5391, "instr_file": "kernel/events/core.c", "instr": "ret = __perf_read(event, buf, count);"}, {"instr_func": "__perf_read", "instr_loc": 5372, "instr_file": "kernel/events/core.c", "instr": "ret = perf_read_group(event, read_format, buf);"}], "at_file": "kernel/events/core.c", "by": "GlobalVariableRaceDetector says:", "at_func": "perf_read_group"}, "warn_no": 1},
{"warn_data": {"at_line": 5302, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "mutex_unlock(&leader->child_mutex);", "inst_trace": [], "at_file": "kernel/events/core.c", "by": "TaintedSizeDetector says:", "at_func": "perf_read_group"}, "warn_no": 2}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %5 = alloca i64, align 8"}, {"lineno": 5391, "file": "kernel/events/core.c", "instr": "ret = __perf_read(event, buf, count);"}, {"lineno": 5372, "file": "kernel/events/core.c", "instr": "ret = perf_read_group(event, read_format, buf);"}, {"lineno": 5280, "file": "kernel/events/core.c", "instr": "values = kzalloc(event->read_size, GFP_KERNEL);"}],
"warnings":[{"warn_data": {"at_line": 557, "warn_str": "Trying to use a global variable without locking.", "at": "  %234 = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %233, !dbg !11722", "inst_trace": [{"instr_func": "perf_read", "instr_loc": -1, "instr": "  %5 = alloca i64, align 8"}, {"instr_func": "perf_read", "instr_loc": 5391, "instr_file": "kernel/events/core.c", "instr": "ret = __perf_read(event, buf, count);"}, {"instr_func": "__perf_read", "instr_loc": 5372, "instr_file": "kernel/events/core.c", "instr": "ret = perf_read_group(event, read_format, buf);"}, {"instr_func": "perf_read_group", "instr_loc": 5280, "instr_file": "kernel/events/core.c", "instr": "values = kzalloc(event->read_size, GFP_KERNEL);"}], "at_file": "./include/linux/slab.h", "by": "GlobalVariableRaceDetector says:", "at_func": "kzalloc"}, "warn_no": 1}]}]}