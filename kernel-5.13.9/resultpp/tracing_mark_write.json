{"all_contexts":[
{"num_warnings": 13,
"context":[{"lineno": -1, "instr": "  %5 = alloca %struct.trace_buffer*, align 8"}],
"warnings":[{"warn_data": {"at_line": 6990, "warn_str": "Trying to use a global variable without locking.", "at": "if (tracing_disabled)", "inst_trace": [{"instr_func": "tracing_mark_write", "instr_loc": -1, "instr": "  %5 = alloca %struct.trace_buffer*, align 8"}], "at_file": "kernel/trace/trace.c", "by": "GlobalVariableRaceDetector says:", "at_func": "tracing_mark_write"}, "warn_no": 1},
{"warn_data": {"at_line": 7001, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "size = sizeof(*entry) + cnt + 2; /* add '\\0' and possible '\\n' */", "inst_trace": [{"instr_func": "tracing_mark_write", "instr_loc": -1, "instr": "  %5 = alloca %struct.trace_buffer*, align 8"}, {"instr_func": "tracing_mark_write", "instr_loc": 6976, "instr_file": "kernel/trace/trace.c", "instr": "{"}, {"instr_func": "tracing_mark_write", "instr_loc": 7001, "instr_file": "kernel/trace/trace.c", "instr": "size = sizeof(*entry) + cnt + 2; /* add '\\0' and possible '\\n' */"}], "at_file": "kernel/trace/trace.c", "by": "IntegerOverflowDetector says:", "at_func": "tracing_mark_write"}, "warn_no": 2},
{"warn_data": {"at_line": 7001, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "size = sizeof(*entry) + cnt + 2; /* add '\\0' and possible '\\n' */", "inst_trace": [{"instr_func": "tracing_mark_write", "instr_loc": -1, "instr": "  %5 = alloca %struct.trace_buffer*, align 8"}, {"instr_func": "tracing_mark_write", "instr_loc": 6976, "instr_file": "kernel/trace/trace.c", "instr": "{"}, {"instr_func": "tracing_mark_write", "instr_loc": 7001, "instr_file": "kernel/trace/trace.c", "instr": "size = sizeof(*entry) + cnt + 2; /* add '\\0' and possible '\\n' */"}, {"instr_func": "tracing_mark_write", "instr_loc": 7001, "instr_file": "kernel/trace/trace.c", "instr": "size = sizeof(*entry) + cnt + 2; /* add '\\0' and possible '\\n' */"}], "at_file": "kernel/trace/trace.c", "by": "IntegerOverflowDetector says:", "at_func": "tracing_mark_write"}, "warn_no": 3},
{"warn_data": {"at_line": 7005, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "size += FAULTED_SIZE - cnt;", "inst_trace": [{"instr_func": "tracing_mark_write", "instr_loc": -1, "instr": "  %5 = alloca %struct.trace_buffer*, align 8"}, {"instr_func": "tracing_mark_write", "instr_loc": 6976, "instr_file": "kernel/trace/trace.c", "instr": "{"}, {"instr_func": "tracing_mark_write", "instr_loc": 7005, "instr_file": "kernel/trace/trace.c", "instr": "size += FAULTED_SIZE - cnt;"}], "at_file": "kernel/trace/trace.c", "by": "IntegerOverflowDetector says:", "at_func": "tracing_mark_write"}, "warn_no": 4},
{"warn_data": {"at_line": 7005, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "size += FAULTED_SIZE - cnt;", "inst_trace": [{"instr_func": "tracing_mark_write", "instr_loc": -1, "instr": "  %5 = alloca %struct.trace_buffer*, align 8"}, {"instr_func": "tracing_mark_write", "instr_loc": 6976, "instr_file": "kernel/trace/trace.c", "instr": "{"}, {"instr_func": "tracing_mark_write", "instr_loc": 7005, "instr_file": "kernel/trace/trace.c", "instr": "size += FAULTED_SIZE - cnt;"}, {"instr_func": "tracing_mark_write", "instr_loc": 7005, "instr_file": "kernel/trace/trace.c", "instr": "size += FAULTED_SIZE - cnt;"}], "at_file": "kernel/trace/trace.c", "by": "IntegerOverflowDetector says:", "at_func": "tracing_mark_write"}, "warn_no": 5},
{"warn_data": {"at_line": 7031, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "if (entry->buf[cnt - 1] != '\\n') {", "inst_trace": [{"instr_func": "tracing_mark_write", "instr_loc": -1, "instr": "  %5 = alloca %struct.trace_buffer*, align 8"}, {"instr_func": "tracing_mark_write", "instr_loc": 6976, "instr_file": "kernel/trace/trace.c", "instr": "{"}, {"instr_func": "tracing_mark_write", "instr_loc": 7031, "instr_file": "kernel/trace/trace.c", "instr": "if (entry->buf[cnt - 1] != '\\n') {"}], "at_file": "kernel/trace/trace.c", "by": "IntegerOverflowDetector says:", "at_func": "tracing_mark_write"}, "warn_no": 6},
{"warn_data": {"at_line": 7027, "warn_str": "Trying to write to a user pointer.", "at": "entry->buf[cnt] = '\\0';", "inst_trace": [{"instr_func": "tracing_mark_write", "instr_loc": -1, "instr": "  %5 = alloca %struct.trace_buffer*, align 8"}, {"instr_func": "tracing_mark_write", "instr_loc": 6976, "instr_file": "kernel/trace/trace.c", "instr": "{"}, {"instr_func": "tracing_mark_write", "instr_loc": 7027, "instr_file": "kernel/trace/trace.c", "instr": "entry->buf[cnt] = '\\0';"}, {"instr_func": "tracing_mark_write", "instr_loc": 7027, "instr_file": "kernel/trace/trace.c", "instr": "entry->buf[cnt] = '\\0';"}], "at_file": "kernel/trace/trace.c", "by": "TaintedPointerDereferenceChecker says:", "at_func": "tracing_mark_write"}, "warn_no": 7},
{"warn_data": {"at_line": 7031, "warn_str": "Trying to read from a user pointer.", "at": "if (entry->buf[cnt - 1] != '\\n') {", "inst_trace": [{"instr_func": "tracing_mark_write", "instr_loc": -1, "instr": "  %5 = alloca %struct.trace_buffer*, align 8"}, {"instr_func": "tracing_mark_write", "instr_loc": 6976, "instr_file": "kernel/trace/trace.c", "instr": "{"}, {"instr_func": "tracing_mark_write", "instr_loc": 7031, "instr_file": "kernel/trace/trace.c", "instr": "if (entry->buf[cnt - 1] != '\\n') {"}, {"instr_func": "tracing_mark_write", "instr_loc": 7031, "instr_file": "kernel/trace/trace.c", "instr": "if (entry->buf[cnt - 1] != '\\n') {"}, {"instr_func": "tracing_mark_write", "instr_loc": 7031, "instr_file": "kernel/trace/trace.c", "instr": "if (entry->buf[cnt - 1] != '\\n') {"}], "at_file": "kernel/trace/trace.c", "by": "TaintedPointerDereferenceChecker says:", "at_func": "tracing_mark_write"}, "warn_no": 8},
{"warn_data": {"at_line": 7035, "warn_str": "Trying to write to a user pointer.", "at": "entry->buf[cnt] = '\\0';", "inst_trace": [{"instr_func": "tracing_mark_write", "instr_loc": -1, "instr": "  %5 = alloca %struct.trace_buffer*, align 8"}, {"instr_func": "tracing_mark_write", "instr_loc": 6976, "instr_file": "kernel/trace/trace.c", "instr": "{"}, {"instr_func": "tracing_mark_write", "instr_loc": 7035, "instr_file": "kernel/trace/trace.c", "instr": "entry->buf[cnt] = '\\0';"}, {"instr_func": "tracing_mark_write", "instr_loc": 7035, "instr_file": "kernel/trace/trace.c", "instr": "entry->buf[cnt] = '\\0';"}], "at_file": "kernel/trace/trace.c", "by": "TaintedPointerDereferenceChecker says:", "at_func": "tracing_mark_write"}, "warn_no": 9},
{"warn_data": {"at_line": 7032, "warn_str": "Trying to write to a user pointer.", "at": "entry->buf[cnt] = '\\n';", "inst_trace": [{"instr_func": "tracing_mark_write", "instr_loc": -1, "instr": "  %5 = alloca %struct.trace_buffer*, align 8"}, {"instr_func": "tracing_mark_write", "instr_loc": 6976, "instr_file": "kernel/trace/trace.c", "instr": "{"}, {"instr_func": "tracing_mark_write", "instr_loc": 7032, "instr_file": "kernel/trace/trace.c", "instr": "entry->buf[cnt] = '\\n';"}, {"instr_func": "tracing_mark_write", "instr_loc": 7032, "instr_file": "kernel/trace/trace.c", "instr": "entry->buf[cnt] = '\\n';"}], "at_file": "kernel/trace/trace.c", "by": "TaintedPointerDereferenceChecker says:", "at_func": "tracing_mark_write"}, "warn_no": 10},
{"warn_data": {"at_line": 7033, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "entry->buf[cnt + 1] = '\\0';", "inst_trace": [{"instr_func": "tracing_mark_write", "instr_loc": -1, "instr": "  %5 = alloca %struct.trace_buffer*, align 8"}, {"instr_func": "tracing_mark_write", "instr_loc": 6976, "instr_file": "kernel/trace/trace.c", "instr": "{"}, {"instr_func": "tracing_mark_write", "instr_loc": 7033, "instr_file": "kernel/trace/trace.c", "instr": "entry->buf[cnt + 1] = '\\0';"}], "at_file": "kernel/trace/trace.c", "by": "IntegerOverflowDetector says:", "at_func": "tracing_mark_write"}, "warn_no": 11},
{"warn_data": {"at_line": 7033, "warn_str": "Trying to write to a user pointer.", "at": "entry->buf[cnt + 1] = '\\0';", "inst_trace": [{"instr_func": "tracing_mark_write", "instr_loc": -1, "instr": "  %5 = alloca %struct.trace_buffer*, align 8"}, {"instr_func": "tracing_mark_write", "instr_loc": 6976, "instr_file": "kernel/trace/trace.c", "instr": "{"}, {"instr_func": "tracing_mark_write", "instr_loc": 7033, "instr_file": "kernel/trace/trace.c", "instr": "entry->buf[cnt + 1] = '\\0';"}, {"instr_func": "tracing_mark_write", "instr_loc": 7033, "instr_file": "kernel/trace/trace.c", "instr": "entry->buf[cnt + 1] = '\\0';"}, {"instr_func": "tracing_mark_write", "instr_loc": 7033, "instr_file": "kernel/trace/trace.c", "instr": "entry->buf[cnt + 1] = '\\0';"}], "at_file": "kernel/trace/trace.c", "by": "TaintedPointerDereferenceChecker says:", "at_func": "tracing_mark_write"}, "warn_no": 12},
{"warn_data": {"at_line": 7045, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "*fpos += written;", "inst_trace": [{"instr_func": "tracing_mark_write", "instr_loc": -1, "instr": "  %5 = alloca %struct.trace_buffer*, align 8"}, {"instr_func": "tracing_mark_write", "instr_loc": 6976, "instr_file": "kernel/trace/trace.c", "instr": "{"}, {"instr_func": "tracing_mark_write", "instr_loc": 7023, "instr_file": "kernel/trace/trace.c", "instr": "written = cnt;"}, {"instr_func": "tracing_mark_write", "instr_loc": 7023, "instr_file": "kernel/trace/trace.c", "instr": "written = cnt;"}, {"instr_func": "tracing_mark_write", "instr_loc": 7045, "instr_file": "kernel/trace/trace.c", "instr": "*fpos += written;"}], "at_file": "kernel/trace/trace.c", "by": "IntegerOverflowDetector says:", "at_func": "tracing_mark_write"}, "warn_no": 13}]}]}