{"all_contexts":[
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %6 = alloca i64, align 8"}],
"warnings":[{"warn_data": {"at_line": 2068, "warn_str": "Trying to use a global variable without locking.", "at": "vpfe_dbg(2, vpfe,", "inst_trace": [{"instr_func": "vpfe_ioctl_default", "instr_loc": -1, "instr": "  %6 = alloca i64, align 8"}], "at_file": "drivers/media/platform/am437x/am437x-vpfe.c", "by": "GlobalVariableRaceDetector says:", "at_func": "vpfe_ioctl_default"}, "warn_no": 1}]},
{"num_warnings": 2,
"context":[{"lineno": -1, "instr": "  %6 = alloca i64, align 8"}, {"lineno": 2059, "file": "drivers/media/platform/am437x/am437x-vpfe.c", "instr": "ret = vpfe_ccdc_set_params(&vpfe->ccdc, (void __user *)param);"}],
"warnings":[{"warn_data": {"at_line": 362, "warn_str": "Trying to use a global variable without locking.", "at": "vpfe_dbg(1, vpfe,", "inst_trace": [{"instr_func": "vpfe_ioctl_default", "instr_loc": -1, "instr": "  %6 = alloca i64, align 8"}, {"instr_func": "vpfe_ioctl_default", "instr_loc": 2059, "instr_file": "drivers/media/platform/am437x/am437x-vpfe.c", "instr": "ret = vpfe_ccdc_set_params(&vpfe->ccdc, (void __user *)param);"}], "at_file": "drivers/media/platform/am437x/am437x-vpfe.c", "by": "GlobalVariableRaceDetector says:", "at_func": "vpfe_ccdc_set_params"}, "warn_no": 1},
{"warn_data": {"at_line": 360, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "x = copy_from_user(&raw_params, params, sizeof(raw_params));", "inst_trace": [], "at_file": "drivers/media/platform/am437x/am437x-vpfe.c", "by": "TaintedSizeDetector says:", "at_func": "vpfe_ccdc_set_params"}, "warn_no": 2}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %6 = alloca i64, align 8"}, {"lineno": 2059, "file": "drivers/media/platform/am437x/am437x-vpfe.c", "instr": "ret = vpfe_ccdc_set_params(&vpfe->ccdc, (void __user *)param);"}, {"lineno": 368, "file": "drivers/media/platform/am437x/am437x-vpfe.c", "instr": "if (!vpfe_ccdc_validate_param(ccdc, &raw_params)) {"}],
"warnings":[{"warn_data": {"at_line": 291, "warn_str": "Trying to use a global variable without locking.", "at": "vpfe_dbg(1, vpfe, \"Invalid data line select\\n\");", "inst_trace": [{"instr_func": "vpfe_ioctl_default", "instr_loc": -1, "instr": "  %6 = alloca i64, align 8"}, {"instr_func": "vpfe_ioctl_default", "instr_loc": 2059, "instr_file": "drivers/media/platform/am437x/am437x-vpfe.c", "instr": "ret = vpfe_ccdc_set_params(&vpfe->ccdc, (void __user *)param);"}, {"instr_func": "vpfe_ccdc_set_params", "instr_loc": 368, "instr_file": "drivers/media/platform/am437x/am437x-vpfe.c", "instr": "if (!vpfe_ccdc_validate_param(ccdc, &raw_params)) {"}], "at_file": "drivers/media/platform/am437x/am437x-vpfe.c", "by": "GlobalVariableRaceDetector says:", "at_func": "vpfe_ccdc_validate_param"}, "warn_no": 1}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %6 = alloca i64, align 8"}, {"lineno": 2059, "file": "drivers/media/platform/am437x/am437x-vpfe.c", "instr": "ret = vpfe_ccdc_set_params(&vpfe->ccdc, (void __user *)param);"}, {"lineno": 368, "file": "drivers/media/platform/am437x/am437x-vpfe.c", "instr": "if (!vpfe_ccdc_validate_param(ccdc, &raw_params)) {"}, {"lineno": 285, "file": "drivers/media/platform/am437x/am437x-vpfe.c", "instr": "max_gamma = ccdc_gamma_width_max_bit(ccdcparam->alaw.gamma_wd);"}],
"warnings":[{"warn_data": {"at_line": 122, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "  %4 = sub i32 15, %3, !dbg !8400", "inst_trace": [{"instr_func": "vpfe_ccdc_set_params", "instr_loc": 360, "instr_file": "drivers/media/platform/am437x/am437x-vpfe.c", "instr": "x = copy_from_user(&raw_params, params, sizeof(raw_params));"}, {"instr_func": "vpfe_ccdc_validate_param", "instr_loc": 285, "instr_file": "drivers/media/platform/am437x/am437x-vpfe.c", "instr": "max_gamma = ccdc_gamma_width_max_bit(ccdcparam->alaw.gamma_wd);"}, {"instr_func": "vpfe_ccdc_validate_param", "instr_loc": 285, "instr_file": "drivers/media/platform/am437x/am437x-vpfe.c", "instr": "max_gamma = ccdc_gamma_width_max_bit(ccdcparam->alaw.gamma_wd);"}, {"instr_func": "ccdc_gamma_width_max_bit", "instr_loc": 121, "instr_file": "drivers/media/platform/am437x/am437x-vpfe.h", "instr": "  store i32 %0, i32* %2, align 4"}, {"instr_func": "ccdc_gamma_width_max_bit", "instr_loc": 122, "instr_file": "drivers/media/platform/am437x/am437x-vpfe.h", "instr": "  %3 = load i32, i32* %2, align 4, !dbg !8399"}], "at_file": "drivers/media/platform/am437x/am437x-vpfe.h", "by": "IntegerOverflowDetector says:", "at_func": "ccdc_gamma_width_max_bit"}, "warn_no": 1}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %6 = alloca i64, align 8"}, {"lineno": 2059, "file": "drivers/media/platform/am437x/am437x-vpfe.c", "instr": "ret = vpfe_ccdc_set_params(&vpfe->ccdc, (void __user *)param);"}, {"lineno": 368, "file": "drivers/media/platform/am437x/am437x-vpfe.c", "instr": "if (!vpfe_ccdc_validate_param(ccdc, &raw_params)) {"}, {"lineno": 286, "file": "drivers/media/platform/am437x/am437x-vpfe.c", "instr": "max_data = ccdc_data_size_max_bit(ccdcparam->data_sz);"}],
"warnings":[{"warn_data": {"at_line": 128, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "  %8 = sub i32 15, %7, !dbg !8402", "inst_trace": [{"instr_func": "vpfe_ccdc_set_params", "instr_loc": 360, "instr_file": "drivers/media/platform/am437x/am437x-vpfe.c", "instr": "x = copy_from_user(&raw_params, params, sizeof(raw_params));"}, {"instr_func": "vpfe_ccdc_validate_param", "instr_loc": 286, "instr_file": "drivers/media/platform/am437x/am437x-vpfe.c", "instr": "max_data = ccdc_data_size_max_bit(ccdcparam->data_sz);"}, {"instr_func": "vpfe_ccdc_validate_param", "instr_loc": 286, "instr_file": "drivers/media/platform/am437x/am437x-vpfe.c", "instr": "max_data = ccdc_data_size_max_bit(ccdcparam->data_sz);"}, {"instr_func": "ccdc_data_size_max_bit", "instr_loc": 127, "instr_file": "drivers/media/platform/am437x/am437x-vpfe.h", "instr": "  store i32 %0, i32* %2, align 4"}, {"instr_func": "ccdc_data_size_max_bit", "instr_loc": 128, "instr_file": "drivers/media/platform/am437x/am437x-vpfe.h", "instr": "  %7 = load i32, i32* %2, align 4, !dbg !8401"}], "at_file": "drivers/media/platform/am437x/am437x-vpfe.h", "by": "IntegerOverflowDetector says:", "at_func": "ccdc_data_size_max_bit"}, "warn_no": 1}]}]}