{"all_contexts":[
{"num_warnings": 4,
"context":[{"lineno": -1, "instr": "  %5 = alloca i8*, align 8"}],
"warnings":[{"warn_data": {"at_line": 688, "warn_str": "Loop is bounded by a tainted value.", "at": "more:if (count > 0) {", "inst_trace": [{"instr_func": "ftdi_elan_read", "instr_loc": -1, "instr": "  %5 = alloca i8*, align 8"}, {"instr_func": "ftdi_elan_read", "instr_loc": 658, "instr_file": "drivers/usb/misc/ftdi-elan.c", "instr": "{"}, {"instr_func": "ftdi_elan_read", "instr_loc": 688, "instr_file": "drivers/usb/misc/ftdi-elan.c", "instr": "more:if (count > 0) {"}, {"instr_func": "ftdi_elan_read", "instr_loc": 688, "instr_file": "drivers/usb/misc/ftdi-elan.c", "instr": "more:if (count > 0) {"}], "at_file": "drivers/usb/misc/ftdi-elan.c", "by": "TaintedLoopBoundDetector says:", "at_func": "ftdi_elan_read"}, "warn_no": 1},
{"warn_data": {"at_line": 671, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "if (count-- > 0) {", "inst_trace": [{"instr_func": "ftdi_elan_read", "instr_loc": -1, "instr": "  %5 = alloca i8*, align 8"}, {"instr_func": "ftdi_elan_read", "instr_loc": 658, "instr_file": "drivers/usb/misc/ftdi-elan.c", "instr": "{"}, {"instr_func": "ftdi_elan_read", "instr_loc": 671, "instr_file": "drivers/usb/misc/ftdi-elan.c", "instr": "if (count-- > 0) {"}], "at_file": "drivers/usb/misc/ftdi-elan.c", "by": "IntegerOverflowDetector says:", "at_func": "ftdi_elan_read"}, "warn_no": 2},
{"warn_data": {"at_line": 671, "warn_str": "Loop is bounded by a tainted value.", "at": "if (count-- > 0) {", "inst_trace": [{"instr_func": "ftdi_elan_read", "instr_loc": -1, "instr": "  %5 = alloca i8*, align 8"}, {"instr_func": "ftdi_elan_read", "instr_loc": 658, "instr_file": "drivers/usb/misc/ftdi-elan.c", "instr": "{"}, {"instr_func": "ftdi_elan_read", "instr_loc": 671, "instr_file": "drivers/usb/misc/ftdi-elan.c", "instr": "if (count-- > 0) {"}, {"instr_func": "ftdi_elan_read", "instr_loc": 671, "instr_file": "drivers/usb/misc/ftdi-elan.c", "instr": "if (count-- > 0) {"}], "at_file": "drivers/usb/misc/ftdi-elan.c", "by": "TaintedLoopBoundDetector says:", "at_func": "ftdi_elan_read"}, "warn_no": 3},
{"warn_data": {"at_line": 679, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "if (copy_to_user(buffer++, p, 1)) {", "inst_trace": [], "at_file": "drivers/usb/misc/ftdi-elan.c", "by": "TaintedSizeDetector says:", "at_func": "ftdi_elan_read"}, "warn_no": 4}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %5 = alloca i8*, align 8"}, {"lineno": 690, "file": "drivers/usb/misc/ftdi-elan.c", "instr": "int retval = usb_bulk_msg(ftdi->udev,"}, {"lineno": 239, "file": "drivers/usb/core/message.c", "instr": "urb = usb_alloc_urb(0, GFP_KERNEL);"}],
"warnings":[{"warn_data": {"at_line": 70, "warn_str": "Trying to use a global variable without locking.", "at": "{", "inst_trace": [{"instr_func": "ftdi_elan_read", "instr_loc": -1, "instr": "  %5 = alloca i8*, align 8"}, {"instr_func": "ftdi_elan_read", "instr_loc": 690, "instr_file": "drivers/usb/misc/ftdi-elan.c", "instr": "int retval = usb_bulk_msg(ftdi->udev,"}, {"instr_func": "usb_bulk_msg", "instr_loc": 239, "instr_file": "drivers/usb/core/message.c", "instr": "urb = usb_alloc_urb(0, GFP_KERNEL);"}], "at_file": "drivers/usb/core/urb.c", "by": "GlobalVariableRaceDetector says:", "at_func": "usb_alloc_urb"}, "warn_no": 1}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %5 = alloca i8*, align 8"}, {"lineno": 690, "file": "drivers/usb/misc/ftdi-elan.c", "instr": "int retval = usb_bulk_msg(ftdi->udev,"}, {"lineno": 253, "file": "drivers/usb/core/message.c", "instr": "return usb_start_wait_urb(urb, timeout, actual_length);"}, {"lineno": 57, "file": "drivers/usb/core/message.c", "instr": "retval = usb_submit_urb(urb, GFP_NOIO);"}],
"warnings":[{"warn_data": {"at_line": 477, "warn_str": "Trying to use a global variable without locking.", "at": "dev_WARN(&dev->dev, \"BOGUS urb xfer, pipe %x != type %x\\n\",", "inst_trace": [{"instr_func": "ftdi_elan_read", "instr_loc": -1, "instr": "  %5 = alloca i8*, align 8"}, {"instr_func": "ftdi_elan_read", "instr_loc": 690, "instr_file": "drivers/usb/misc/ftdi-elan.c", "instr": "int retval = usb_bulk_msg(ftdi->udev,"}, {"instr_func": "usb_bulk_msg", "instr_loc": 253, "instr_file": "drivers/usb/core/message.c", "instr": "return usb_start_wait_urb(urb, timeout, actual_length);"}, {"instr_func": "usb_start_wait_urb", "instr_loc": 57, "instr_file": "drivers/usb/core/message.c", "instr": "retval = usb_submit_urb(urb, GFP_NOIO);"}], "at_file": "drivers/usb/core/urb.c", "by": "GlobalVariableRaceDetector says:", "at_func": "usb_submit_urb"}, "warn_no": 1}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %5 = alloca i8*, align 8"}, {"lineno": 690, "file": "drivers/usb/misc/ftdi-elan.c", "instr": "int retval = usb_bulk_msg(ftdi->udev,"}, {"lineno": 253, "file": "drivers/usb/core/message.c", "instr": "return usb_start_wait_urb(urb, timeout, actual_length);"}, {"lineno": 57, "file": "drivers/usb/core/message.c", "instr": "retval = usb_submit_urb(urb, GFP_NOIO);"}, {"lineno": 476, "file": "drivers/usb/core/urb.c", "instr": "if (usb_urb_ep_type_check(urb))"}],
"warnings":[{"warn_data": {"at_line": 208, "warn_str": "Trying to use a global variable without locking.", "at": "if (usb_pipetype(urb->pipe) != pipetypes[usb_endpoint_type(&ep->desc)])", "inst_trace": [{"instr_func": "ftdi_elan_read", "instr_loc": -1, "instr": "  %5 = alloca i8*, align 8"}, {"instr_func": "ftdi_elan_read", "instr_loc": 690, "instr_file": "drivers/usb/misc/ftdi-elan.c", "instr": "int retval = usb_bulk_msg(ftdi->udev,"}, {"instr_func": "usb_bulk_msg", "instr_loc": 253, "instr_file": "drivers/usb/core/message.c", "instr": "return usb_start_wait_urb(urb, timeout, actual_length);"}, {"instr_func": "usb_start_wait_urb", "instr_loc": 57, "instr_file": "drivers/usb/core/message.c", "instr": "retval = usb_submit_urb(urb, GFP_NOIO);"}, {"instr_func": "usb_submit_urb", "instr_loc": 476, "instr_file": "drivers/usb/core/urb.c", "instr": "if (usb_urb_ep_type_check(urb))"}], "at_file": "drivers/usb/core/urb.c", "by": "GlobalVariableRaceDetector says:", "at_func": "usb_urb_ep_type_check"}, "warn_no": 1}]}]}