{"all_contexts":[
{"num_warnings": 3,
"context":[{"lineno": -1, "instr": "  %4 = alloca %struct.file*, align 8"}, {"lineno": 2044, "file": "drivers/scsi/dpt_i2o.c", "instr": "ret = adpt_ioctl(inode, file, cmd, arg);"}],
"warnings":[{"warn_data": {"at_line": 1979, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "if (copy_to_user(argp, &DPTI_sig, sizeof(DPTI_sig))) {", "inst_trace": [], "at_file": "drivers/scsi/dpt_i2o.c", "by": "TaintedSizeDetector says:", "at_func": "adpt_ioctl"}, "warn_no": 1},
{"warn_data": {"at_line": 2009, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "u32 value;", "inst_trace": [], "at_file": "drivers/scsi/dpt_i2o.c", "by": "TaintedSizeDetector says:", "at_func": "adpt_ioctl"}, "warn_no": 2},
{"warn_data": {"at_line": 1987, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "drvrHBAinfo_S HbaInfo;", "inst_trace": [], "at_file": "drivers/scsi/dpt_i2o.c", "by": "TaintedSizeDetector says:", "at_func": "adpt_ioctl"}, "warn_no": 3}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %4 = alloca %struct.file*, align 8"}, {"lineno": 2044, "file": "drivers/scsi/dpt_i2o.c", "instr": "ret = adpt_ioctl(inode, file, cmd, arg);"}, {"lineno": 2007, "file": "drivers/scsi/dpt_i2o.c", "instr": "return adpt_system_info(argp);"}],
"warnings":[{"warn_data": {"at_line": 1919, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "{", "inst_trace": [], "at_file": "drivers/scsi/dpt_i2o.c", "by": "TaintedSizeDetector says:", "at_func": "adpt_system_info"}, "warn_no": 1}]},
{"num_warnings": 25,
"context":[{"lineno": -1, "instr": "  %4 = alloca %struct.file*, align 8"}, {"lineno": 2044, "file": "drivers/scsi/dpt_i2o.c", "instr": "ret = adpt_ioctl(inode, file, cmd, arg);"}, {"lineno": 1984, "file": "drivers/scsi/dpt_i2o.c", "instr": "return adpt_i2o_passthru(pHba, argp);"}],
"warnings":[{"warn_data": {"at_line": 1718, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "sg_count = (size - sg_offset*4) / sizeof(struct sg_simple_element);", "inst_trace": [{"instr_func": "adpt_i2o_passthru", "instr_loc": 1685, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "size *= 4; // Convert to bytes"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1702, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_offset = (msg[0]>>4)&0xf;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1702, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_offset = (msg[0]>>4)&0xf;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1702, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_offset = (msg[0]>>4)&0xf;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1702, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_offset = (msg[0]>>4)&0xf;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1718, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_count = (size - sg_offset*4) / sizeof(struct sg_simple_element);"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1718, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_count = (size - sg_offset*4) / sizeof(struct sg_simple_element);"}], "at_file": "drivers/scsi/dpt_i2o.c", "by": "IntegerOverflowDetector says:", "at_func": "adpt_i2o_passthru"}, "warn_no": 1},
{"warn_data": {"at_line": 1685, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "size *= 4; // Convert to bytes", "inst_trace": [], "at_file": "drivers/scsi/dpt_i2o.c", "by": "TaintedSizeDetector says:", "at_func": "adpt_i2o_passthru"}, "warn_no": 2},
{"warn_data": {"at_line": 1753, "warn_str": "Trying to write to a user pointer.", "at": "sg[i].addr_bus = addr;", "inst_trace": [{"instr_func": "adpt_i2o_passthru", "instr_loc": 1685, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "size *= 4; // Convert to bytes"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1702, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_offset = (msg[0]>>4)&0xf;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1702, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_offset = (msg[0]>>4)&0xf;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1702, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_offset = (msg[0]>>4)&0xf;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1702, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_offset = (msg[0]>>4)&0xf;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1717, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "struct sg_simple_element *sg =  (struct sg_simple_element*) (msg+sg_offset);"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1717, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "struct sg_simple_element *sg =  (struct sg_simple_element*) (msg+sg_offset);"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1717, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "struct sg_simple_element *sg =  (struct sg_simple_element*) (msg+sg_offset);"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1717, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "struct sg_simple_element *sg =  (struct sg_simple_element*) (msg+sg_offset);"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1753, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg[i].addr_bus = addr;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1753, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg[i].addr_bus = addr;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1753, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg[i].addr_bus = addr;"}], "at_file": "drivers/scsi/dpt_i2o.c", "by": "TaintedPointerDereferenceChecker says:", "at_func": "adpt_i2o_passthru"}, "warn_no": 3},
{"warn_data": {"at_line": 1746, "warn_str": "Trying to read from a user pointer.", "at": "if (copy_from_user(p,(void __user *)(ulong)sg[i].addr_bus, sg_size)) {", "inst_trace": [{"instr_func": "adpt_i2o_passthru", "instr_loc": 1685, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "size *= 4; // Convert to bytes"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1702, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_offset = (msg[0]>>4)&0xf;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1702, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_offset = (msg[0]>>4)&0xf;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1702, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_offset = (msg[0]>>4)&0xf;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1702, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_offset = (msg[0]>>4)&0xf;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1717, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "struct sg_simple_element *sg =  (struct sg_simple_element*) (msg+sg_offset);"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1717, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "struct sg_simple_element *sg =  (struct sg_simple_element*) (msg+sg_offset);"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1717, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "struct sg_simple_element *sg =  (struct sg_simple_element*) (msg+sg_offset);"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1717, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "struct sg_simple_element *sg =  (struct sg_simple_element*) (msg+sg_offset);"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1746, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "if (copy_from_user(p,(void __user *)(ulong)sg[i].addr_bus, sg_size)) {"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1746, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "if (copy_from_user(p,(void __user *)(ulong)sg[i].addr_bus, sg_size)) {"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1746, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "if (copy_from_user(p,(void __user *)(ulong)sg[i].addr_bus, sg_size)) {"}], "at_file": "drivers/scsi/dpt_i2o.c", "by": "TaintedPointerDereferenceChecker says:", "at_func": "adpt_i2o_passthru"}, "warn_no": 4},
{"warn_data": {"at_line": 1744, "warn_str": "Trying to read from a user pointer.", "at": "if(sg[i].flag_count & 0x04000000 /*I2O_SGL_FLAGS_DIR*/) {", "inst_trace": [{"instr_func": "adpt_i2o_passthru", "instr_loc": 1685, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "size *= 4; // Convert to bytes"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1702, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_offset = (msg[0]>>4)&0xf;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1702, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_offset = (msg[0]>>4)&0xf;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1702, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_offset = (msg[0]>>4)&0xf;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1702, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_offset = (msg[0]>>4)&0xf;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1717, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "struct sg_simple_element *sg =  (struct sg_simple_element*) (msg+sg_offset);"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1717, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "struct sg_simple_element *sg =  (struct sg_simple_element*) (msg+sg_offset);"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1717, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "struct sg_simple_element *sg =  (struct sg_simple_element*) (msg+sg_offset);"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1717, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "struct sg_simple_element *sg =  (struct sg_simple_element*) (msg+sg_offset);"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1744, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "if(sg[i].flag_count & 0x04000000 /*I2O_SGL_FLAGS_DIR*/) {"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1744, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "if(sg[i].flag_count & 0x04000000 /*I2O_SGL_FLAGS_DIR*/) {"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1744, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "if(sg[i].flag_count & 0x04000000 /*I2O_SGL_FLAGS_DIR*/) {"}], "at_file": "drivers/scsi/dpt_i2o.c", "by": "TaintedPointerDereferenceChecker says:", "at_func": "adpt_i2o_passthru"}, "warn_no": 5},
{"warn_data": {"at_line": 1733, "warn_str": "Trying to read from a user pointer.", "at": "sg_size = sg[i].flag_count & 0xffffff;", "inst_trace": [{"instr_func": "adpt_i2o_passthru", "instr_loc": 1685, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "size *= 4; // Convert to bytes"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1702, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_offset = (msg[0]>>4)&0xf;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1702, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_offset = (msg[0]>>4)&0xf;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1702, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_offset = (msg[0]>>4)&0xf;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1702, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_offset = (msg[0]>>4)&0xf;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1717, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "struct sg_simple_element *sg =  (struct sg_simple_element*) (msg+sg_offset);"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1717, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "struct sg_simple_element *sg =  (struct sg_simple_element*) (msg+sg_offset);"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1717, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "struct sg_simple_element *sg =  (struct sg_simple_element*) (msg+sg_offset);"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1717, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "struct sg_simple_element *sg =  (struct sg_simple_element*) (msg+sg_offset);"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1733, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_size = sg[i].flag_count & 0xffffff;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1733, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_size = sg[i].flag_count & 0xffffff;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1733, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_size = sg[i].flag_count & 0xffffff;"}], "at_file": "drivers/scsi/dpt_i2o.c", "by": "TaintedPointerDereferenceChecker says:", "at_func": "adpt_i2o_passthru"}, "warn_no": 6},
{"warn_data": {"at_line": 1728, "warn_str": "Trying to read from a user pointer.", "at": "if (!(sg[i].flag_count & 0x10000000 /*I2O_SGL_FLAGS_SIMPLE_ADDRESS_ELEMENT*/)) {", "inst_trace": [{"instr_func": "adpt_i2o_passthru", "instr_loc": 1685, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "size *= 4; // Convert to bytes"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1702, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_offset = (msg[0]>>4)&0xf;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1702, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_offset = (msg[0]>>4)&0xf;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1702, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_offset = (msg[0]>>4)&0xf;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1702, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_offset = (msg[0]>>4)&0xf;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1717, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "struct sg_simple_element *sg =  (struct sg_simple_element*) (msg+sg_offset);"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1717, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "struct sg_simple_element *sg =  (struct sg_simple_element*) (msg+sg_offset);"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1717, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "struct sg_simple_element *sg =  (struct sg_simple_element*) (msg+sg_offset);"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1717, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "struct sg_simple_element *sg =  (struct sg_simple_element*) (msg+sg_offset);"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1728, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "if (!(sg[i].flag_count & 0x10000000 /*I2O_SGL_FLAGS_SIMPLE_ADDRESS_ELEMENT*/)) {"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1728, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "if (!(sg[i].flag_count & 0x10000000 /*I2O_SGL_FLAGS_SIMPLE_ADDRESS_ELEMENT*/)) {"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1728, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "if (!(sg[i].flag_count & 0x10000000 /*I2O_SGL_FLAGS_SIMPLE_ADDRESS_ELEMENT*/)) {"}], "at_file": "drivers/scsi/dpt_i2o.c", "by": "TaintedPointerDereferenceChecker says:", "at_func": "adpt_i2o_passthru"}, "warn_no": 7},
{"warn_data": {"at_line": 1728, "warn_str": "Loop is bounded by a tainted value.", "at": "if (!(sg[i].flag_count & 0x10000000 /*I2O_SGL_FLAGS_SIMPLE_ADDRESS_ELEMENT*/)) {", "inst_trace": [{"instr_func": "adpt_i2o_passthru", "instr_loc": 1685, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "size *= 4; // Convert to bytes"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1702, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_offset = (msg[0]>>4)&0xf;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1702, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_offset = (msg[0]>>4)&0xf;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1702, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_offset = (msg[0]>>4)&0xf;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1702, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_offset = (msg[0]>>4)&0xf;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1717, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "struct sg_simple_element *sg =  (struct sg_simple_element*) (msg+sg_offset);"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1717, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "struct sg_simple_element *sg =  (struct sg_simple_element*) (msg+sg_offset);"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1717, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "struct sg_simple_element *sg =  (struct sg_simple_element*) (msg+sg_offset);"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1717, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "struct sg_simple_element *sg =  (struct sg_simple_element*) (msg+sg_offset);"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1728, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "if (!(sg[i].flag_count & 0x10000000 /*I2O_SGL_FLAGS_SIMPLE_ADDRESS_ELEMENT*/)) {"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1728, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "if (!(sg[i].flag_count & 0x10000000 /*I2O_SGL_FLAGS_SIMPLE_ADDRESS_ELEMENT*/)) {"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1728, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "if (!(sg[i].flag_count & 0x10000000 /*I2O_SGL_FLAGS_SIMPLE_ADDRESS_ELEMENT*/)) {"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1728, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "if (!(sg[i].flag_count & 0x10000000 /*I2O_SGL_FLAGS_SIMPLE_ADDRESS_ELEMENT*/)) {"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1728, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "if (!(sg[i].flag_count & 0x10000000 /*I2O_SGL_FLAGS_SIMPLE_ADDRESS_ELEMENT*/)) {"}], "at_file": "drivers/scsi/dpt_i2o.c", "by": "TaintedLoopBoundDetector says:", "at_func": "adpt_i2o_passthru"}, "warn_no": 8},
{"warn_data": {"at_line": 1725, "warn_str": "Loop is bounded by a tainted value.", "at": "for(i = 0; i < sg_count; i++) {", "inst_trace": [{"instr_func": "adpt_i2o_passthru", "instr_loc": 1685, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "size *= 4; // Convert to bytes"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1702, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_offset = (msg[0]>>4)&0xf;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1702, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_offset = (msg[0]>>4)&0xf;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1702, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_offset = (msg[0]>>4)&0xf;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1702, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_offset = (msg[0]>>4)&0xf;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1718, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_count = (size - sg_offset*4) / sizeof(struct sg_simple_element);"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1718, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_count = (size - sg_offset*4) / sizeof(struct sg_simple_element);"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1718, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_count = (size - sg_offset*4) / sizeof(struct sg_simple_element);"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1718, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_count = (size - sg_offset*4) / sizeof(struct sg_simple_element);"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1718, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_count = (size - sg_offset*4) / sizeof(struct sg_simple_element);"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1718, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_count = (size - sg_offset*4) / sizeof(struct sg_simple_element);"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1725, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "for(i = 0; i < sg_count; i++) {"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1725, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "for(i = 0; i < sg_count; i++) {"}], "at_file": "drivers/scsi/dpt_i2o.c", "by": "TaintedLoopBoundDetector says:", "at_func": "adpt_i2o_passthru"}, "warn_no": 9},
{"warn_data": {"at_line": 1746, "warn_str": "Loop is bounded by a tainted value.", "at": "if (copy_from_user(p,(void __user *)(ulong)sg[i].addr_bus, sg_size)) {", "inst_trace": [{"instr_func": "adpt_i2o_passthru", "instr_loc": 1685, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "size *= 4; // Convert to bytes"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1733, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_size = sg[i].flag_count & 0xffffff;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1733, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_size = sg[i].flag_count & 0xffffff;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1733, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_size = sg[i].flag_count & 0xffffff;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1746, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "if (copy_from_user(p,(void __user *)(ulong)sg[i].addr_bus, sg_size)) {"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1746, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "if (copy_from_user(p,(void __user *)(ulong)sg[i].addr_bus, sg_size)) {"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1746, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "if (copy_from_user(p,(void __user *)(ulong)sg[i].addr_bus, sg_size)) {"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1746, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "if (copy_from_user(p,(void __user *)(ulong)sg[i].addr_bus, sg_size)) {"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1746, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "if (copy_from_user(p,(void __user *)(ulong)sg[i].addr_bus, sg_size)) {"}], "at_file": "drivers/scsi/dpt_i2o.c", "by": "TaintedLoopBoundDetector says:", "at_func": "adpt_i2o_passthru"}, "warn_no": 10},
{"warn_data": {"at_line": 1746, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "if (copy_from_user(p,(void __user *)(ulong)sg[i].addr_bus, sg_size)) {", "inst_trace": [], "at_file": "drivers/scsi/dpt_i2o.c", "by": "TaintedSizeDetector says:", "at_func": "adpt_i2o_passthru"}, "warn_no": 11},
{"warn_data": {"at_line": 1805, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "sg_count = (size - sg_offset*4) / sizeof(struct sg_simple_element);", "inst_trace": [{"instr_func": "adpt_i2o_passthru", "instr_loc": 1685, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "size *= 4; // Convert to bytes"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1702, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_offset = (msg[0]>>4)&0xf;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1702, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_offset = (msg[0]>>4)&0xf;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1702, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_offset = (msg[0]>>4)&0xf;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1702, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_offset = (msg[0]>>4)&0xf;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1805, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_count = (size - sg_offset*4) / sizeof(struct sg_simple_element);"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1805, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_count = (size - sg_offset*4) / sizeof(struct sg_simple_element);"}], "at_file": "drivers/scsi/dpt_i2o.c", "by": "IntegerOverflowDetector says:", "at_func": "adpt_i2o_passthru"}, "warn_no": 12},
{"warn_data": {"at_line": 1801, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "if (copy_from_user (msg, user_msg, size)) {", "inst_trace": [], "at_file": "drivers/scsi/dpt_i2o.c", "by": "TaintedSizeDetector says:", "at_func": "adpt_i2o_passthru"}, "warn_no": 13},
{"warn_data": {"at_line": 1814, "warn_str": "Trying to read from a user pointer.", "at": "if (copy_to_user((void __user *)(ulong)sg[j].addr_bus,sg_list[j], sg_size)) {", "inst_trace": [{"instr_func": "adpt_i2o_passthru", "instr_loc": 1685, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "size *= 4; // Convert to bytes"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1702, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_offset = (msg[0]>>4)&0xf;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1702, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_offset = (msg[0]>>4)&0xf;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1702, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_offset = (msg[0]>>4)&0xf;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1702, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_offset = (msg[0]>>4)&0xf;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1808, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg \t = (struct sg_simple_element*)(msg + sg_offset);"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1808, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg \t = (struct sg_simple_element*)(msg + sg_offset);"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1808, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg \t = (struct sg_simple_element*)(msg + sg_offset);"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1808, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg \t = (struct sg_simple_element*)(msg + sg_offset);"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1814, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "if (copy_to_user((void __user *)(ulong)sg[j].addr_bus,sg_list[j], sg_size)) {"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1814, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "if (copy_to_user((void __user *)(ulong)sg[j].addr_bus,sg_list[j], sg_size)) {"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1814, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "if (copy_to_user((void __user *)(ulong)sg[j].addr_bus,sg_list[j], sg_size)) {"}], "at_file": "drivers/scsi/dpt_i2o.c", "by": "TaintedPointerDereferenceChecker says:", "at_func": "adpt_i2o_passthru"}, "warn_no": 14},
{"warn_data": {"at_line": 1812, "warn_str": "Trying to read from a user pointer.", "at": "sg_size = sg[j].flag_count & 0xffffff;", "inst_trace": [{"instr_func": "adpt_i2o_passthru", "instr_loc": 1685, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "size *= 4; // Convert to bytes"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1702, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_offset = (msg[0]>>4)&0xf;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1702, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_offset = (msg[0]>>4)&0xf;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1702, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_offset = (msg[0]>>4)&0xf;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1702, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_offset = (msg[0]>>4)&0xf;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1808, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg \t = (struct sg_simple_element*)(msg + sg_offset);"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1808, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg \t = (struct sg_simple_element*)(msg + sg_offset);"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1808, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg \t = (struct sg_simple_element*)(msg + sg_offset);"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1808, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg \t = (struct sg_simple_element*)(msg + sg_offset);"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1812, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_size = sg[j].flag_count & 0xffffff;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1812, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_size = sg[j].flag_count & 0xffffff;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1812, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_size = sg[j].flag_count & 0xffffff;"}], "at_file": "drivers/scsi/dpt_i2o.c", "by": "TaintedPointerDereferenceChecker says:", "at_func": "adpt_i2o_passthru"}, "warn_no": 15},
{"warn_data": {"at_line": 1811, "warn_str": "Trying to read from a user pointer.", "at": "if(! (sg[j].flag_count & 0x4000000 /*I2O_SGL_FLAGS_DIR*/)) {", "inst_trace": [{"instr_func": "adpt_i2o_passthru", "instr_loc": 1685, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "size *= 4; // Convert to bytes"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1702, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_offset = (msg[0]>>4)&0xf;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1702, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_offset = (msg[0]>>4)&0xf;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1702, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_offset = (msg[0]>>4)&0xf;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1702, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_offset = (msg[0]>>4)&0xf;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1808, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg \t = (struct sg_simple_element*)(msg + sg_offset);"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1808, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg \t = (struct sg_simple_element*)(msg + sg_offset);"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1808, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg \t = (struct sg_simple_element*)(msg + sg_offset);"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1808, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg \t = (struct sg_simple_element*)(msg + sg_offset);"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1811, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "if(! (sg[j].flag_count & 0x4000000 /*I2O_SGL_FLAGS_DIR*/)) {"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1811, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "if(! (sg[j].flag_count & 0x4000000 /*I2O_SGL_FLAGS_DIR*/)) {"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1811, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "if(! (sg[j].flag_count & 0x4000000 /*I2O_SGL_FLAGS_DIR*/)) {"}], "at_file": "drivers/scsi/dpt_i2o.c", "by": "TaintedPointerDereferenceChecker says:", "at_func": "adpt_i2o_passthru"}, "warn_no": 16},
{"warn_data": {"at_line": 1809, "warn_str": "Loop is bounded by a tainted value.", "at": "for (j = 0; j < sg_count; j++) {", "inst_trace": [{"instr_func": "adpt_i2o_passthru", "instr_loc": 1685, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "size *= 4; // Convert to bytes"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1702, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_offset = (msg[0]>>4)&0xf;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1702, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_offset = (msg[0]>>4)&0xf;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1702, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_offset = (msg[0]>>4)&0xf;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1702, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_offset = (msg[0]>>4)&0xf;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1718, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_count = (size - sg_offset*4) / sizeof(struct sg_simple_element);"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1718, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_count = (size - sg_offset*4) / sizeof(struct sg_simple_element);"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1718, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_count = (size - sg_offset*4) / sizeof(struct sg_simple_element);"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1718, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_count = (size - sg_offset*4) / sizeof(struct sg_simple_element);"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1718, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_count = (size - sg_offset*4) / sizeof(struct sg_simple_element);"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1718, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_count = (size - sg_offset*4) / sizeof(struct sg_simple_element);"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1809, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "for (j = 0; j < sg_count; j++) {"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1809, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "for (j = 0; j < sg_count; j++) {"}], "at_file": "drivers/scsi/dpt_i2o.c", "by": "TaintedLoopBoundDetector says:", "at_func": "adpt_i2o_passthru"}, "warn_no": 17},
{"warn_data": {"at_line": 1814, "warn_str": "Loop is bounded by a tainted value.", "at": "if (copy_to_user((void __user *)(ulong)sg[j].addr_bus,sg_list[j], sg_size)) {", "inst_trace": [{"instr_func": "adpt_i2o_passthru", "instr_loc": 1685, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "size *= 4; // Convert to bytes"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1702, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_offset = (msg[0]>>4)&0xf;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1702, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_offset = (msg[0]>>4)&0xf;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1702, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_offset = (msg[0]>>4)&0xf;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1702, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_offset = (msg[0]>>4)&0xf;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1808, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg \t = (struct sg_simple_element*)(msg + sg_offset);"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1808, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg \t = (struct sg_simple_element*)(msg + sg_offset);"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1808, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg \t = (struct sg_simple_element*)(msg + sg_offset);"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1808, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg \t = (struct sg_simple_element*)(msg + sg_offset);"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1812, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_size = sg[j].flag_count & 0xffffff;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1812, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_size = sg[j].flag_count & 0xffffff;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1812, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_size = sg[j].flag_count & 0xffffff;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1812, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_size = sg[j].flag_count & 0xffffff;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1812, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_size = sg[j].flag_count & 0xffffff;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1814, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "if (copy_to_user((void __user *)(ulong)sg[j].addr_bus,sg_list[j], sg_size)) {"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1814, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "if (copy_to_user((void __user *)(ulong)sg[j].addr_bus,sg_list[j], sg_size)) {"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1812, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_size = sg[j].flag_count & 0xffffff;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1812, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_size = sg[j].flag_count & 0xffffff;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1814, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "if (copy_to_user((void __user *)(ulong)sg[j].addr_bus,sg_list[j], sg_size)) {"}], "at_file": "drivers/scsi/dpt_i2o.c", "by": "TaintedLoopBoundDetector says:", "at_func": "adpt_i2o_passthru"}, "warn_no": 18},
{"warn_data": {"at_line": 1815, "warn_str": "Trying to read from a user pointer.", "at": "printk(KERN_WARNING\"%s: Could not copy %p TO user %x\\n\",pHba->name, sg_list[j], sg[j].addr_bus);", "inst_trace": [{"instr_func": "adpt_i2o_passthru", "instr_loc": 1685, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "size *= 4; // Convert to bytes"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1702, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_offset = (msg[0]>>4)&0xf;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1702, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_offset = (msg[0]>>4)&0xf;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1702, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_offset = (msg[0]>>4)&0xf;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1702, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_offset = (msg[0]>>4)&0xf;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1808, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg \t = (struct sg_simple_element*)(msg + sg_offset);"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1808, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg \t = (struct sg_simple_element*)(msg + sg_offset);"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1808, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg \t = (struct sg_simple_element*)(msg + sg_offset);"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1808, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg \t = (struct sg_simple_element*)(msg + sg_offset);"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1815, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "printk(KERN_WARNING\"%s: Could not copy %p TO user %x\\n\",pHba->name, sg_list[j], sg[j].addr_bus);"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1815, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "printk(KERN_WARNING\"%s: Could not copy %p TO user %x\\n\",pHba->name, sg_list[j], sg[j].addr_bus);"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1815, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "printk(KERN_WARNING\"%s: Could not copy %p TO user %x\\n\",pHba->name, sg_list[j], sg[j].addr_bus);"}], "at_file": "drivers/scsi/dpt_i2o.c", "by": "TaintedPointerDereferenceChecker says:", "at_func": "adpt_i2o_passthru"}, "warn_no": 19},
{"warn_data": {"at_line": 1812, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "sg_size = sg[j].flag_count & 0xffffff;", "inst_trace": [], "at_file": "drivers/scsi/dpt_i2o.c", "by": "TaintedSizeDetector says:", "at_func": "adpt_i2o_passthru"}, "warn_no": 20},
{"warn_data": {"at_line": 1826, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "if(copy_from_user(reply+2, user_msg+2, sizeof(u32)*2)) {", "inst_trace": [], "at_file": "drivers/scsi/dpt_i2o.c", "by": "TaintedSizeDetector says:", "at_func": "adpt_i2o_passthru"}, "warn_no": 21},
{"warn_data": {"at_line": 1830, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "if(copy_to_user(user_reply, reply, reply_size)) {", "inst_trace": [], "at_file": "drivers/scsi/dpt_i2o.c", "by": "TaintedSizeDetector says:", "at_func": "adpt_i2o_passthru"}, "warn_no": 22},
{"warn_data": {"at_line": 1729, "warn_str": "Trying to read from a user pointer.", "at": "printk(KERN_DEBUG\"%s:Bad SG element %d - not simple (%x)\\n\",pHba->name,i,  sg[i].flag_count);", "inst_trace": [{"instr_func": "adpt_i2o_passthru", "instr_loc": 1685, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "size *= 4; // Convert to bytes"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1702, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_offset = (msg[0]>>4)&0xf;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1702, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_offset = (msg[0]>>4)&0xf;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1702, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_offset = (msg[0]>>4)&0xf;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1702, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_offset = (msg[0]>>4)&0xf;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1717, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "struct sg_simple_element *sg =  (struct sg_simple_element*) (msg+sg_offset);"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1717, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "struct sg_simple_element *sg =  (struct sg_simple_element*) (msg+sg_offset);"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1717, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "struct sg_simple_element *sg =  (struct sg_simple_element*) (msg+sg_offset);"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1717, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "struct sg_simple_element *sg =  (struct sg_simple_element*) (msg+sg_offset);"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1729, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "printk(KERN_DEBUG\"%s:Bad SG element %d - not simple (%x)\\n\",pHba->name,i,  sg[i].flag_count);"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1729, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "printk(KERN_DEBUG\"%s:Bad SG element %d - not simple (%x)\\n\",pHba->name,i,  sg[i].flag_count);"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1729, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "printk(KERN_DEBUG\"%s:Bad SG element %d - not simple (%x)\\n\",pHba->name,i,  sg[i].flag_count);"}], "at_file": "drivers/scsi/dpt_i2o.c", "by": "TaintedPointerDereferenceChecker says:", "at_func": "adpt_i2o_passthru"}, "warn_no": 23},
{"warn_data": {"at_line": 1844, "warn_str": "Trying to read from a user pointer.", "at": "sg[sg_index].flag_count & 0xffffff,", "inst_trace": [{"instr_func": "adpt_i2o_passthru", "instr_loc": 1685, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "size *= 4; // Convert to bytes"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1702, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_offset = (msg[0]>>4)&0xf;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1702, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_offset = (msg[0]>>4)&0xf;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1702, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_offset = (msg[0]>>4)&0xf;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1702, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_offset = (msg[0]>>4)&0xf;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1840, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "(struct sg_simple_element*) (msg +sg_offset);"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1840, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "(struct sg_simple_element*) (msg +sg_offset);"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1840, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "(struct sg_simple_element*) (msg +sg_offset);"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1839, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "struct sg_simple_element *sg ="}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1844, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg[sg_index].flag_count & 0xffffff,"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1844, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg[sg_index].flag_count & 0xffffff,"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1844, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg[sg_index].flag_count & 0xffffff,"}], "at_file": "drivers/scsi/dpt_i2o.c", "by": "TaintedPointerDereferenceChecker says:", "at_func": "adpt_i2o_passthru"}, "warn_no": 24},
{"warn_data": {"at_line": 1846, "warn_str": "Trying to read from a user pointer.", "at": "sg[sg_index].addr_bus);", "inst_trace": [{"instr_func": "adpt_i2o_passthru", "instr_loc": 1685, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "size *= 4; // Convert to bytes"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1702, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_offset = (msg[0]>>4)&0xf;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1702, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_offset = (msg[0]>>4)&0xf;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1702, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_offset = (msg[0]>>4)&0xf;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1702, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg_offset = (msg[0]>>4)&0xf;"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1840, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "(struct sg_simple_element*) (msg +sg_offset);"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1840, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "(struct sg_simple_element*) (msg +sg_offset);"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1840, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "(struct sg_simple_element*) (msg +sg_offset);"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1839, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "struct sg_simple_element *sg ="}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1846, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg[sg_index].addr_bus);"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1846, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg[sg_index].addr_bus);"}, {"instr_func": "adpt_i2o_passthru", "instr_loc": 1846, "instr_file": "drivers/scsi/dpt_i2o.c", "instr": "sg[sg_index].addr_bus);"}], "at_file": "drivers/scsi/dpt_i2o.c", "by": "TaintedPointerDereferenceChecker says:", "at_func": "adpt_i2o_passthru"}, "warn_no": 25}]}]}