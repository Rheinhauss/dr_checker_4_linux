{"all_contexts":[
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %4 = alloca i1, align 1"}, {"lineno": 443, "file": "drivers/fpga/dfl-afu-main.c", "instr": "return afu_ioctl_dma_unmap(pdata, (void __user *)arg);"}],
"warnings":[{"warn_data": {"at_line": 405, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "{", "inst_trace": [], "at_file": "drivers/fpga/dfl-afu-main.c", "by": "TaintedSizeDetector says:", "at_func": "afu_ioctl_dma_unmap"}, "warn_no": 1}]},
{"num_warnings": 2,
"context":[{"lineno": -1, "instr": "  %4 = alloca i1, align 1"}, {"lineno": 441, "file": "drivers/fpga/dfl-afu-main.c", "instr": "return afu_ioctl_dma_map(pdata, (void __user *)arg);"}],
"warnings":[{"warn_data": {"at_line": 373, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "{", "inst_trace": [], "at_file": "drivers/fpga/dfl-afu-main.c", "by": "TaintedSizeDetector says:", "at_func": "afu_ioctl_dma_map"}, "warn_no": 1},
{"warn_data": {"at_line": 390, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "if (copy_to_user(arg, &map, sizeof(map))) {", "inst_trace": [], "at_file": "drivers/fpga/dfl-afu-main.c", "by": "TaintedSizeDetector says:", "at_func": "afu_ioctl_dma_map"}, "warn_no": 2}]},
{"num_warnings": 2,
"context":[{"lineno": -1, "instr": "  %4 = alloca i1, align 1"}, {"lineno": 443, "file": "drivers/fpga/dfl-afu-main.c", "instr": "return afu_ioctl_dma_unmap(pdata, (void __user *)arg);"}, {"lineno": 417, "file": "drivers/fpga/dfl-afu-main.c", "instr": "return afu_dma_unmap_region(pdata, unmap.iova);"}, {"lineno": 398, "file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "region = afu_dma_region_find_iova(pdata, iova);"}, {"lineno": 296, "file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "return afu_dma_region_find(pdata, iova, 0);"}],
"warnings":[{"warn_data": {"at_line": 273, "warn_str": "Loop is bounded by a tainted value.", "at": "else if (iova > region->iova)", "inst_trace": [{"instr_func": "afu_ioctl_dma_unmap", "instr_loc": 405, "instr_file": "drivers/fpga/dfl-afu-main.c", "instr": "{"}, {"instr_func": "afu_ioctl_dma_unmap", "instr_loc": 417, "instr_file": "drivers/fpga/dfl-afu-main.c", "instr": "return afu_dma_unmap_region(pdata, unmap.iova);"}, {"instr_func": "afu_ioctl_dma_unmap", "instr_loc": 417, "instr_file": "drivers/fpga/dfl-afu-main.c", "instr": "return afu_dma_unmap_region(pdata, unmap.iova);"}, {"instr_func": "afu_dma_unmap_region", "instr_loc": 394, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "{"}, {"instr_func": "afu_dma_unmap_region", "instr_loc": 398, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "region = afu_dma_region_find_iova(pdata, iova);"}, {"instr_func": "afu_dma_unmap_region", "instr_loc": 398, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "region = afu_dma_region_find_iova(pdata, iova);"}, {"instr_func": "afu_dma_region_find_iova", "instr_loc": 295, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "{"}, {"instr_func": "afu_dma_region_find_iova", "instr_loc": 296, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "return afu_dma_region_find(pdata, iova, 0);"}, {"instr_func": "afu_dma_region_find_iova", "instr_loc": 296, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "return afu_dma_region_find(pdata, iova, 0);"}, {"instr_func": "afu_dma_region_find", "instr_loc": 255, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "{"}, {"instr_func": "afu_dma_region_find", "instr_loc": 273, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "else if (iova > region->iova)"}, {"instr_func": "afu_dma_region_find", "instr_loc": 273, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "else if (iova > region->iova)"}], "at_file": "drivers/fpga/dfl-afu-dma-region.c", "by": "TaintedLoopBoundDetector says:", "at_func": "afu_dma_region_find"}, "warn_no": 1},
{"warn_data": {"at_line": 265, "warn_str": "Loop is bounded by a tainted value.", "at": "if (dma_region_check_iova(region, iova, size)) {", "inst_trace": [{"instr_func": "afu_ioctl_dma_unmap", "instr_loc": 405, "instr_file": "drivers/fpga/dfl-afu-main.c", "instr": "{"}, {"instr_func": "afu_ioctl_dma_unmap", "instr_loc": 417, "instr_file": "drivers/fpga/dfl-afu-main.c", "instr": "return afu_dma_unmap_region(pdata, unmap.iova);"}, {"instr_func": "afu_ioctl_dma_unmap", "instr_loc": 417, "instr_file": "drivers/fpga/dfl-afu-main.c", "instr": "return afu_dma_unmap_region(pdata, unmap.iova);"}, {"instr_func": "afu_dma_unmap_region", "instr_loc": 394, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "{"}, {"instr_func": "afu_dma_unmap_region", "instr_loc": 398, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "region = afu_dma_region_find_iova(pdata, iova);"}, {"instr_func": "afu_dma_unmap_region", "instr_loc": 398, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "region = afu_dma_region_find_iova(pdata, iova);"}, {"instr_func": "afu_dma_region_find_iova", "instr_loc": 295, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "{"}, {"instr_func": "afu_dma_region_find_iova", "instr_loc": 296, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "return afu_dma_region_find(pdata, iova, 0);"}, {"instr_func": "afu_dma_region_find_iova", "instr_loc": 296, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "return afu_dma_region_find(pdata, iova, 0);"}, {"instr_func": "afu_dma_region_find", "instr_loc": 255, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "{"}, {"instr_func": "afu_dma_region_find", "instr_loc": 265, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "if (dma_region_check_iova(region, iova, size)) {"}, {"instr_func": "afu_dma_region_find", "instr_loc": 265, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "if (dma_region_check_iova(region, iova, size)) {"}, {"instr_func": "dma_region_check_iova", "instr_loc": 135, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "{"}, {"instr_func": "dma_region_check_iova", "instr_loc": 140, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "(region->length + region->iova >= iova + size);"}, {"instr_func": "dma_region_check_iova", "instr_loc": 140, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "(region->length + region->iova >= iova + size);"}, {"instr_func": "dma_region_check_iova", "instr_loc": 140, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "(region->length + region->iova >= iova + size);"}, {"instr_func": "dma_region_check_iova", "instr_loc": 0, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "  %39 = phi i1 [ false, %25 ], [ %37, %26 ], !dbg !184303"}, {"instr_func": "dma_region_check_iova", "instr_loc": 139, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "return (region->iova <= iova) &&"}, {"instr_func": "dma_region_check_iova", "instr_loc": 141, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "}"}, {"instr_func": "afu_dma_region_find", "instr_loc": 265, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "if (dma_region_check_iova(region, iova, size)) {"}], "at_file": "drivers/fpga/dfl-afu-dma-region.c", "by": "TaintedLoopBoundDetector says:", "at_func": "afu_dma_region_find"}, "warn_no": 2}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %4 = alloca i1, align 1"}, {"lineno": 443, "file": "drivers/fpga/dfl-afu-main.c", "instr": "return afu_ioctl_dma_unmap(pdata, (void __user *)arg);"}, {"lineno": 417, "file": "drivers/fpga/dfl-afu-main.c", "instr": "return afu_dma_unmap_region(pdata, unmap.iova);"}, {"lineno": 398, "file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "region = afu_dma_region_find_iova(pdata, iova);"}, {"lineno": 296, "file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "return afu_dma_region_find(pdata, iova, 0);"}, {"lineno": 265, "file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "if (dma_region_check_iova(region, iova, size)) {"}],
"warnings":[{"warn_data": {"at_line": 140, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "(region->length + region->iova >= iova + size);", "inst_trace": [{"instr_func": "afu_ioctl_dma_unmap", "instr_loc": 405, "instr_file": "drivers/fpga/dfl-afu-main.c", "instr": "{"}, {"instr_func": "afu_ioctl_dma_unmap", "instr_loc": 417, "instr_file": "drivers/fpga/dfl-afu-main.c", "instr": "return afu_dma_unmap_region(pdata, unmap.iova);"}, {"instr_func": "afu_ioctl_dma_unmap", "instr_loc": 417, "instr_file": "drivers/fpga/dfl-afu-main.c", "instr": "return afu_dma_unmap_region(pdata, unmap.iova);"}, {"instr_func": "afu_dma_unmap_region", "instr_loc": 394, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "{"}, {"instr_func": "afu_dma_unmap_region", "instr_loc": 398, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "region = afu_dma_region_find_iova(pdata, iova);"}, {"instr_func": "afu_dma_unmap_region", "instr_loc": 398, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "region = afu_dma_region_find_iova(pdata, iova);"}, {"instr_func": "afu_dma_region_find_iova", "instr_loc": 295, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "{"}, {"instr_func": "afu_dma_region_find_iova", "instr_loc": 296, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "return afu_dma_region_find(pdata, iova, 0);"}, {"instr_func": "afu_dma_region_find_iova", "instr_loc": 296, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "return afu_dma_region_find(pdata, iova, 0);"}, {"instr_func": "afu_dma_region_find", "instr_loc": 255, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "{"}, {"instr_func": "afu_dma_region_find", "instr_loc": 265, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "if (dma_region_check_iova(region, iova, size)) {"}, {"instr_func": "afu_dma_region_find", "instr_loc": 265, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "if (dma_region_check_iova(region, iova, size)) {"}, {"instr_func": "dma_region_check_iova", "instr_loc": 135, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "{"}, {"instr_func": "dma_region_check_iova", "instr_loc": 140, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "(region->length + region->iova >= iova + size);"}], "at_file": "drivers/fpga/dfl-afu-dma-region.c", "by": "IntegerOverflowDetector says:", "at_func": "dma_region_check_iova"}, "warn_no": 1}]},
{"num_warnings": 2,
"context":[{"lineno": -1, "instr": "  %4 = alloca i1, align 1"}, {"lineno": 439, "file": "drivers/fpga/dfl-afu-main.c", "instr": "return afu_ioctl_get_region_info(pdata, (void __user *)arg);"}],
"warnings":[{"warn_data": {"at_line": 343, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "{", "inst_trace": [], "at_file": "drivers/fpga/dfl-afu-main.c", "by": "TaintedSizeDetector says:", "at_func": "afu_ioctl_get_region_info"}, "warn_no": 1},
{"warn_data": {"at_line": 361, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "rinfo.flags = region.flags;", "inst_trace": [], "at_file": "drivers/fpga/dfl-afu-main.c", "by": "TaintedSizeDetector says:", "at_func": "afu_ioctl_get_region_info"}, "warn_no": 2}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %4 = alloca i1, align 1"}, {"lineno": 441, "file": "drivers/fpga/dfl-afu-main.c", "instr": "return afu_ioctl_dma_map(pdata, (void __user *)arg);"}, {"lineno": 386, "file": "drivers/fpga/dfl-afu-main.c", "instr": "ret = afu_dma_map_region(pdata, map.user_addr, map.length, &map.iova);"}],
"warnings":[{"warn_data": {"at_line": 324, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "if (user_addr + length < user_addr)", "inst_trace": [{"instr_func": "afu_ioctl_dma_map", "instr_loc": 373, "instr_file": "drivers/fpga/dfl-afu-main.c", "instr": "{"}, {"instr_func": "afu_ioctl_dma_map", "instr_loc": 386, "instr_file": "drivers/fpga/dfl-afu-main.c", "instr": "ret = afu_dma_map_region(pdata, map.user_addr, map.length, &map.iova);"}, {"instr_func": "afu_ioctl_dma_map", "instr_loc": 386, "instr_file": "drivers/fpga/dfl-afu-main.c", "instr": "ret = afu_dma_map_region(pdata, map.user_addr, map.length, &map.iova);"}, {"instr_func": "afu_dma_map_region", "instr_loc": 312, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "{"}, {"instr_func": "afu_dma_map_region", "instr_loc": 324, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "if (user_addr + length < user_addr)"}], "at_file": "drivers/fpga/dfl-afu-dma-region.c", "by": "IntegerOverflowDetector says:", "at_func": "afu_dma_map_region"}, "warn_no": 1}]},
{"num_warnings": 2,
"context":[{"lineno": -1, "instr": "  %4 = alloca i1, align 1"}, {"lineno": 441, "file": "drivers/fpga/dfl-afu-main.c", "instr": "return afu_ioctl_dma_map(pdata, (void __user *)arg);"}, {"lineno": 386, "file": "drivers/fpga/dfl-afu-main.c", "instr": "ret = afu_dma_map_region(pdata, map.user_addr, map.length, &map.iova);"}, {"lineno": 327, "file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "if (!access_ok((void __user *)(unsigned long)user_addr,"}],
"warnings":[{"warn_data": {"at_line": 56, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "  %24 = add i64 %23, %22, !dbg !184288", "inst_trace": [{"instr_func": "afu_ioctl_dma_map", "instr_loc": 373, "instr_file": "drivers/fpga/dfl-afu-main.c", "instr": "{"}, {"instr_func": "afu_ioctl_dma_map", "instr_loc": 386, "instr_file": "drivers/fpga/dfl-afu-main.c", "instr": "ret = afu_dma_map_region(pdata, map.user_addr, map.length, &map.iova);"}, {"instr_func": "afu_ioctl_dma_map", "instr_loc": 386, "instr_file": "drivers/fpga/dfl-afu-main.c", "instr": "ret = afu_dma_map_region(pdata, map.user_addr, map.length, &map.iova);"}, {"instr_func": "afu_dma_map_region", "instr_loc": 312, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "{"}, {"instr_func": "afu_dma_map_region", "instr_loc": 327, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "if (!access_ok((void __user *)(unsigned long)user_addr,"}, {"instr_func": "afu_dma_map_region", "instr_loc": 327, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "if (!access_ok((void __user *)(unsigned long)user_addr,"}, {"instr_func": "__chk_range_not_ok", "instr_loc": 44, "instr_file": "./arch/x86/include/asm/uaccess.h", "instr": "  store i64 %1, i64* %6, align 8"}, {"instr_func": "__chk_range_not_ok", "instr_loc": 56, "instr_file": "./arch/x86/include/asm/uaccess.h", "instr": "  %22 = load i64, i64* %6, align 8, !dbg !184287"}], "at_file": "./arch/x86/include/asm/uaccess.h", "by": "IntegerOverflowDetector says:", "at_func": "__chk_range_not_ok"}, "warn_no": 1},
{"warn_data": {"at_line": 53, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "  %14 = sub i64 %12, %13, !dbg !184285", "inst_trace": [{"instr_func": "afu_ioctl_dma_map", "instr_loc": 373, "instr_file": "drivers/fpga/dfl-afu-main.c", "instr": "{"}, {"instr_func": "afu_ioctl_dma_map", "instr_loc": 386, "instr_file": "drivers/fpga/dfl-afu-main.c", "instr": "ret = afu_dma_map_region(pdata, map.user_addr, map.length, &map.iova);"}, {"instr_func": "afu_ioctl_dma_map", "instr_loc": 386, "instr_file": "drivers/fpga/dfl-afu-main.c", "instr": "ret = afu_dma_map_region(pdata, map.user_addr, map.length, &map.iova);"}, {"instr_func": "afu_dma_map_region", "instr_loc": 312, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "{"}, {"instr_func": "afu_dma_map_region", "instr_loc": 327, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "if (!access_ok((void __user *)(unsigned long)user_addr,"}, {"instr_func": "afu_dma_map_region", "instr_loc": 327, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "if (!access_ok((void __user *)(unsigned long)user_addr,"}, {"instr_func": "__chk_range_not_ok", "instr_loc": 44, "instr_file": "./arch/x86/include/asm/uaccess.h", "instr": "  store i64 %1, i64* %6, align 8"}, {"instr_func": "__chk_range_not_ok", "instr_loc": 53, "instr_file": "./arch/x86/include/asm/uaccess.h", "instr": "  %13 = load i64, i64* %6, align 8, !dbg !184285"}], "at_file": "./arch/x86/include/asm/uaccess.h", "by": "IntegerOverflowDetector says:", "at_func": "__chk_range_not_ok"}, "warn_no": 2}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %4 = alloca i1, align 1"}, {"lineno": 441, "file": "drivers/fpga/dfl-afu-main.c", "instr": "return afu_ioctl_dma_map(pdata, (void __user *)arg);"}, {"lineno": 386, "file": "drivers/fpga/dfl-afu-main.c", "instr": "ret = afu_dma_map_region(pdata, map.user_addr, map.length, &map.iova);"}, {"lineno": 331, "file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "region = kzalloc(sizeof(*region), GFP_KERNEL);"}],
"warnings":[{"warn_data": {"at_line": 553, "warn_str": "Trying to use a global variable without locking.", "at": "  %183 = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %182, !dbg !184497", "inst_trace": [{"instr_func": "afu_ioctl", "instr_loc": -1, "instr": "  %4 = alloca i1, align 1"}, {"instr_func": "afu_ioctl", "instr_loc": 441, "instr_file": "drivers/fpga/dfl-afu-main.c", "instr": "return afu_ioctl_dma_map(pdata, (void __user *)arg);"}, {"instr_func": "afu_ioctl_dma_map", "instr_loc": 386, "instr_file": "drivers/fpga/dfl-afu-main.c", "instr": "ret = afu_dma_map_region(pdata, map.user_addr, map.length, &map.iova);"}, {"instr_func": "afu_dma_map_region", "instr_loc": 331, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "region = kzalloc(sizeof(*region), GFP_KERNEL);"}], "at_file": "./include/linux/slab.h", "by": "GlobalVariableRaceDetector says:", "at_func": "kzalloc.645"}, "warn_no": 1}]},
{"num_warnings": 3,
"context":[{"lineno": -1, "instr": "  %4 = alloca i1, align 1"}, {"lineno": 441, "file": "drivers/fpga/dfl-afu-main.c", "instr": "return afu_ioctl_dma_map(pdata, (void __user *)arg);"}, {"lineno": 386, "file": "drivers/fpga/dfl-afu-main.c", "instr": "ret = afu_dma_map_region(pdata, map.user_addr, map.length, &map.iova);"}, {"lineno": 346, "file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "if (!afu_dma_check_continuous_pages(region)) {"}],
"warnings":[{"warn_data": {"at_line": 117, "warn_str": "Trying to use a global variable without locking.", "at": "if (page_to_pfn(region->pages[i]) + 1 !=", "inst_trace": [{"instr_func": "afu_ioctl", "instr_loc": -1, "instr": "  %4 = alloca i1, align 1"}, {"instr_func": "afu_ioctl", "instr_loc": 441, "instr_file": "drivers/fpga/dfl-afu-main.c", "instr": "return afu_ioctl_dma_map(pdata, (void __user *)arg);"}, {"instr_func": "afu_ioctl_dma_map", "instr_loc": 386, "instr_file": "drivers/fpga/dfl-afu-main.c", "instr": "ret = afu_dma_map_region(pdata, map.user_addr, map.length, &map.iova);"}, {"instr_func": "afu_dma_map_region", "instr_loc": 346, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "if (!afu_dma_check_continuous_pages(region)) {"}], "at_file": "drivers/fpga/dfl-afu-dma-region.c", "by": "GlobalVariableRaceDetector says:", "at_func": "afu_dma_check_continuous_pages"}, "warn_no": 1},
{"warn_data": {"at_line": 116, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "for (i = 0; i < npages - 1; i++)", "inst_trace": [{"instr_func": "afu_ioctl_dma_map", "instr_loc": 373, "instr_file": "drivers/fpga/dfl-afu-main.c", "instr": "{"}, {"instr_func": "afu_ioctl_dma_map", "instr_loc": 386, "instr_file": "drivers/fpga/dfl-afu-main.c", "instr": "ret = afu_dma_map_region(pdata, map.user_addr, map.length, &map.iova);"}, {"instr_func": "afu_ioctl_dma_map", "instr_loc": 386, "instr_file": "drivers/fpga/dfl-afu-main.c", "instr": "ret = afu_dma_map_region(pdata, map.user_addr, map.length, &map.iova);"}, {"instr_func": "afu_dma_map_region", "instr_loc": 312, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "{"}, {"instr_func": "afu_dma_map_region", "instr_loc": 336, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "region->length = length;"}, {"instr_func": "afu_dma_map_region", "instr_loc": 336, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "region->length = length;"}, {"instr_func": "afu_dma_check_continuous_pages", "instr_loc": 113, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "int npages = region->length >> PAGE_SHIFT;"}, {"instr_func": "afu_dma_check_continuous_pages", "instr_loc": 113, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "int npages = region->length >> PAGE_SHIFT;"}, {"instr_func": "afu_dma_check_continuous_pages", "instr_loc": 113, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "int npages = region->length >> PAGE_SHIFT;"}, {"instr_func": "afu_dma_check_continuous_pages", "instr_loc": 113, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "int npages = region->length >> PAGE_SHIFT;"}, {"instr_func": "afu_dma_check_continuous_pages", "instr_loc": 116, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "for (i = 0; i < npages - 1; i++)"}], "at_file": "drivers/fpga/dfl-afu-dma-region.c", "by": "IntegerOverflowDetector says:", "at_func": "afu_dma_check_continuous_pages"}, "warn_no": 2},
{"warn_data": {"at_line": 116, "warn_str": "Loop is bounded by a tainted value.", "at": "for (i = 0; i < npages - 1; i++)", "inst_trace": [{"instr_func": "afu_ioctl_dma_map", "instr_loc": 373, "instr_file": "drivers/fpga/dfl-afu-main.c", "instr": "{"}, {"instr_func": "afu_ioctl_dma_map", "instr_loc": 386, "instr_file": "drivers/fpga/dfl-afu-main.c", "instr": "ret = afu_dma_map_region(pdata, map.user_addr, map.length, &map.iova);"}, {"instr_func": "afu_ioctl_dma_map", "instr_loc": 386, "instr_file": "drivers/fpga/dfl-afu-main.c", "instr": "ret = afu_dma_map_region(pdata, map.user_addr, map.length, &map.iova);"}, {"instr_func": "afu_dma_map_region", "instr_loc": 312, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "{"}, {"instr_func": "afu_dma_map_region", "instr_loc": 336, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "region->length = length;"}, {"instr_func": "afu_dma_map_region", "instr_loc": 336, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "region->length = length;"}, {"instr_func": "afu_dma_check_continuous_pages", "instr_loc": 113, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "int npages = region->length >> PAGE_SHIFT;"}, {"instr_func": "afu_dma_check_continuous_pages", "instr_loc": 113, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "int npages = region->length >> PAGE_SHIFT;"}, {"instr_func": "afu_dma_check_continuous_pages", "instr_loc": 113, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "int npages = region->length >> PAGE_SHIFT;"}, {"instr_func": "afu_dma_check_continuous_pages", "instr_loc": 113, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "int npages = region->length >> PAGE_SHIFT;"}, {"instr_func": "afu_dma_check_continuous_pages", "instr_loc": 116, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "for (i = 0; i < npages - 1; i++)"}, {"instr_func": "afu_dma_check_continuous_pages", "instr_loc": 116, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "for (i = 0; i < npages - 1; i++)"}, {"instr_func": "afu_dma_check_continuous_pages", "instr_loc": 116, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "for (i = 0; i < npages - 1; i++)"}], "at_file": "drivers/fpga/dfl-afu-dma-region.c", "by": "TaintedLoopBoundDetector says:", "at_func": "afu_dma_check_continuous_pages"}, "warn_no": 3}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %4 = alloca i1, align 1"}, {"lineno": 441, "file": "drivers/fpga/dfl-afu-main.c", "instr": "return afu_ioctl_dma_map(pdata, (void __user *)arg);"}, {"lineno": 386, "file": "drivers/fpga/dfl-afu-main.c", "instr": "ret = afu_dma_map_region(pdata, map.user_addr, map.length, &map.iova);"}, {"lineno": 353, "file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "region->iova = dma_map_page(dfl_fpga_pdata_to_parent(pdata),"}, {"lineno": 285, "file": "./include/linux/dma-mapping.h", "instr": "  %16 = call %struct.dma_map_ops* @get_dma_ops(%struct.device* %15) #14, !dbg !184289"}, {"lineno": 272, "file": "./include/linux/dma-mapping.h", "instr": "  %16 = call %struct.dma_map_ops* @get_arch_dma_ops(%struct.bus_type* %15) #14, !dbg !184285"}],
"warnings":[{"warn_data": {"at_line": 23, "warn_str": "Trying to use a global variable without locking.", "at": "  %3 = load %struct.dma_map_ops*, %struct.dma_map_ops** @dma_ops, align 8, !dbg !184277", "inst_trace": [{"instr_func": "afu_ioctl", "instr_loc": -1, "instr": "  %4 = alloca i1, align 1"}, {"instr_func": "afu_ioctl", "instr_loc": 441, "instr_file": "drivers/fpga/dfl-afu-main.c", "instr": "return afu_ioctl_dma_map(pdata, (void __user *)arg);"}, {"instr_func": "afu_ioctl_dma_map", "instr_loc": 386, "instr_file": "drivers/fpga/dfl-afu-main.c", "instr": "ret = afu_dma_map_region(pdata, map.user_addr, map.length, &map.iova);"}, {"instr_func": "afu_dma_map_region", "instr_loc": 353, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "region->iova = dma_map_page(dfl_fpga_pdata_to_parent(pdata),"}, {"instr_func": "dma_map_page_attrs", "instr_loc": 285, "instr_file": "./include/linux/dma-mapping.h", "instr": "  %16 = call %struct.dma_map_ops* @get_dma_ops(%struct.device* %15) #14, !dbg !184289"}, {"instr_func": "get_dma_ops", "instr_loc": 272, "instr_file": "./include/linux/dma-mapping.h", "instr": "  %16 = call %struct.dma_map_ops* @get_arch_dma_ops(%struct.bus_type* %15) #14, !dbg !184285"}], "at_file": "./arch/x86/include/asm/dma-mapping.h", "by": "GlobalVariableRaceDetector says:", "at_func": "get_arch_dma_ops"}, "warn_no": 1}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %4 = alloca i1, align 1"}, {"lineno": 441, "file": "drivers/fpga/dfl-afu-main.c", "instr": "return afu_ioctl_dma_map(pdata, (void __user *)arg);"}, {"lineno": 386, "file": "drivers/fpga/dfl-afu-main.c", "instr": "ret = afu_dma_map_region(pdata, map.user_addr, map.length, &map.iova);"}, {"lineno": 366, "file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "ret = afu_dma_region_add(pdata, region);"}],
"warnings":[{"warn_data": {"at_line": 170, "warn_str": "Loop is bounded by a tainted value.", "at": "if (dma_region_check_iova(this, region->iova, region->length))", "inst_trace": [{"instr_func": "afu_ioctl_dma_map", "instr_loc": 373, "instr_file": "drivers/fpga/dfl-afu-main.c", "instr": "{"}, {"instr_func": "afu_ioctl_dma_map", "instr_loc": 386, "instr_file": "drivers/fpga/dfl-afu-main.c", "instr": "ret = afu_dma_map_region(pdata, map.user_addr, map.length, &map.iova);"}, {"instr_func": "afu_ioctl_dma_map", "instr_loc": 386, "instr_file": "drivers/fpga/dfl-afu-main.c", "instr": "ret = afu_dma_map_region(pdata, map.user_addr, map.length, &map.iova);"}, {"instr_func": "afu_dma_map_region", "instr_loc": 312, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "{"}, {"instr_func": "afu_dma_map_region", "instr_loc": 336, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "region->length = length;"}, {"instr_func": "afu_dma_map_region", "instr_loc": 336, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "region->length = length;"}, {"instr_func": "afu_dma_region_add", "instr_loc": 170, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "if (dma_region_check_iova(this, region->iova, region->length))"}, {"instr_func": "afu_dma_region_add", "instr_loc": 170, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "if (dma_region_check_iova(this, region->iova, region->length))"}, {"instr_func": "dma_region_check_iova", "instr_loc": 135, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "{"}, {"instr_func": "dma_region_check_iova", "instr_loc": 140, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "(region->length + region->iova >= iova + size);"}, {"instr_func": "dma_region_check_iova", "instr_loc": 140, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "(region->length + region->iova >= iova + size);"}, {"instr_func": "dma_region_check_iova", "instr_loc": 140, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "(region->length + region->iova >= iova + size);"}, {"instr_func": "dma_region_check_iova", "instr_loc": 0, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "  %39 = phi i1 [ false, %25 ], [ %37, %26 ], !dbg !184303"}, {"instr_func": "dma_region_check_iova", "instr_loc": 139, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "return (region->iova <= iova) &&"}, {"instr_func": "dma_region_check_iova", "instr_loc": 141, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "}"}, {"instr_func": "afu_dma_region_add", "instr_loc": 170, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "if (dma_region_check_iova(this, region->iova, region->length))"}], "at_file": "drivers/fpga/dfl-afu-dma-region.c", "by": "TaintedLoopBoundDetector says:", "at_func": "afu_dma_region_add"}, "warn_no": 1}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %4 = alloca i1, align 1"}, {"lineno": 441, "file": "drivers/fpga/dfl-afu-main.c", "instr": "return afu_ioctl_dma_map(pdata, (void __user *)arg);"}, {"lineno": 386, "file": "drivers/fpga/dfl-afu-main.c", "instr": "ret = afu_dma_map_region(pdata, map.user_addr, map.length, &map.iova);"}, {"lineno": 366, "file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "ret = afu_dma_region_add(pdata, region);"}, {"lineno": 170, "file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "if (dma_region_check_iova(this, region->iova, region->length))"}],
"warnings":[{"warn_data": {"at_line": 140, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "(region->length + region->iova >= iova + size);", "inst_trace": [{"instr_func": "afu_ioctl_dma_map", "instr_loc": 373, "instr_file": "drivers/fpga/dfl-afu-main.c", "instr": "{"}, {"instr_func": "afu_ioctl_dma_map", "instr_loc": 386, "instr_file": "drivers/fpga/dfl-afu-main.c", "instr": "ret = afu_dma_map_region(pdata, map.user_addr, map.length, &map.iova);"}, {"instr_func": "afu_ioctl_dma_map", "instr_loc": 386, "instr_file": "drivers/fpga/dfl-afu-main.c", "instr": "ret = afu_dma_map_region(pdata, map.user_addr, map.length, &map.iova);"}, {"instr_func": "afu_dma_map_region", "instr_loc": 312, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "{"}, {"instr_func": "afu_dma_map_region", "instr_loc": 336, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "region->length = length;"}, {"instr_func": "afu_dma_map_region", "instr_loc": 336, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "region->length = length;"}, {"instr_func": "afu_dma_region_add", "instr_loc": 170, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "if (dma_region_check_iova(this, region->iova, region->length))"}, {"instr_func": "afu_dma_region_add", "instr_loc": 170, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "if (dma_region_check_iova(this, region->iova, region->length))"}, {"instr_func": "dma_region_check_iova", "instr_loc": 135, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "{"}, {"instr_func": "dma_region_check_iova", "instr_loc": 140, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "(region->length + region->iova >= iova + size);"}], "at_file": "drivers/fpga/dfl-afu-dma-region.c", "by": "IntegerOverflowDetector says:", "at_func": "dma_region_check_iova"}, "warn_no": 1}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %4 = alloca i1, align 1"}, {"lineno": 441, "file": "drivers/fpga/dfl-afu-main.c", "instr": "return afu_ioctl_dma_map(pdata, (void __user *)arg);"}, {"lineno": 386, "file": "drivers/fpga/dfl-afu-main.c", "instr": "ret = afu_dma_map_region(pdata, map.user_addr, map.length, &map.iova);"}, {"lineno": 379, "file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "afu_dma_unpin_pages(pdata, region);"}, {"lineno": 97, "file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "put_all_pages(region->pages, npages);"}],
"warnings":[{"warn_data": {"at_line": 23, "warn_str": "Loop is bounded by a tainted value.", "at": "for (i = 0; i < npages; i++)", "inst_trace": [{"instr_func": "afu_ioctl_dma_map", "instr_loc": 373, "instr_file": "drivers/fpga/dfl-afu-main.c", "instr": "{"}, {"instr_func": "afu_ioctl_dma_map", "instr_loc": 386, "instr_file": "drivers/fpga/dfl-afu-main.c", "instr": "ret = afu_dma_map_region(pdata, map.user_addr, map.length, &map.iova);"}, {"instr_func": "afu_ioctl_dma_map", "instr_loc": 386, "instr_file": "drivers/fpga/dfl-afu-main.c", "instr": "ret = afu_dma_map_region(pdata, map.user_addr, map.length, &map.iova);"}, {"instr_func": "afu_dma_map_region", "instr_loc": 312, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "{"}, {"instr_func": "afu_dma_map_region", "instr_loc": 336, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "region->length = length;"}, {"instr_func": "afu_dma_map_region", "instr_loc": 336, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "region->length = length;"}, {"instr_func": "afu_dma_unpin_pages", "instr_loc": 94, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "long npages = region->length >> PAGE_SHIFT;"}, {"instr_func": "afu_dma_unpin_pages", "instr_loc": 94, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "long npages = region->length >> PAGE_SHIFT;"}, {"instr_func": "afu_dma_unpin_pages", "instr_loc": 94, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "long npages = region->length >> PAGE_SHIFT;"}, {"instr_func": "afu_dma_unpin_pages", "instr_loc": 97, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "put_all_pages(region->pages, npages);"}, {"instr_func": "afu_dma_unpin_pages", "instr_loc": 97, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "put_all_pages(region->pages, npages);"}, {"instr_func": "put_all_pages", "instr_loc": 20, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "{"}, {"instr_func": "put_all_pages", "instr_loc": 23, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "for (i = 0; i < npages; i++)"}, {"instr_func": "put_all_pages", "instr_loc": 23, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "for (i = 0; i < npages; i++)"}], "at_file": "drivers/fpga/dfl-afu-dma-region.c", "by": "TaintedLoopBoundDetector says:", "at_func": "put_all_pages"}, "warn_no": 1}]},
{"num_warnings": 2,
"context":[{"lineno": -1, "instr": "  %4 = alloca i1, align 1"}, {"lineno": 441, "file": "drivers/fpga/dfl-afu-main.c", "instr": "return afu_ioctl_dma_map(pdata, (void __user *)arg);"}, {"lineno": 391, "file": "drivers/fpga/dfl-afu-main.c", "instr": "afu_dma_unmap_region(pdata, map.iova);"}, {"lineno": 398, "file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "region = afu_dma_region_find_iova(pdata, iova);"}, {"lineno": 296, "file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "return afu_dma_region_find(pdata, iova, 0);"}],
"warnings":[{"warn_data": {"at_line": 273, "warn_str": "Loop is bounded by a tainted value.", "at": "else if (iova > region->iova)", "inst_trace": [{"instr_func": "afu_ioctl_dma_map", "instr_loc": 373, "instr_file": "drivers/fpga/dfl-afu-main.c", "instr": "{"}, {"instr_func": "afu_ioctl_dma_map", "instr_loc": 391, "instr_file": "drivers/fpga/dfl-afu-main.c", "instr": "afu_dma_unmap_region(pdata, map.iova);"}, {"instr_func": "afu_ioctl_dma_map", "instr_loc": 391, "instr_file": "drivers/fpga/dfl-afu-main.c", "instr": "afu_dma_unmap_region(pdata, map.iova);"}, {"instr_func": "afu_dma_unmap_region", "instr_loc": 394, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "{"}, {"instr_func": "afu_dma_unmap_region", "instr_loc": 398, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "region = afu_dma_region_find_iova(pdata, iova);"}, {"instr_func": "afu_dma_unmap_region", "instr_loc": 398, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "region = afu_dma_region_find_iova(pdata, iova);"}, {"instr_func": "afu_dma_region_find_iova", "instr_loc": 295, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "{"}, {"instr_func": "afu_dma_region_find_iova", "instr_loc": 296, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "return afu_dma_region_find(pdata, iova, 0);"}, {"instr_func": "afu_dma_region_find_iova", "instr_loc": 296, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "return afu_dma_region_find(pdata, iova, 0);"}, {"instr_func": "afu_dma_region_find", "instr_loc": 255, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "{"}, {"instr_func": "afu_dma_region_find", "instr_loc": 273, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "else if (iova > region->iova)"}, {"instr_func": "afu_dma_region_find", "instr_loc": 273, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "else if (iova > region->iova)"}], "at_file": "drivers/fpga/dfl-afu-dma-region.c", "by": "TaintedLoopBoundDetector says:", "at_func": "afu_dma_region_find"}, "warn_no": 1},
{"warn_data": {"at_line": 265, "warn_str": "Loop is bounded by a tainted value.", "at": "if (dma_region_check_iova(region, iova, size)) {", "inst_trace": [{"instr_func": "afu_ioctl_dma_map", "instr_loc": 373, "instr_file": "drivers/fpga/dfl-afu-main.c", "instr": "{"}, {"instr_func": "afu_ioctl_dma_map", "instr_loc": 391, "instr_file": "drivers/fpga/dfl-afu-main.c", "instr": "afu_dma_unmap_region(pdata, map.iova);"}, {"instr_func": "afu_ioctl_dma_map", "instr_loc": 391, "instr_file": "drivers/fpga/dfl-afu-main.c", "instr": "afu_dma_unmap_region(pdata, map.iova);"}, {"instr_func": "afu_dma_unmap_region", "instr_loc": 394, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "{"}, {"instr_func": "afu_dma_unmap_region", "instr_loc": 398, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "region = afu_dma_region_find_iova(pdata, iova);"}, {"instr_func": "afu_dma_unmap_region", "instr_loc": 398, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "region = afu_dma_region_find_iova(pdata, iova);"}, {"instr_func": "afu_dma_region_find_iova", "instr_loc": 295, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "{"}, {"instr_func": "afu_dma_region_find_iova", "instr_loc": 296, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "return afu_dma_region_find(pdata, iova, 0);"}, {"instr_func": "afu_dma_region_find_iova", "instr_loc": 296, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "return afu_dma_region_find(pdata, iova, 0);"}, {"instr_func": "afu_dma_region_find", "instr_loc": 255, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "{"}, {"instr_func": "afu_dma_region_find", "instr_loc": 265, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "if (dma_region_check_iova(region, iova, size)) {"}, {"instr_func": "afu_dma_region_find", "instr_loc": 265, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "if (dma_region_check_iova(region, iova, size)) {"}, {"instr_func": "dma_region_check_iova", "instr_loc": 135, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "{"}, {"instr_func": "dma_region_check_iova", "instr_loc": 140, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "(region->length + region->iova >= iova + size);"}, {"instr_func": "dma_region_check_iova", "instr_loc": 140, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "(region->length + region->iova >= iova + size);"}, {"instr_func": "dma_region_check_iova", "instr_loc": 140, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "(region->length + region->iova >= iova + size);"}, {"instr_func": "dma_region_check_iova", "instr_loc": 0, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "  %39 = phi i1 [ false, %25 ], [ %37, %26 ], !dbg !184303"}, {"instr_func": "dma_region_check_iova", "instr_loc": 139, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "return (region->iova <= iova) &&"}, {"instr_func": "dma_region_check_iova", "instr_loc": 141, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "}"}, {"instr_func": "afu_dma_region_find", "instr_loc": 265, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "if (dma_region_check_iova(region, iova, size)) {"}], "at_file": "drivers/fpga/dfl-afu-dma-region.c", "by": "TaintedLoopBoundDetector says:", "at_func": "afu_dma_region_find"}, "warn_no": 2}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %4 = alloca i1, align 1"}, {"lineno": 441, "file": "drivers/fpga/dfl-afu-main.c", "instr": "return afu_ioctl_dma_map(pdata, (void __user *)arg);"}, {"lineno": 391, "file": "drivers/fpga/dfl-afu-main.c", "instr": "afu_dma_unmap_region(pdata, map.iova);"}, {"lineno": 398, "file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "region = afu_dma_region_find_iova(pdata, iova);"}, {"lineno": 296, "file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "return afu_dma_region_find(pdata, iova, 0);"}, {"lineno": 265, "file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "if (dma_region_check_iova(region, iova, size)) {"}],
"warnings":[{"warn_data": {"at_line": 140, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "(region->length + region->iova >= iova + size);", "inst_trace": [{"instr_func": "afu_ioctl_dma_map", "instr_loc": 373, "instr_file": "drivers/fpga/dfl-afu-main.c", "instr": "{"}, {"instr_func": "afu_ioctl_dma_map", "instr_loc": 391, "instr_file": "drivers/fpga/dfl-afu-main.c", "instr": "afu_dma_unmap_region(pdata, map.iova);"}, {"instr_func": "afu_ioctl_dma_map", "instr_loc": 391, "instr_file": "drivers/fpga/dfl-afu-main.c", "instr": "afu_dma_unmap_region(pdata, map.iova);"}, {"instr_func": "afu_dma_unmap_region", "instr_loc": 394, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "{"}, {"instr_func": "afu_dma_unmap_region", "instr_loc": 398, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "region = afu_dma_region_find_iova(pdata, iova);"}, {"instr_func": "afu_dma_unmap_region", "instr_loc": 398, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "region = afu_dma_region_find_iova(pdata, iova);"}, {"instr_func": "afu_dma_region_find_iova", "instr_loc": 295, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "{"}, {"instr_func": "afu_dma_region_find_iova", "instr_loc": 296, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "return afu_dma_region_find(pdata, iova, 0);"}, {"instr_func": "afu_dma_region_find_iova", "instr_loc": 296, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "return afu_dma_region_find(pdata, iova, 0);"}, {"instr_func": "afu_dma_region_find", "instr_loc": 255, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "{"}, {"instr_func": "afu_dma_region_find", "instr_loc": 265, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "if (dma_region_check_iova(region, iova, size)) {"}, {"instr_func": "afu_dma_region_find", "instr_loc": 265, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "if (dma_region_check_iova(region, iova, size)) {"}, {"instr_func": "dma_region_check_iova", "instr_loc": 135, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "{"}, {"instr_func": "dma_region_check_iova", "instr_loc": 140, "instr_file": "drivers/fpga/dfl-afu-dma-region.c", "instr": "(region->length + region->iova >= iova + size);"}], "at_file": "drivers/fpga/dfl-afu-dma-region.c", "by": "IntegerOverflowDetector says:", "at_func": "dma_region_check_iova"}, "warn_no": 1}]},
{"num_warnings": 2,
"context":[{"lineno": -1, "instr": "  %4 = alloca i1, align 1"}, {"lineno": 437, "file": "drivers/fpga/dfl-afu-main.c", "instr": "return afu_ioctl_get_info(pdata, (void __user *)arg);"}],
"warnings":[{"warn_data": {"at_line": 328, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "mutex_lock(&pdata->lock);", "inst_trace": [], "at_file": "drivers/fpga/dfl-afu-main.c", "by": "TaintedSizeDetector says:", "at_func": "afu_ioctl_get_info"}, "warn_no": 1},
{"warn_data": {"at_line": 315, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "{", "inst_trace": [], "at_file": "drivers/fpga/dfl-afu-main.c", "by": "TaintedSizeDetector says:", "at_func": "afu_ioctl_get_info"}, "warn_no": 2}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %4 = alloca i1, align 1"}, {"lineno": 439, "file": "drivers/fpga/dfl-afu-main.c", "instr": "return afu_ioctl_get_region_info(pdata, (void __user *)arg);"}, {"lineno": 357, "file": "drivers/fpga/dfl-afu-main.c", "instr": "ret = afu_mmio_region_get_by_index(pdata, rinfo.index, &region);"}, {"lineno": 122, "file": "drivers/fpga/dfl-afu-region.c", "instr": "region = get_region_by_index(afu, region_index);"}],
"warnings":[{"warn_data": {"at_line": 33, "warn_str": "Loop is bounded by a tainted value.", "at": "if (region->index == region_index)", "inst_trace": [{"instr_func": "afu_ioctl_get_region_info", "instr_loc": 343, "instr_file": "drivers/fpga/dfl-afu-main.c", "instr": "{"}, {"instr_func": "afu_ioctl_get_region_info", "instr_loc": 357, "instr_file": "drivers/fpga/dfl-afu-main.c", "instr": "ret = afu_mmio_region_get_by_index(pdata, rinfo.index, &region);"}, {"instr_func": "afu_ioctl_get_region_info", "instr_loc": 357, "instr_file": "drivers/fpga/dfl-afu-main.c", "instr": "ret = afu_mmio_region_get_by_index(pdata, rinfo.index, &region);"}, {"instr_func": "afu_mmio_region_get_by_index", "instr_loc": 115, "instr_file": "drivers/fpga/dfl-afu-region.c", "instr": "{"}, {"instr_func": "afu_mmio_region_get_by_index", "instr_loc": 122, "instr_file": "drivers/fpga/dfl-afu-region.c", "instr": "region = get_region_by_index(afu, region_index);"}, {"instr_func": "afu_mmio_region_get_by_index", "instr_loc": 122, "instr_file": "drivers/fpga/dfl-afu-region.c", "instr": "region = get_region_by_index(afu, region_index);"}, {"instr_func": "get_region_by_index", "instr_loc": 29, "instr_file": "drivers/fpga/dfl-afu-region.c", "instr": "{"}, {"instr_func": "get_region_by_index", "instr_loc": 33, "instr_file": "drivers/fpga/dfl-afu-region.c", "instr": "if (region->index == region_index)"}, {"instr_func": "get_region_by_index", "instr_loc": 33, "instr_file": "drivers/fpga/dfl-afu-region.c", "instr": "if (region->index == region_index)"}], "at_file": "drivers/fpga/dfl-afu-region.c", "by": "TaintedLoopBoundDetector says:", "at_func": "get_region_by_index"}, "warn_no": 1}]}]}