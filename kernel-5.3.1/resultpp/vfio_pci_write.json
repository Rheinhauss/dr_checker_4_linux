{"all_contexts":[
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %5 = alloca i64, align 8"}, {"lineno": 1183, "file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_rw(device_data, (char __user *)buf, count, ppos, true);"}, {"lineno": 1158, "file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_vga_rw(vdev, buf, count, ppos, iswrite);"}],
"warnings":[{"warn_data": {"at_line": 272, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "*ppos += done;", "inst_trace": [{"instr_func": "vfio_pci_write", "instr_loc": -1, "instr": "  %5 = alloca i64, align 8"}, {"instr_func": "vfio_pci_write", "instr_loc": 1179, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "{"}, {"instr_func": "vfio_pci_write", "instr_loc": 1183, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_rw(device_data, (char __user *)buf, count, ppos, true);"}, {"instr_func": "vfio_pci_write", "instr_loc": 1183, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_rw(device_data, (char __user *)buf, count, ppos, true);"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1138, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "{"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1158, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_vga_rw(vdev, buf, count, ppos, iswrite);"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1158, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_vga_rw(vdev, buf, count, ppos, iswrite);"}, {"instr_func": "vfio_pci_vga_rw", "instr_loc": 216, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "{"}, {"instr_func": "vfio_pci_vga_rw", "instr_loc": 246, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "count = min(count, (size_t)(0x3e0 - pos));"}, {"instr_func": "vfio_pci_vga_rw", "instr_loc": 246, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "count = min(count, (size_t)(0x3e0 - pos));"}, {"instr_func": "vfio_pci_vga_rw", "instr_loc": 246, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "count = min(count, (size_t)(0x3e0 - pos));"}, {"instr_func": "vfio_pci_vga_rw", "instr_loc": 246, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "count = min(count, (size_t)(0x3e0 - pos));"}, {"instr_func": "vfio_pci_vga_rw", "instr_loc": 246, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "count = min(count, (size_t)(0x3e0 - pos));"}, {"instr_func": "vfio_pci_vga_rw", "instr_loc": 246, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "count = min(count, (size_t)(0x3e0 - pos));"}, {"instr_func": "vfio_pci_vga_rw", "instr_loc": 246, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "count = min(count, (size_t)(0x3e0 - pos));"}, {"instr_func": "vfio_pci_vga_rw", "instr_loc": 265, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "done = do_io_rw(iomem, buf, off, count, 0, 0, iswrite);"}, {"instr_func": "vfio_pci_vga_rw", "instr_loc": 265, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "done = do_io_rw(iomem, buf, off, count, 0, 0, iswrite);"}, {"instr_func": "do_io_rw", "instr_loc": 49, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "{"}, {"instr_func": "do_io_rw", "instr_loc": 123, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "count -= filled;"}, {"instr_func": "do_io_rw", "instr_loc": 123, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "count -= filled;"}, {"instr_func": "do_io_rw", "instr_loc": 123, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "count -= filled;"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 124, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "done += filled;"}, {"instr_func": "do_io_rw", "instr_loc": 124, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "done += filled;"}, {"instr_func": "do_io_rw", "instr_loc": 124, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "done += filled;"}, {"instr_func": "do_io_rw", "instr_loc": 129, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "return done;"}, {"instr_func": "do_io_rw", "instr_loc": 129, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "return done;"}, {"instr_func": "do_io_rw", "instr_loc": 130, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "}"}, {"instr_func": "vfio_pci_vga_rw", "instr_loc": 265, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "done = do_io_rw(iomem, buf, off, count, 0, 0, iswrite);"}, {"instr_func": "vfio_pci_vga_rw", "instr_loc": 265, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "done = do_io_rw(iomem, buf, off, count, 0, 0, iswrite);"}, {"instr_func": "vfio_pci_vga_rw", "instr_loc": 272, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "*ppos += done;"}], "at_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "by": "IntegerOverflowDetector says:", "at_func": "vfio_pci_vga_rw"}, "warn_no": 1}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %5 = alloca i64, align 8"}, {"lineno": 1183, "file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_rw(device_data, (char __user *)buf, count, ppos, true);"}, {"lineno": 1155, "file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_bar_rw(vdev, buf, count, ppos, iswrite);"}],
"warnings":[{"warn_data": {"at_line": 206, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "*ppos += done;", "inst_trace": [{"instr_func": "vfio_pci_write", "instr_loc": -1, "instr": "  %5 = alloca i64, align 8"}, {"instr_func": "vfio_pci_write", "instr_loc": 1179, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "{"}, {"instr_func": "vfio_pci_write", "instr_loc": 1183, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_rw(device_data, (char __user *)buf, count, ppos, true);"}, {"instr_func": "vfio_pci_write", "instr_loc": 1183, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_rw(device_data, (char __user *)buf, count, ppos, true);"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1138, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "{"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1155, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_bar_rw(vdev, buf, count, ppos, iswrite);"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1155, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_bar_rw(vdev, buf, count, ppos, iswrite);"}, {"instr_func": "vfio_pci_bar_rw", "instr_loc": 158, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "{"}, {"instr_func": "vfio_pci_bar_rw", "instr_loc": 203, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "done = do_io_rw(io, buf, pos, count, x_start, x_end, iswrite);"}, {"instr_func": "vfio_pci_bar_rw", "instr_loc": 203, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "done = do_io_rw(io, buf, pos, count, x_start, x_end, iswrite);"}, {"instr_func": "do_io_rw", "instr_loc": 49, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "{"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 124, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "done += filled;"}, {"instr_func": "do_io_rw", "instr_loc": 124, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "done += filled;"}, {"instr_func": "do_io_rw", "instr_loc": 124, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "done += filled;"}, {"instr_func": "do_io_rw", "instr_loc": 124, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "done += filled;"}, {"instr_func": "do_io_rw", "instr_loc": 124, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "done += filled;"}, {"instr_func": "do_io_rw", "instr_loc": 124, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "done += filled;"}, {"instr_func": "do_io_rw", "instr_loc": 129, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "return done;"}, {"instr_func": "do_io_rw", "instr_loc": 129, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "return done;"}, {"instr_func": "do_io_rw", "instr_loc": 130, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "}"}, {"instr_func": "vfio_pci_bar_rw", "instr_loc": 203, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "done = do_io_rw(io, buf, pos, count, x_start, x_end, iswrite);"}, {"instr_func": "vfio_pci_bar_rw", "instr_loc": 203, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "done = do_io_rw(io, buf, pos, count, x_start, x_end, iswrite);"}, {"instr_func": "vfio_pci_bar_rw", "instr_loc": 206, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "*ppos += done;"}], "at_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "by": "IntegerOverflowDetector says:", "at_func": "vfio_pci_bar_rw"}, "warn_no": 1}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %5 = alloca i64, align 8"}, {"lineno": 1183, "file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_rw(device_data, (char __user *)buf, count, ppos, true);"}, {"lineno": 1158, "file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_vga_rw(vdev, buf, count, ppos, iswrite);"}, {"lineno": 259, "file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "ret = vga_get_interruptible(vdev->pdev, rsrc);"}, {"lineno": 94, "file": "./include/linux/vgaarb.h", "instr": "  %7 = call i32 @vga_get(%struct.pci_dev.6244* %5, i32 %6, i32 1) #13, !dbg !107689"}],
"warnings":[{"warn_data": {"at_line": 487, "warn_str": "Trying to use a global variable without locking.", "at": "conflict = __vga_tryget(vgadev, rsrc);", "inst_trace": [{"instr_func": "vfio_pci_write", "instr_loc": -1, "instr": "  %5 = alloca i64, align 8"}, {"instr_func": "vfio_pci_write", "instr_loc": 1183, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_rw(device_data, (char __user *)buf, count, ppos, true);"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1158, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_vga_rw(vdev, buf, count, ppos, iswrite);"}, {"instr_func": "vfio_pci_vga_rw", "instr_loc": 259, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "ret = vga_get_interruptible(vdev->pdev, rsrc);"}, {"instr_func": "vga_get_interruptible", "instr_loc": 94, "instr_file": "./include/linux/vgaarb.h", "instr": "  %7 = call i32 @vga_get(%struct.pci_dev.6244* %5, i32 %6, i32 1) #13, !dbg !107689"}], "at_file": "drivers/gpu/vga/vgaarb.c", "by": "GlobalVariableRaceDetector says:", "at_func": "vga_get"}, "warn_no": 1}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %5 = alloca i64, align 8"}, {"lineno": 1183, "file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_rw(device_data, (char __user *)buf, count, ppos, true);"}, {"lineno": 1158, "file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_vga_rw(vdev, buf, count, ppos, iswrite);"}, {"lineno": 259, "file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "ret = vga_get_interruptible(vdev->pdev, rsrc);"}, {"lineno": 94, "file": "./include/linux/vgaarb.h", "instr": "  %7 = call i32 @vga_get(%struct.pci_dev.6244* %5, i32 %6, i32 1) #13, !dbg !107689"}, {"lineno": 472, "file": "drivers/gpu/vga/vgaarb.c", "instr": "vga_check_first_use();"}],
"warnings":[{"warn_data": {"at_line": 235, "warn_str": "Trying to use a global variable without locking.", "at": "if (!vga_arbiter_used) {", "inst_trace": [{"instr_func": "vfio_pci_write", "instr_loc": -1, "instr": "  %5 = alloca i64, align 8"}, {"instr_func": "vfio_pci_write", "instr_loc": 1183, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_rw(device_data, (char __user *)buf, count, ppos, true);"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1158, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_vga_rw(vdev, buf, count, ppos, iswrite);"}, {"instr_func": "vfio_pci_vga_rw", "instr_loc": 259, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "ret = vga_get_interruptible(vdev->pdev, rsrc);"}, {"instr_func": "vga_get_interruptible", "instr_loc": 94, "instr_file": "./include/linux/vgaarb.h", "instr": "  %7 = call i32 @vga_get(%struct.pci_dev.6244* %5, i32 %6, i32 1) #13, !dbg !107689"}, {"instr_func": "vga_get", "instr_loc": 472, "instr_file": "drivers/gpu/vga/vgaarb.c", "instr": "vga_check_first_use();"}], "at_file": "drivers/gpu/vga/vgaarb.c", "by": "GlobalVariableRaceDetector says:", "at_func": "vga_check_first_use"}, "warn_no": 1}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %5 = alloca i64, align 8"}, {"lineno": 1183, "file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_rw(device_data, (char __user *)buf, count, ppos, true);"}, {"lineno": 1158, "file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_vga_rw(vdev, buf, count, ppos, iswrite);"}, {"lineno": 259, "file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "ret = vga_get_interruptible(vdev->pdev, rsrc);"}, {"lineno": 94, "file": "./include/linux/vgaarb.h", "instr": "  %7 = call i32 @vga_get(%struct.pci_dev.6244* %5, i32 %6, i32 1) #13, !dbg !107689"}, {"lineno": 475, "file": "drivers/gpu/vga/vgaarb.c", "instr": "pdev = vga_default_device();"}],
"warnings":[{"warn_data": {"at_line": 160, "warn_str": "Trying to use a global variable without locking.", "at": "return vga_default;", "inst_trace": [{"instr_func": "vfio_pci_write", "instr_loc": -1, "instr": "  %5 = alloca i64, align 8"}, {"instr_func": "vfio_pci_write", "instr_loc": 1183, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_rw(device_data, (char __user *)buf, count, ppos, true);"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1158, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_vga_rw(vdev, buf, count, ppos, iswrite);"}, {"instr_func": "vfio_pci_vga_rw", "instr_loc": 259, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "ret = vga_get_interruptible(vdev->pdev, rsrc);"}, {"instr_func": "vga_get_interruptible", "instr_loc": 94, "instr_file": "./include/linux/vgaarb.h", "instr": "  %7 = call i32 @vga_get(%struct.pci_dev.6244* %5, i32 %6, i32 1) #13, !dbg !107689"}, {"instr_func": "vga_get", "instr_loc": 475, "instr_file": "drivers/gpu/vga/vgaarb.c", "instr": "pdev = vga_default_device();"}], "at_file": "drivers/gpu/vga/vgaarb.c", "by": "GlobalVariableRaceDetector says:", "at_func": "vga_default_device"}, "warn_no": 1}]},
{"num_warnings": 13,
"context":[{"lineno": -1, "instr": "  %5 = alloca i64, align 8"}, {"lineno": 1183, "file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_rw(device_data, (char __user *)buf, count, ppos, true);"}, {"lineno": 1158, "file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_vga_rw(vdev, buf, count, ppos, iswrite);"}, {"lineno": 265, "file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "done = do_io_rw(iomem, buf, off, count, 0, 0, iswrite);"}],
"warnings":[{"warn_data": {"at_line": 123, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "count -= filled;", "inst_trace": [{"instr_func": "vfio_pci_write", "instr_loc": -1, "instr": "  %5 = alloca i64, align 8"}, {"instr_func": "vfio_pci_write", "instr_loc": 1179, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "{"}, {"instr_func": "vfio_pci_write", "instr_loc": 1183, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_rw(device_data, (char __user *)buf, count, ppos, true);"}, {"instr_func": "vfio_pci_write", "instr_loc": 1183, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_rw(device_data, (char __user *)buf, count, ppos, true);"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1138, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "{"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1158, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_vga_rw(vdev, buf, count, ppos, iswrite);"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1158, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_vga_rw(vdev, buf, count, ppos, iswrite);"}, {"instr_func": "vfio_pci_vga_rw", "instr_loc": 216, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "{"}, {"instr_func": "vfio_pci_vga_rw", "instr_loc": 246, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "count = min(count, (size_t)(0x3e0 - pos));"}, {"instr_func": "vfio_pci_vga_rw", "instr_loc": 246, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "count = min(count, (size_t)(0x3e0 - pos));"}, {"instr_func": "vfio_pci_vga_rw", "instr_loc": 246, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "count = min(count, (size_t)(0x3e0 - pos));"}, {"instr_func": "vfio_pci_vga_rw", "instr_loc": 246, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "count = min(count, (size_t)(0x3e0 - pos));"}, {"instr_func": "vfio_pci_vga_rw", "instr_loc": 246, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "count = min(count, (size_t)(0x3e0 - pos));"}, {"instr_func": "vfio_pci_vga_rw", "instr_loc": 246, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "count = min(count, (size_t)(0x3e0 - pos));"}, {"instr_func": "vfio_pci_vga_rw", "instr_loc": 246, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "count = min(count, (size_t)(0x3e0 - pos));"}, {"instr_func": "vfio_pci_vga_rw", "instr_loc": 265, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "done = do_io_rw(iomem, buf, off, count, 0, 0, iswrite);"}, {"instr_func": "vfio_pci_vga_rw", "instr_loc": 265, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "done = do_io_rw(iomem, buf, off, count, 0, 0, iswrite);"}, {"instr_func": "do_io_rw", "instr_loc": 49, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "{"}, {"instr_func": "do_io_rw", "instr_loc": 123, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "count -= filled;"}], "at_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "by": "IntegerOverflowDetector says:", "at_func": "do_io_rw"}, "warn_no": 1},
{"warn_data": {"at_line": 52, "warn_str": "Loop is bounded by a tainted value.", "at": "while (count) {", "inst_trace": [{"instr_func": "vfio_pci_write", "instr_loc": -1, "instr": "  %5 = alloca i64, align 8"}, {"instr_func": "vfio_pci_write", "instr_loc": 1179, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "{"}, {"instr_func": "vfio_pci_write", "instr_loc": 1183, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_rw(device_data, (char __user *)buf, count, ppos, true);"}, {"instr_func": "vfio_pci_write", "instr_loc": 1183, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_rw(device_data, (char __user *)buf, count, ppos, true);"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1138, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "{"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1158, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_vga_rw(vdev, buf, count, ppos, iswrite);"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1158, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_vga_rw(vdev, buf, count, ppos, iswrite);"}, {"instr_func": "vfio_pci_vga_rw", "instr_loc": 216, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "{"}, {"instr_func": "vfio_pci_vga_rw", "instr_loc": 246, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "count = min(count, (size_t)(0x3e0 - pos));"}, {"instr_func": "vfio_pci_vga_rw", "instr_loc": 246, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "count = min(count, (size_t)(0x3e0 - pos));"}, {"instr_func": "vfio_pci_vga_rw", "instr_loc": 246, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "count = min(count, (size_t)(0x3e0 - pos));"}, {"instr_func": "vfio_pci_vga_rw", "instr_loc": 246, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "count = min(count, (size_t)(0x3e0 - pos));"}, {"instr_func": "vfio_pci_vga_rw", "instr_loc": 246, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "count = min(count, (size_t)(0x3e0 - pos));"}, {"instr_func": "vfio_pci_vga_rw", "instr_loc": 246, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "count = min(count, (size_t)(0x3e0 - pos));"}, {"instr_func": "vfio_pci_vga_rw", "instr_loc": 246, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "count = min(count, (size_t)(0x3e0 - pos));"}, {"instr_func": "vfio_pci_vga_rw", "instr_loc": 265, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "done = do_io_rw(iomem, buf, off, count, 0, 0, iswrite);"}, {"instr_func": "vfio_pci_vga_rw", "instr_loc": 265, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "done = do_io_rw(iomem, buf, off, count, 0, 0, iswrite);"}, {"instr_func": "do_io_rw", "instr_loc": 49, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "{"}, {"instr_func": "do_io_rw", "instr_loc": 52, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "while (count) {"}, {"instr_func": "do_io_rw", "instr_loc": 52, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "while (count) {"}], "at_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "by": "TaintedLoopBoundDetector says:", "at_func": "do_io_rw"}, "warn_no": 2},
{"warn_data": {"at_line": 124, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "done += filled;", "inst_trace": [{"instr_func": "vfio_pci_write", "instr_loc": -1, "instr": "  %5 = alloca i64, align 8"}, {"instr_func": "vfio_pci_write", "instr_loc": 1179, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "{"}, {"instr_func": "vfio_pci_write", "instr_loc": 1183, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_rw(device_data, (char __user *)buf, count, ppos, true);"}, {"instr_func": "vfio_pci_write", "instr_loc": 1183, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_rw(device_data, (char __user *)buf, count, ppos, true);"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1138, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "{"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1158, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_vga_rw(vdev, buf, count, ppos, iswrite);"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1158, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_vga_rw(vdev, buf, count, ppos, iswrite);"}, {"instr_func": "vfio_pci_vga_rw", "instr_loc": 216, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "{"}, {"instr_func": "vfio_pci_vga_rw", "instr_loc": 239, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "count = min(count, (size_t)(0x3bc - pos));"}, {"instr_func": "vfio_pci_vga_rw", "instr_loc": 239, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "count = min(count, (size_t)(0x3bc - pos));"}, {"instr_func": "vfio_pci_vga_rw", "instr_loc": 239, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "count = min(count, (size_t)(0x3bc - pos));"}, {"instr_func": "vfio_pci_vga_rw", "instr_loc": 239, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "count = min(count, (size_t)(0x3bc - pos));"}, {"instr_func": "vfio_pci_vga_rw", "instr_loc": 239, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "count = min(count, (size_t)(0x3bc - pos));"}, {"instr_func": "vfio_pci_vga_rw", "instr_loc": 239, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "count = min(count, (size_t)(0x3bc - pos));"}, {"instr_func": "vfio_pci_vga_rw", "instr_loc": 239, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "count = min(count, (size_t)(0x3bc - pos));"}, {"instr_func": "vfio_pci_vga_rw", "instr_loc": 265, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "done = do_io_rw(iomem, buf, off, count, 0, 0, iswrite);"}, {"instr_func": "vfio_pci_vga_rw", "instr_loc": 265, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "done = do_io_rw(iomem, buf, off, count, 0, 0, iswrite);"}, {"instr_func": "do_io_rw", "instr_loc": 49, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "{"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 124, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "done += filled;"}], "at_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "by": "IntegerOverflowDetector says:", "at_func": "do_io_rw"}, "warn_no": 3},
{"warn_data": {"at_line": 125, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "off += filled;", "inst_trace": [{"instr_func": "vfio_pci_write", "instr_loc": -1, "instr": "  %5 = alloca i64, align 8"}, {"instr_func": "vfio_pci_write", "instr_loc": 1179, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "{"}, {"instr_func": "vfio_pci_write", "instr_loc": 1183, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_rw(device_data, (char __user *)buf, count, ppos, true);"}, {"instr_func": "vfio_pci_write", "instr_loc": 1183, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_rw(device_data, (char __user *)buf, count, ppos, true);"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1138, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "{"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1158, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_vga_rw(vdev, buf, count, ppos, iswrite);"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1158, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_vga_rw(vdev, buf, count, ppos, iswrite);"}, {"instr_func": "vfio_pci_vga_rw", "instr_loc": 216, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "{"}, {"instr_func": "vfio_pci_vga_rw", "instr_loc": 265, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "done = do_io_rw(iomem, buf, off, count, 0, 0, iswrite);"}, {"instr_func": "vfio_pci_vga_rw", "instr_loc": 265, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "done = do_io_rw(iomem, buf, off, count, 0, 0, iswrite);"}, {"instr_func": "do_io_rw", "instr_loc": 49, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "{"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 125, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "off += filled;"}], "at_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "by": "IntegerOverflowDetector says:", "at_func": "do_io_rw"}, "warn_no": 4},
{"warn_data": {"at_line": 56, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "fillable = min(count, (size_t)(x_start - off));", "inst_trace": [{"instr_func": "vfio_pci_write", "instr_loc": -1, "instr": "  %5 = alloca i64, align 8"}, {"instr_func": "vfio_pci_write", "instr_loc": 1179, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "{"}, {"instr_func": "vfio_pci_write", "instr_loc": 1183, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_rw(device_data, (char __user *)buf, count, ppos, true);"}, {"instr_func": "vfio_pci_write", "instr_loc": 1183, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_rw(device_data, (char __user *)buf, count, ppos, true);"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1138, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "{"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1158, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_vga_rw(vdev, buf, count, ppos, iswrite);"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1158, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_vga_rw(vdev, buf, count, ppos, iswrite);"}, {"instr_func": "vfio_pci_vga_rw", "instr_loc": 216, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "{"}, {"instr_func": "vfio_pci_vga_rw", "instr_loc": 239, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "count = min(count, (size_t)(0x3bc - pos));"}, {"instr_func": "vfio_pci_vga_rw", "instr_loc": 239, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "count = min(count, (size_t)(0x3bc - pos));"}, {"instr_func": "vfio_pci_vga_rw", "instr_loc": 239, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "count = min(count, (size_t)(0x3bc - pos));"}, {"instr_func": "vfio_pci_vga_rw", "instr_loc": 239, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "count = min(count, (size_t)(0x3bc - pos));"}, {"instr_func": "vfio_pci_vga_rw", "instr_loc": 239, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "count = min(count, (size_t)(0x3bc - pos));"}, {"instr_func": "vfio_pci_vga_rw", "instr_loc": 239, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "count = min(count, (size_t)(0x3bc - pos));"}, {"instr_func": "vfio_pci_vga_rw", "instr_loc": 239, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "count = min(count, (size_t)(0x3bc - pos));"}, {"instr_func": "vfio_pci_vga_rw", "instr_loc": 265, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "done = do_io_rw(iomem, buf, off, count, 0, 0, iswrite);"}, {"instr_func": "vfio_pci_vga_rw", "instr_loc": 265, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "done = do_io_rw(iomem, buf, off, count, 0, 0, iswrite);"}, {"instr_func": "do_io_rw", "instr_loc": 49, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "{"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 125, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "off += filled;"}, {"instr_func": "do_io_rw", "instr_loc": 125, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "off += filled;"}, {"instr_func": "do_io_rw", "instr_loc": 125, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "off += filled;"}, {"instr_func": "do_io_rw", "instr_loc": 56, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "fillable = min(count, (size_t)(x_start - off));"}], "at_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "by": "IntegerOverflowDetector says:", "at_func": "do_io_rw"}, "warn_no": 5},
{"warn_data": {"at_line": 112, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "filled = min(count, (size_t)(x_end - off));", "inst_trace": [{"instr_func": "vfio_pci_write", "instr_loc": -1, "instr": "  %5 = alloca i64, align 8"}, {"instr_func": "vfio_pci_write", "instr_loc": 1179, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "{"}, {"instr_func": "vfio_pci_write", "instr_loc": 1183, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_rw(device_data, (char __user *)buf, count, ppos, true);"}, {"instr_func": "vfio_pci_write", "instr_loc": 1183, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_rw(device_data, (char __user *)buf, count, ppos, true);"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1138, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "{"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1158, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_vga_rw(vdev, buf, count, ppos, iswrite);"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1158, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_vga_rw(vdev, buf, count, ppos, iswrite);"}, {"instr_func": "vfio_pci_vga_rw", "instr_loc": 216, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "{"}, {"instr_func": "vfio_pci_vga_rw", "instr_loc": 232, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "count = min(count, (size_t)(0xc0000 - pos));"}, {"instr_func": "vfio_pci_vga_rw", "instr_loc": 232, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "count = min(count, (size_t)(0xc0000 - pos));"}, {"instr_func": "vfio_pci_vga_rw", "instr_loc": 232, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "count = min(count, (size_t)(0xc0000 - pos));"}, {"instr_func": "vfio_pci_vga_rw", "instr_loc": 232, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "count = min(count, (size_t)(0xc0000 - pos));"}, {"instr_func": "vfio_pci_vga_rw", "instr_loc": 232, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "count = min(count, (size_t)(0xc0000 - pos));"}, {"instr_func": "vfio_pci_vga_rw", "instr_loc": 232, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "count = min(count, (size_t)(0xc0000 - pos));"}, {"instr_func": "vfio_pci_vga_rw", "instr_loc": 232, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "count = min(count, (size_t)(0xc0000 - pos));"}, {"instr_func": "vfio_pci_vga_rw", "instr_loc": 265, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "done = do_io_rw(iomem, buf, off, count, 0, 0, iswrite);"}, {"instr_func": "vfio_pci_vga_rw", "instr_loc": 265, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "done = do_io_rw(iomem, buf, off, count, 0, 0, iswrite);"}, {"instr_func": "do_io_rw", "instr_loc": 49, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "{"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 125, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "off += filled;"}, {"instr_func": "do_io_rw", "instr_loc": 125, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "off += filled;"}, {"instr_func": "do_io_rw", "instr_loc": 125, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "off += filled;"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}], "at_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "by": "IntegerOverflowDetector says:", "at_func": "do_io_rw"}, "warn_no": 6},
{"warn_data": {"at_line": 71, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "val = vfio_ioread32(io + off);", "inst_trace": [], "at_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "by": "TaintedSizeDetector says:", "at_func": "do_io_rw"}, "warn_no": 7},
{"warn_data": {"at_line": 66, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "if (copy_from_user(&val, buf, 4))", "inst_trace": [], "at_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "by": "TaintedSizeDetector says:", "at_func": "do_io_rw"}, "warn_no": 8},
{"warn_data": {"at_line": 87, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "val = vfio_ioread16(io + off);", "inst_trace": [], "at_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "by": "TaintedSizeDetector says:", "at_func": "do_io_rw"}, "warn_no": 9},
{"warn_data": {"at_line": 82, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "if (copy_from_user(&val, buf, 2))", "inst_trace": [], "at_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "by": "TaintedSizeDetector says:", "at_func": "do_io_rw"}, "warn_no": 10},
{"warn_data": {"at_line": 118, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "if (copy_to_user(buf + i, &val, 1))", "inst_trace": [], "at_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "by": "TaintedSizeDetector says:", "at_func": "do_io_rw"}, "warn_no": 11},
{"warn_data": {"at_line": 103, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "val = vfio_ioread8(io + off);", "inst_trace": [], "at_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "by": "TaintedSizeDetector says:", "at_func": "do_io_rw"}, "warn_no": 12},
{"warn_data": {"at_line": 98, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "if (copy_from_user(&val, buf, 1))", "inst_trace": [], "at_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "by": "TaintedSizeDetector says:", "at_func": "do_io_rw"}, "warn_no": 13}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %5 = alloca i64, align 8"}, {"lineno": 1183, "file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_rw(device_data, (char __user *)buf, count, ppos, true);"}, {"lineno": 1158, "file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_vga_rw(vdev, buf, count, ppos, iswrite);"}, {"lineno": 259, "file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "ret = vga_get_interruptible(vdev->pdev, rsrc);"}, {"lineno": 94, "file": "./include/linux/vgaarb.h", "instr": "  %7 = call i32 @vga_get(%struct.pci_dev.6244* %5, i32 %6, i32 1) #13, !dbg !107689"}, {"lineno": 487, "file": "drivers/gpu/vga/vgaarb.c", "instr": "conflict = __vga_tryget(vgadev, rsrc);"}],
"warnings":[{"warn_data": {"at_line": 278, "warn_str": "Trying to use a global variable without locking.", "at": "list_for_each_entry(conflict, &vga_list, list) {", "inst_trace": [{"instr_func": "vfio_pci_write", "instr_loc": -1, "instr": "  %5 = alloca i64, align 8"}, {"instr_func": "vfio_pci_write", "instr_loc": 1183, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_rw(device_data, (char __user *)buf, count, ppos, true);"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1158, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_vga_rw(vdev, buf, count, ppos, iswrite);"}, {"instr_func": "vfio_pci_vga_rw", "instr_loc": 259, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "ret = vga_get_interruptible(vdev->pdev, rsrc);"}, {"instr_func": "vga_get_interruptible", "instr_loc": 94, "instr_file": "./include/linux/vgaarb.h", "instr": "  %7 = call i32 @vga_get(%struct.pci_dev.6244* %5, i32 %6, i32 1) #13, !dbg !107689"}, {"instr_func": "vga_get", "instr_loc": 487, "instr_file": "drivers/gpu/vga/vgaarb.c", "instr": "conflict = __vga_tryget(vgadev, rsrc);"}], "at_file": "drivers/gpu/vga/vgaarb.c", "by": "GlobalVariableRaceDetector says:", "at_func": "__vga_tryget"}, "warn_no": 1}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %5 = alloca i64, align 8"}, {"lineno": 1183, "file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_rw(device_data, (char __user *)buf, count, ppos, true);"}, {"lineno": 1158, "file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_vga_rw(vdev, buf, count, ppos, iswrite);"}, {"lineno": 267, "file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "vga_put(vdev->pdev, rsrc);"}],
"warnings":[{"warn_data": {"at_line": 579, "warn_str": "Trying to use a global variable without locking.", "at": "spin_lock_irqsave(&vga_lock, flags);", "inst_trace": [{"instr_func": "vfio_pci_write", "instr_loc": -1, "instr": "  %5 = alloca i64, align 8"}, {"instr_func": "vfio_pci_write", "instr_loc": 1183, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_rw(device_data, (char __user *)buf, count, ppos, true);"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1158, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_vga_rw(vdev, buf, count, ppos, iswrite);"}, {"instr_func": "vfio_pci_vga_rw", "instr_loc": 267, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "vga_put(vdev->pdev, rsrc);"}], "at_file": "drivers/gpu/vga/vgaarb.c", "by": "GlobalVariableRaceDetector says:", "at_func": "vga_put"}, "warn_no": 1}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %5 = alloca i64, align 8"}, {"lineno": 1183, "file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_rw(device_data, (char __user *)buf, count, ppos, true);"}, {"lineno": 1152, "file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_bar_rw(vdev, buf, count, ppos, false);"}],
"warnings":[{"warn_data": {"at_line": 206, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "*ppos += done;", "inst_trace": [{"instr_func": "vfio_pci_write", "instr_loc": -1, "instr": "  %5 = alloca i64, align 8"}, {"instr_func": "vfio_pci_write", "instr_loc": 1179, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "{"}, {"instr_func": "vfio_pci_write", "instr_loc": 1183, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_rw(device_data, (char __user *)buf, count, ppos, true);"}, {"instr_func": "vfio_pci_write", "instr_loc": 1183, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_rw(device_data, (char __user *)buf, count, ppos, true);"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1138, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "{"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1152, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_bar_rw(vdev, buf, count, ppos, false);"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1152, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_bar_rw(vdev, buf, count, ppos, false);"}, {"instr_func": "vfio_pci_bar_rw", "instr_loc": 158, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "{"}, {"instr_func": "vfio_pci_bar_rw", "instr_loc": 203, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "done = do_io_rw(io, buf, pos, count, x_start, x_end, iswrite);"}, {"instr_func": "vfio_pci_bar_rw", "instr_loc": 203, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "done = do_io_rw(io, buf, pos, count, x_start, x_end, iswrite);"}, {"instr_func": "do_io_rw", "instr_loc": 49, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "{"}, {"instr_func": "do_io_rw", "instr_loc": 123, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "count -= filled;"}, {"instr_func": "do_io_rw", "instr_loc": 123, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "count -= filled;"}, {"instr_func": "do_io_rw", "instr_loc": 123, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "count -= filled;"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 124, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "done += filled;"}, {"instr_func": "do_io_rw", "instr_loc": 124, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "done += filled;"}, {"instr_func": "do_io_rw", "instr_loc": 124, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "done += filled;"}, {"instr_func": "do_io_rw", "instr_loc": 129, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "return done;"}, {"instr_func": "do_io_rw", "instr_loc": 129, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "return done;"}, {"instr_func": "do_io_rw", "instr_loc": 130, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "}"}, {"instr_func": "vfio_pci_bar_rw", "instr_loc": 203, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "done = do_io_rw(io, buf, pos, count, x_start, x_end, iswrite);"}, {"instr_func": "vfio_pci_bar_rw", "instr_loc": 203, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "done = do_io_rw(io, buf, pos, count, x_start, x_end, iswrite);"}, {"instr_func": "vfio_pci_bar_rw", "instr_loc": 206, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "*ppos += done;"}], "at_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "by": "IntegerOverflowDetector says:", "at_func": "vfio_pci_bar_rw"}, "warn_no": 1}]},
{"num_warnings": 13,
"context":[{"lineno": -1, "instr": "  %5 = alloca i64, align 8"}, {"lineno": 1183, "file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_rw(device_data, (char __user *)buf, count, ppos, true);"}, {"lineno": 1155, "file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_bar_rw(vdev, buf, count, ppos, iswrite);"}, {"lineno": 203, "file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "done = do_io_rw(io, buf, pos, count, x_start, x_end, iswrite);"}],
"warnings":[{"warn_data": {"at_line": 123, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "count -= filled;", "inst_trace": [{"instr_func": "vfio_pci_write", "instr_loc": -1, "instr": "  %5 = alloca i64, align 8"}, {"instr_func": "vfio_pci_write", "instr_loc": 1179, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "{"}, {"instr_func": "vfio_pci_write", "instr_loc": 1183, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_rw(device_data, (char __user *)buf, count, ppos, true);"}, {"instr_func": "vfio_pci_write", "instr_loc": 1183, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_rw(device_data, (char __user *)buf, count, ppos, true);"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1138, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "{"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1155, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_bar_rw(vdev, buf, count, ppos, iswrite);"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1155, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_bar_rw(vdev, buf, count, ppos, iswrite);"}, {"instr_func": "vfio_pci_bar_rw", "instr_loc": 158, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "{"}, {"instr_func": "vfio_pci_bar_rw", "instr_loc": 203, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "done = do_io_rw(io, buf, pos, count, x_start, x_end, iswrite);"}, {"instr_func": "vfio_pci_bar_rw", "instr_loc": 203, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "done = do_io_rw(io, buf, pos, count, x_start, x_end, iswrite);"}, {"instr_func": "do_io_rw", "instr_loc": 49, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "{"}, {"instr_func": "do_io_rw", "instr_loc": 123, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "count -= filled;"}], "at_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "by": "IntegerOverflowDetector says:", "at_func": "do_io_rw"}, "warn_no": 1},
{"warn_data": {"at_line": 52, "warn_str": "Loop is bounded by a tainted value.", "at": "while (count) {", "inst_trace": [{"instr_func": "vfio_pci_write", "instr_loc": -1, "instr": "  %5 = alloca i64, align 8"}, {"instr_func": "vfio_pci_write", "instr_loc": 1179, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "{"}, {"instr_func": "vfio_pci_write", "instr_loc": 1183, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_rw(device_data, (char __user *)buf, count, ppos, true);"}, {"instr_func": "vfio_pci_write", "instr_loc": 1183, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_rw(device_data, (char __user *)buf, count, ppos, true);"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1138, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "{"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1155, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_bar_rw(vdev, buf, count, ppos, iswrite);"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1155, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_bar_rw(vdev, buf, count, ppos, iswrite);"}, {"instr_func": "vfio_pci_bar_rw", "instr_loc": 158, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "{"}, {"instr_func": "vfio_pci_bar_rw", "instr_loc": 203, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "done = do_io_rw(io, buf, pos, count, x_start, x_end, iswrite);"}, {"instr_func": "vfio_pci_bar_rw", "instr_loc": 203, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "done = do_io_rw(io, buf, pos, count, x_start, x_end, iswrite);"}, {"instr_func": "do_io_rw", "instr_loc": 49, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "{"}, {"instr_func": "do_io_rw", "instr_loc": 52, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "while (count) {"}, {"instr_func": "do_io_rw", "instr_loc": 52, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "while (count) {"}], "at_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "by": "TaintedLoopBoundDetector says:", "at_func": "do_io_rw"}, "warn_no": 2},
{"warn_data": {"at_line": 124, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "done += filled;", "inst_trace": [{"instr_func": "vfio_pci_write", "instr_loc": -1, "instr": "  %5 = alloca i64, align 8"}, {"instr_func": "vfio_pci_write", "instr_loc": 1179, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "{"}, {"instr_func": "vfio_pci_write", "instr_loc": 1183, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_rw(device_data, (char __user *)buf, count, ppos, true);"}, {"instr_func": "vfio_pci_write", "instr_loc": 1183, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_rw(device_data, (char __user *)buf, count, ppos, true);"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1138, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "{"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1155, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_bar_rw(vdev, buf, count, ppos, iswrite);"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1155, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_bar_rw(vdev, buf, count, ppos, iswrite);"}, {"instr_func": "vfio_pci_bar_rw", "instr_loc": 158, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "{"}, {"instr_func": "vfio_pci_bar_rw", "instr_loc": 203, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "done = do_io_rw(io, buf, pos, count, x_start, x_end, iswrite);"}, {"instr_func": "vfio_pci_bar_rw", "instr_loc": 203, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "done = do_io_rw(io, buf, pos, count, x_start, x_end, iswrite);"}, {"instr_func": "do_io_rw", "instr_loc": 49, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "{"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 124, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "done += filled;"}], "at_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "by": "IntegerOverflowDetector says:", "at_func": "do_io_rw"}, "warn_no": 3},
{"warn_data": {"at_line": 125, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "off += filled;", "inst_trace": [{"instr_func": "vfio_pci_write", "instr_loc": -1, "instr": "  %5 = alloca i64, align 8"}, {"instr_func": "vfio_pci_write", "instr_loc": 1179, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "{"}, {"instr_func": "vfio_pci_write", "instr_loc": 1183, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_rw(device_data, (char __user *)buf, count, ppos, true);"}, {"instr_func": "vfio_pci_write", "instr_loc": 1183, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_rw(device_data, (char __user *)buf, count, ppos, true);"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1138, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "{"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1155, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_bar_rw(vdev, buf, count, ppos, iswrite);"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1155, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_bar_rw(vdev, buf, count, ppos, iswrite);"}, {"instr_func": "vfio_pci_bar_rw", "instr_loc": 158, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "{"}, {"instr_func": "vfio_pci_bar_rw", "instr_loc": 203, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "done = do_io_rw(io, buf, pos, count, x_start, x_end, iswrite);"}, {"instr_func": "vfio_pci_bar_rw", "instr_loc": 203, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "done = do_io_rw(io, buf, pos, count, x_start, x_end, iswrite);"}, {"instr_func": "do_io_rw", "instr_loc": 49, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "{"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 125, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "off += filled;"}], "at_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "by": "IntegerOverflowDetector says:", "at_func": "do_io_rw"}, "warn_no": 4},
{"warn_data": {"at_line": 56, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "fillable = min(count, (size_t)(x_start - off));", "inst_trace": [{"instr_func": "vfio_pci_write", "instr_loc": -1, "instr": "  %5 = alloca i64, align 8"}, {"instr_func": "vfio_pci_write", "instr_loc": 1179, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "{"}, {"instr_func": "vfio_pci_write", "instr_loc": 1183, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_rw(device_data, (char __user *)buf, count, ppos, true);"}, {"instr_func": "vfio_pci_write", "instr_loc": 1183, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_rw(device_data, (char __user *)buf, count, ppos, true);"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1138, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "{"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1155, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_bar_rw(vdev, buf, count, ppos, iswrite);"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1155, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_bar_rw(vdev, buf, count, ppos, iswrite);"}, {"instr_func": "vfio_pci_bar_rw", "instr_loc": 158, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "{"}, {"instr_func": "vfio_pci_bar_rw", "instr_loc": 203, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "done = do_io_rw(io, buf, pos, count, x_start, x_end, iswrite);"}, {"instr_func": "vfio_pci_bar_rw", "instr_loc": 203, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "done = do_io_rw(io, buf, pos, count, x_start, x_end, iswrite);"}, {"instr_func": "do_io_rw", "instr_loc": 49, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "{"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 125, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "off += filled;"}, {"instr_func": "do_io_rw", "instr_loc": 125, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "off += filled;"}, {"instr_func": "do_io_rw", "instr_loc": 125, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "off += filled;"}, {"instr_func": "do_io_rw", "instr_loc": 56, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "fillable = min(count, (size_t)(x_start - off));"}], "at_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "by": "IntegerOverflowDetector says:", "at_func": "do_io_rw"}, "warn_no": 5},
{"warn_data": {"at_line": 112, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "filled = min(count, (size_t)(x_end - off));", "inst_trace": [{"instr_func": "vfio_pci_write", "instr_loc": -1, "instr": "  %5 = alloca i64, align 8"}, {"instr_func": "vfio_pci_write", "instr_loc": 1179, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "{"}, {"instr_func": "vfio_pci_write", "instr_loc": 1183, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_rw(device_data, (char __user *)buf, count, ppos, true);"}, {"instr_func": "vfio_pci_write", "instr_loc": 1183, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_rw(device_data, (char __user *)buf, count, ppos, true);"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1138, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "{"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1155, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_bar_rw(vdev, buf, count, ppos, iswrite);"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1155, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_bar_rw(vdev, buf, count, ppos, iswrite);"}, {"instr_func": "vfio_pci_bar_rw", "instr_loc": 158, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "{"}, {"instr_func": "vfio_pci_bar_rw", "instr_loc": 203, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "done = do_io_rw(io, buf, pos, count, x_start, x_end, iswrite);"}, {"instr_func": "vfio_pci_bar_rw", "instr_loc": 203, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "done = do_io_rw(io, buf, pos, count, x_start, x_end, iswrite);"}, {"instr_func": "do_io_rw", "instr_loc": 49, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "{"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 125, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "off += filled;"}, {"instr_func": "do_io_rw", "instr_loc": 125, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "off += filled;"}, {"instr_func": "do_io_rw", "instr_loc": 125, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "off += filled;"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}], "at_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "by": "IntegerOverflowDetector says:", "at_func": "do_io_rw"}, "warn_no": 6},
{"warn_data": {"at_line": 71, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "val = vfio_ioread32(io + off);", "inst_trace": [], "at_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "by": "TaintedSizeDetector says:", "at_func": "do_io_rw"}, "warn_no": 7},
{"warn_data": {"at_line": 66, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "if (copy_from_user(&val, buf, 4))", "inst_trace": [], "at_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "by": "TaintedSizeDetector says:", "at_func": "do_io_rw"}, "warn_no": 8},
{"warn_data": {"at_line": 87, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "val = vfio_ioread16(io + off);", "inst_trace": [], "at_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "by": "TaintedSizeDetector says:", "at_func": "do_io_rw"}, "warn_no": 9},
{"warn_data": {"at_line": 82, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "if (copy_from_user(&val, buf, 2))", "inst_trace": [], "at_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "by": "TaintedSizeDetector says:", "at_func": "do_io_rw"}, "warn_no": 10},
{"warn_data": {"at_line": 118, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "if (copy_to_user(buf + i, &val, 1))", "inst_trace": [], "at_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "by": "TaintedSizeDetector says:", "at_func": "do_io_rw"}, "warn_no": 11},
{"warn_data": {"at_line": 103, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "val = vfio_ioread8(io + off);", "inst_trace": [], "at_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "by": "TaintedSizeDetector says:", "at_func": "do_io_rw"}, "warn_no": 12},
{"warn_data": {"at_line": 98, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "if (copy_from_user(&val, buf, 1))", "inst_trace": [], "at_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "by": "TaintedSizeDetector says:", "at_func": "do_io_rw"}, "warn_no": 13}]},
{"num_warnings": 3,
"context":[{"lineno": -1, "instr": "  %5 = alloca i64, align 8"}, {"lineno": 1183, "file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_rw(device_data, (char __user *)buf, count, ppos, true);"}, {"lineno": 1147, "file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_config_rw(vdev, buf, count, ppos, iswrite);"}],
"warnings":[{"warn_data": {"at_line": 1846, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "count -= ret;", "inst_trace": [{"instr_func": "vfio_pci_write", "instr_loc": -1, "instr": "  %5 = alloca i64, align 8"}, {"instr_func": "vfio_pci_write", "instr_loc": 1179, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "{"}, {"instr_func": "vfio_pci_write", "instr_loc": 1183, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_rw(device_data, (char __user *)buf, count, ppos, true);"}, {"instr_func": "vfio_pci_write", "instr_loc": 1183, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_rw(device_data, (char __user *)buf, count, ppos, true);"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1138, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "{"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1147, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_config_rw(vdev, buf, count, ppos, iswrite);"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1147, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_config_rw(vdev, buf, count, ppos, iswrite);"}, {"instr_func": "vfio_pci_config_rw", "instr_loc": 1834, "instr_file": "drivers/vfio/pci/vfio_pci_config.c", "instr": "{"}, {"instr_func": "vfio_pci_config_rw", "instr_loc": 1846, "instr_file": "drivers/vfio/pci/vfio_pci_config.c", "instr": "count -= ret;"}], "at_file": "drivers/vfio/pci/vfio_pci_config.c", "by": "IntegerOverflowDetector says:", "at_func": "vfio_pci_config_rw"}, "warn_no": 1},
{"warn_data": {"at_line": 1841, "warn_str": "Loop is bounded by a tainted value.", "at": "while (count) {", "inst_trace": [{"instr_func": "vfio_pci_write", "instr_loc": -1, "instr": "  %5 = alloca i64, align 8"}, {"instr_func": "vfio_pci_write", "instr_loc": 1179, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "{"}, {"instr_func": "vfio_pci_write", "instr_loc": 1183, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_rw(device_data, (char __user *)buf, count, ppos, true);"}, {"instr_func": "vfio_pci_write", "instr_loc": 1183, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_rw(device_data, (char __user *)buf, count, ppos, true);"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1138, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "{"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1147, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_config_rw(vdev, buf, count, ppos, iswrite);"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1147, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_config_rw(vdev, buf, count, ppos, iswrite);"}, {"instr_func": "vfio_pci_config_rw", "instr_loc": 1834, "instr_file": "drivers/vfio/pci/vfio_pci_config.c", "instr": "{"}, {"instr_func": "vfio_pci_config_rw", "instr_loc": 1841, "instr_file": "drivers/vfio/pci/vfio_pci_config.c", "instr": "while (count) {"}, {"instr_func": "vfio_pci_config_rw", "instr_loc": 1841, "instr_file": "drivers/vfio/pci/vfio_pci_config.c", "instr": "while (count) {"}], "at_file": "drivers/vfio/pci/vfio_pci_config.c", "by": "TaintedLoopBoundDetector says:", "at_func": "vfio_pci_config_rw"}, "warn_no": 2},
{"warn_data": {"at_line": 1843, "warn_str": "Loop is bounded by a tainted value.", "at": "if (ret < 0)", "inst_trace": [{"instr_func": "vfio_pci_write", "instr_loc": -1, "instr": "  %5 = alloca i64, align 8"}, {"instr_func": "vfio_pci_write", "instr_loc": 1179, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "{"}, {"instr_func": "vfio_pci_write", "instr_loc": 1183, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_rw(device_data, (char __user *)buf, count, ppos, true);"}, {"instr_func": "vfio_pci_write", "instr_loc": 1183, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_rw(device_data, (char __user *)buf, count, ppos, true);"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1138, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "{"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1147, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_config_rw(vdev, buf, count, ppos, iswrite);"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1147, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_config_rw(vdev, buf, count, ppos, iswrite);"}, {"instr_func": "vfio_pci_config_rw", "instr_loc": 1834, "instr_file": "drivers/vfio/pci/vfio_pci_config.c", "instr": "{"}, {"instr_func": "vfio_pci_config_rw", "instr_loc": 1842, "instr_file": "drivers/vfio/pci/vfio_pci_config.c", "instr": "ret = vfio_config_do_rw(vdev, buf, count, &pos, iswrite);"}, {"instr_func": "vfio_pci_config_rw", "instr_loc": 1842, "instr_file": "drivers/vfio/pci/vfio_pci_config.c", "instr": "ret = vfio_config_do_rw(vdev, buf, count, &pos, iswrite);"}, {"instr_func": "vfio_config_do_rw", "instr_loc": 1751, "instr_file": "drivers/vfio/pci/vfio_pci_config.c", "instr": "{"}, {"instr_func": "vfio_config_do_rw", "instr_loc": 1775, "instr_file": "drivers/vfio/pci/vfio_pci_config.c", "instr": "ret = count;"}, {"instr_func": "vfio_config_do_rw", "instr_loc": 1775, "instr_file": "drivers/vfio/pci/vfio_pci_config.c", "instr": "ret = count;"}, {"instr_func": "vfio_config_do_rw", "instr_loc": 1811, "instr_file": "drivers/vfio/pci/vfio_pci_config.c", "instr": "return ret;"}, {"instr_func": "vfio_config_do_rw", "instr_loc": 1811, "instr_file": "drivers/vfio/pci/vfio_pci_config.c", "instr": "return ret;"}, {"instr_func": "vfio_config_do_rw", "instr_loc": 1830, "instr_file": "drivers/vfio/pci/vfio_pci_config.c", "instr": "}"}, {"instr_func": "vfio_pci_config_rw", "instr_loc": 1842, "instr_file": "drivers/vfio/pci/vfio_pci_config.c", "instr": "ret = vfio_config_do_rw(vdev, buf, count, &pos, iswrite);"}, {"instr_func": "vfio_pci_config_rw", "instr_loc": 1842, "instr_file": "drivers/vfio/pci/vfio_pci_config.c", "instr": "ret = vfio_config_do_rw(vdev, buf, count, &pos, iswrite);"}, {"instr_func": "vfio_pci_config_rw", "instr_loc": 1842, "instr_file": "drivers/vfio/pci/vfio_pci_config.c", "instr": "ret = vfio_config_do_rw(vdev, buf, count, &pos, iswrite);"}, {"instr_func": "vfio_pci_config_rw", "instr_loc": 1843, "instr_file": "drivers/vfio/pci/vfio_pci_config.c", "instr": "if (ret < 0)"}, {"instr_func": "vfio_pci_config_rw", "instr_loc": 1843, "instr_file": "drivers/vfio/pci/vfio_pci_config.c", "instr": "if (ret < 0)"}], "at_file": "drivers/vfio/pci/vfio_pci_config.c", "by": "TaintedLoopBoundDetector says:", "at_func": "vfio_pci_config_rw"}, "warn_no": 3}]},
{"num_warnings": 13,
"context":[{"lineno": -1, "instr": "  %5 = alloca i64, align 8"}, {"lineno": 1183, "file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_rw(device_data, (char __user *)buf, count, ppos, true);"}, {"lineno": 1152, "file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_bar_rw(vdev, buf, count, ppos, false);"}, {"lineno": 203, "file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "done = do_io_rw(io, buf, pos, count, x_start, x_end, iswrite);"}],
"warnings":[{"warn_data": {"at_line": 123, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "count -= filled;", "inst_trace": [{"instr_func": "vfio_pci_write", "instr_loc": -1, "instr": "  %5 = alloca i64, align 8"}, {"instr_func": "vfio_pci_write", "instr_loc": 1179, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "{"}, {"instr_func": "vfio_pci_write", "instr_loc": 1183, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_rw(device_data, (char __user *)buf, count, ppos, true);"}, {"instr_func": "vfio_pci_write", "instr_loc": 1183, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_rw(device_data, (char __user *)buf, count, ppos, true);"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1138, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "{"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1152, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_bar_rw(vdev, buf, count, ppos, false);"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1152, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_bar_rw(vdev, buf, count, ppos, false);"}, {"instr_func": "vfio_pci_bar_rw", "instr_loc": 158, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "{"}, {"instr_func": "vfio_pci_bar_rw", "instr_loc": 203, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "done = do_io_rw(io, buf, pos, count, x_start, x_end, iswrite);"}, {"instr_func": "vfio_pci_bar_rw", "instr_loc": 203, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "done = do_io_rw(io, buf, pos, count, x_start, x_end, iswrite);"}, {"instr_func": "do_io_rw", "instr_loc": 49, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "{"}, {"instr_func": "do_io_rw", "instr_loc": 123, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "count -= filled;"}], "at_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "by": "IntegerOverflowDetector says:", "at_func": "do_io_rw"}, "warn_no": 1},
{"warn_data": {"at_line": 52, "warn_str": "Loop is bounded by a tainted value.", "at": "while (count) {", "inst_trace": [{"instr_func": "vfio_pci_write", "instr_loc": -1, "instr": "  %5 = alloca i64, align 8"}, {"instr_func": "vfio_pci_write", "instr_loc": 1179, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "{"}, {"instr_func": "vfio_pci_write", "instr_loc": 1183, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_rw(device_data, (char __user *)buf, count, ppos, true);"}, {"instr_func": "vfio_pci_write", "instr_loc": 1183, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_rw(device_data, (char __user *)buf, count, ppos, true);"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1138, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "{"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1152, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_bar_rw(vdev, buf, count, ppos, false);"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1152, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_bar_rw(vdev, buf, count, ppos, false);"}, {"instr_func": "vfio_pci_bar_rw", "instr_loc": 158, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "{"}, {"instr_func": "vfio_pci_bar_rw", "instr_loc": 203, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "done = do_io_rw(io, buf, pos, count, x_start, x_end, iswrite);"}, {"instr_func": "vfio_pci_bar_rw", "instr_loc": 203, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "done = do_io_rw(io, buf, pos, count, x_start, x_end, iswrite);"}, {"instr_func": "do_io_rw", "instr_loc": 49, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "{"}, {"instr_func": "do_io_rw", "instr_loc": 52, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "while (count) {"}, {"instr_func": "do_io_rw", "instr_loc": 52, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "while (count) {"}], "at_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "by": "TaintedLoopBoundDetector says:", "at_func": "do_io_rw"}, "warn_no": 2},
{"warn_data": {"at_line": 124, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "done += filled;", "inst_trace": [{"instr_func": "vfio_pci_write", "instr_loc": -1, "instr": "  %5 = alloca i64, align 8"}, {"instr_func": "vfio_pci_write", "instr_loc": 1179, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "{"}, {"instr_func": "vfio_pci_write", "instr_loc": 1183, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_rw(device_data, (char __user *)buf, count, ppos, true);"}, {"instr_func": "vfio_pci_write", "instr_loc": 1183, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_rw(device_data, (char __user *)buf, count, ppos, true);"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1138, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "{"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1152, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_bar_rw(vdev, buf, count, ppos, false);"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1152, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_bar_rw(vdev, buf, count, ppos, false);"}, {"instr_func": "vfio_pci_bar_rw", "instr_loc": 158, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "{"}, {"instr_func": "vfio_pci_bar_rw", "instr_loc": 203, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "done = do_io_rw(io, buf, pos, count, x_start, x_end, iswrite);"}, {"instr_func": "vfio_pci_bar_rw", "instr_loc": 203, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "done = do_io_rw(io, buf, pos, count, x_start, x_end, iswrite);"}, {"instr_func": "do_io_rw", "instr_loc": 49, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "{"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 124, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "done += filled;"}], "at_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "by": "IntegerOverflowDetector says:", "at_func": "do_io_rw"}, "warn_no": 3},
{"warn_data": {"at_line": 125, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "off += filled;", "inst_trace": [{"instr_func": "vfio_pci_write", "instr_loc": -1, "instr": "  %5 = alloca i64, align 8"}, {"instr_func": "vfio_pci_write", "instr_loc": 1179, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "{"}, {"instr_func": "vfio_pci_write", "instr_loc": 1183, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_rw(device_data, (char __user *)buf, count, ppos, true);"}, {"instr_func": "vfio_pci_write", "instr_loc": 1183, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_rw(device_data, (char __user *)buf, count, ppos, true);"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1138, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "{"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1152, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_bar_rw(vdev, buf, count, ppos, false);"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1152, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_bar_rw(vdev, buf, count, ppos, false);"}, {"instr_func": "vfio_pci_bar_rw", "instr_loc": 158, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "{"}, {"instr_func": "vfio_pci_bar_rw", "instr_loc": 203, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "done = do_io_rw(io, buf, pos, count, x_start, x_end, iswrite);"}, {"instr_func": "vfio_pci_bar_rw", "instr_loc": 203, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "done = do_io_rw(io, buf, pos, count, x_start, x_end, iswrite);"}, {"instr_func": "do_io_rw", "instr_loc": 49, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "{"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 125, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "off += filled;"}], "at_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "by": "IntegerOverflowDetector says:", "at_func": "do_io_rw"}, "warn_no": 4},
{"warn_data": {"at_line": 56, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "fillable = min(count, (size_t)(x_start - off));", "inst_trace": [{"instr_func": "vfio_pci_write", "instr_loc": -1, "instr": "  %5 = alloca i64, align 8"}, {"instr_func": "vfio_pci_write", "instr_loc": 1179, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "{"}, {"instr_func": "vfio_pci_write", "instr_loc": 1183, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_rw(device_data, (char __user *)buf, count, ppos, true);"}, {"instr_func": "vfio_pci_write", "instr_loc": 1183, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_rw(device_data, (char __user *)buf, count, ppos, true);"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1138, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "{"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1152, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_bar_rw(vdev, buf, count, ppos, false);"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1152, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_bar_rw(vdev, buf, count, ppos, false);"}, {"instr_func": "vfio_pci_bar_rw", "instr_loc": 158, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "{"}, {"instr_func": "vfio_pci_bar_rw", "instr_loc": 178, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "count = min(count, (size_t)(end - pos));"}, {"instr_func": "vfio_pci_bar_rw", "instr_loc": 178, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "count = min(count, (size_t)(end - pos));"}, {"instr_func": "vfio_pci_bar_rw", "instr_loc": 178, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "count = min(count, (size_t)(end - pos));"}, {"instr_func": "vfio_pci_bar_rw", "instr_loc": 178, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "count = min(count, (size_t)(end - pos));"}, {"instr_func": "vfio_pci_bar_rw", "instr_loc": 178, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "count = min(count, (size_t)(end - pos));"}, {"instr_func": "vfio_pci_bar_rw", "instr_loc": 178, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "count = min(count, (size_t)(end - pos));"}, {"instr_func": "vfio_pci_bar_rw", "instr_loc": 178, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "count = min(count, (size_t)(end - pos));"}, {"instr_func": "vfio_pci_bar_rw", "instr_loc": 203, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "done = do_io_rw(io, buf, pos, count, x_start, x_end, iswrite);"}, {"instr_func": "vfio_pci_bar_rw", "instr_loc": 203, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "done = do_io_rw(io, buf, pos, count, x_start, x_end, iswrite);"}, {"instr_func": "do_io_rw", "instr_loc": 49, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "{"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 125, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "off += filled;"}, {"instr_func": "do_io_rw", "instr_loc": 125, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "off += filled;"}, {"instr_func": "do_io_rw", "instr_loc": 125, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "off += filled;"}, {"instr_func": "do_io_rw", "instr_loc": 56, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "fillable = min(count, (size_t)(x_start - off));"}], "at_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "by": "IntegerOverflowDetector says:", "at_func": "do_io_rw"}, "warn_no": 5},
{"warn_data": {"at_line": 112, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "filled = min(count, (size_t)(x_end - off));", "inst_trace": [{"instr_func": "vfio_pci_write", "instr_loc": -1, "instr": "  %5 = alloca i64, align 8"}, {"instr_func": "vfio_pci_write", "instr_loc": 1179, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "{"}, {"instr_func": "vfio_pci_write", "instr_loc": 1183, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_rw(device_data, (char __user *)buf, count, ppos, true);"}, {"instr_func": "vfio_pci_write", "instr_loc": 1183, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_rw(device_data, (char __user *)buf, count, ppos, true);"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1138, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "{"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1152, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_bar_rw(vdev, buf, count, ppos, false);"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1152, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_bar_rw(vdev, buf, count, ppos, false);"}, {"instr_func": "vfio_pci_bar_rw", "instr_loc": 158, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "{"}, {"instr_func": "vfio_pci_bar_rw", "instr_loc": 203, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "done = do_io_rw(io, buf, pos, count, x_start, x_end, iswrite);"}, {"instr_func": "vfio_pci_bar_rw", "instr_loc": 203, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "done = do_io_rw(io, buf, pos, count, x_start, x_end, iswrite);"}, {"instr_func": "do_io_rw", "instr_loc": 49, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "{"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}, {"instr_func": "do_io_rw", "instr_loc": 125, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "off += filled;"}, {"instr_func": "do_io_rw", "instr_loc": 125, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "off += filled;"}, {"instr_func": "do_io_rw", "instr_loc": 125, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "off += filled;"}, {"instr_func": "do_io_rw", "instr_loc": 112, "instr_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "instr": "filled = min(count, (size_t)(x_end - off));"}], "at_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "by": "IntegerOverflowDetector says:", "at_func": "do_io_rw"}, "warn_no": 6},
{"warn_data": {"at_line": 71, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "val = vfio_ioread32(io + off);", "inst_trace": [], "at_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "by": "TaintedSizeDetector says:", "at_func": "do_io_rw"}, "warn_no": 7},
{"warn_data": {"at_line": 66, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "if (copy_from_user(&val, buf, 4))", "inst_trace": [], "at_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "by": "TaintedSizeDetector says:", "at_func": "do_io_rw"}, "warn_no": 8},
{"warn_data": {"at_line": 87, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "val = vfio_ioread16(io + off);", "inst_trace": [], "at_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "by": "TaintedSizeDetector says:", "at_func": "do_io_rw"}, "warn_no": 9},
{"warn_data": {"at_line": 82, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "if (copy_from_user(&val, buf, 2))", "inst_trace": [], "at_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "by": "TaintedSizeDetector says:", "at_func": "do_io_rw"}, "warn_no": 10},
{"warn_data": {"at_line": 118, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "if (copy_to_user(buf + i, &val, 1))", "inst_trace": [], "at_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "by": "TaintedSizeDetector says:", "at_func": "do_io_rw"}, "warn_no": 11},
{"warn_data": {"at_line": 103, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "val = vfio_ioread8(io + off);", "inst_trace": [], "at_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "by": "TaintedSizeDetector says:", "at_func": "do_io_rw"}, "warn_no": 12},
{"warn_data": {"at_line": 98, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "if (copy_from_user(&val, buf, 1))", "inst_trace": [], "at_file": "drivers/vfio/pci/vfio_pci_rdwr.c", "by": "TaintedSizeDetector says:", "at_func": "do_io_rw"}, "warn_no": 13}]},
{"num_warnings": 4,
"context":[{"lineno": -1, "instr": "  %5 = alloca i64, align 8"}, {"lineno": 1183, "file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_rw(device_data, (char __user *)buf, count, ppos, true);"}, {"lineno": 1147, "file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_config_rw(vdev, buf, count, ppos, iswrite);"}, {"lineno": 1842, "file": "drivers/vfio/pci/vfio_pci_config.c", "instr": "ret = vfio_config_do_rw(vdev, buf, count, &pos, iswrite);"}],
"warnings":[{"warn_data": {"at_line": 1760, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "*ppos + count > pdev->cfg_size)", "inst_trace": [{"instr_func": "vfio_pci_write", "instr_loc": -1, "instr": "  %5 = alloca i64, align 8"}, {"instr_func": "vfio_pci_write", "instr_loc": 1179, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "{"}, {"instr_func": "vfio_pci_write", "instr_loc": 1183, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_rw(device_data, (char __user *)buf, count, ppos, true);"}, {"instr_func": "vfio_pci_write", "instr_loc": 1183, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_rw(device_data, (char __user *)buf, count, ppos, true);"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1138, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "{"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1147, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_config_rw(vdev, buf, count, ppos, iswrite);"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1147, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_config_rw(vdev, buf, count, ppos, iswrite);"}, {"instr_func": "vfio_pci_config_rw", "instr_loc": 1834, "instr_file": "drivers/vfio/pci/vfio_pci_config.c", "instr": "{"}, {"instr_func": "vfio_pci_config_rw", "instr_loc": 1846, "instr_file": "drivers/vfio/pci/vfio_pci_config.c", "instr": "count -= ret;"}, {"instr_func": "vfio_pci_config_rw", "instr_loc": 1846, "instr_file": "drivers/vfio/pci/vfio_pci_config.c", "instr": "count -= ret;"}, {"instr_func": "vfio_pci_config_rw", "instr_loc": 1846, "instr_file": "drivers/vfio/pci/vfio_pci_config.c", "instr": "count -= ret;"}, {"instr_func": "vfio_pci_config_rw", "instr_loc": 1842, "instr_file": "drivers/vfio/pci/vfio_pci_config.c", "instr": "ret = vfio_config_do_rw(vdev, buf, count, &pos, iswrite);"}, {"instr_func": "vfio_pci_config_rw", "instr_loc": 1842, "instr_file": "drivers/vfio/pci/vfio_pci_config.c", "instr": "ret = vfio_config_do_rw(vdev, buf, count, &pos, iswrite);"}, {"instr_func": "vfio_config_do_rw", "instr_loc": 1751, "instr_file": "drivers/vfio/pci/vfio_pci_config.c", "instr": "{"}, {"instr_func": "vfio_config_do_rw", "instr_loc": 1760, "instr_file": "drivers/vfio/pci/vfio_pci_config.c", "instr": "*ppos + count > pdev->cfg_size)"}], "at_file": "drivers/vfio/pci/vfio_pci_config.c", "by": "IntegerOverflowDetector says:", "at_func": "vfio_config_do_rw"}, "warn_no": 1},
{"warn_data": {"at_line": 1794, "warn_str": "Trying to use a global variable without locking.", "at": "perm = &cap_perms[cap_id];", "inst_trace": [{"instr_func": "vfio_pci_write", "instr_loc": -1, "instr": "  %5 = alloca i64, align 8"}, {"instr_func": "vfio_pci_write", "instr_loc": 1183, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_rw(device_data, (char __user *)buf, count, ppos, true);"}, {"instr_func": "vfio_pci_rw", "instr_loc": 1147, "instr_file": "drivers/vfio/pci/vfio_pci.c", "instr": "return vfio_pci_config_rw(vdev, buf, count, ppos, iswrite);"}, {"instr_func": "vfio_pci_config_rw", "instr_loc": 1842, "instr_file": "drivers/vfio/pci/vfio_pci_config.c", "instr": "ret = vfio_config_do_rw(vdev, buf, count, &pos, iswrite);"}], "at_file": "drivers/vfio/pci/vfio_pci_config.c", "by": "GlobalVariableRaceDetector says:", "at_func": "vfio_config_do_rw"}, "warn_no": 2},
{"warn_data": {"at_line": 1825, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "if (copy_to_user(buf, &val, count))", "inst_trace": [], "at_file": "drivers/vfio/pci/vfio_pci_config.c", "by": "TaintedSizeDetector says:", "at_func": "vfio_config_do_rw"}, "warn_no": 3},
{"warn_data": {"at_line": 1813, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "if (copy_from_user(&val, buf, count))", "inst_trace": [], "at_file": "drivers/vfio/pci/vfio_pci_config.c", "by": "TaintedSizeDetector says:", "at_func": "vfio_config_do_rw"}, "warn_no": 4}]}]}