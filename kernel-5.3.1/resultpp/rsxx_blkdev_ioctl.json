{"all_contexts":[
{"num_warnings": 2,
"context":[{"lineno": -1, "instr": "  %5 = alloca i32, align 4"}, {"lineno": 65, "file": "drivers/block/rsxx/dev.c", "instr": "return rsxx_reg_access(card, (void __user *)arg, 0);"}],
"warnings":[{"warn_data": {"at_line": 666, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "{", "inst_trace": [], "at_file": "drivers/block/rsxx/cregs.c", "by": "TaintedSizeDetector says:", "at_func": "rsxx_reg_access"}, "warn_no": 1},
{"warn_data": {"at_line": 686, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "st = copy_to_user(ucmd->data, cmd.data, cmd.cnt);", "inst_trace": [], "at_file": "drivers/block/rsxx/cregs.c", "by": "TaintedSizeDetector says:", "at_func": "rsxx_reg_access"}, "warn_no": 2}]},
{"num_warnings": 2,
"context":[{"lineno": -1, "instr": "  %5 = alloca i32, align 4"}, {"lineno": 63, "file": "drivers/block/rsxx/dev.c", "instr": "return rsxx_reg_access(card, (void __user *)arg, 1);"}],
"warnings":[{"warn_data": {"at_line": 666, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "{", "inst_trace": [], "at_file": "drivers/block/rsxx/cregs.c", "by": "TaintedSizeDetector says:", "at_func": "rsxx_reg_access"}, "warn_no": 1},
{"warn_data": {"at_line": 686, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "st = copy_to_user(ucmd->data, cmd.data, cmd.cnt);", "inst_trace": [], "at_file": "drivers/block/rsxx/cregs.c", "by": "TaintedSizeDetector says:", "at_func": "rsxx_reg_access"}, "warn_no": 2}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %5 = alloca i32, align 4"}, {"lineno": 65, "file": "drivers/block/rsxx/dev.c", "instr": "return rsxx_reg_access(card, (void __user *)arg, 0);"}, {"lineno": 677, "file": "drivers/block/rsxx/cregs.c", "instr": "st = issue_reg_cmd(card, &cmd, read);"}, {"lineno": 659, "file": "drivers/block/rsxx/cregs.c", "instr": "return __issue_creg_rw(card, op, cmd->addr, cmd->cnt, cmd->data,"}, {"lineno": 388, "file": "drivers/block/rsxx/cregs.c", "instr": "st = creg_queue_cmd(card, op, addr, cnt8, buf, stream, creg_cmd_done_cb,"}],
"warnings":[{"warn_data": {"at_line": 168, "warn_str": "Trying to use a global variable without locking.", "at": "cmd = kmem_cache_alloc(creg_cmd_pool, GFP_KERNEL);", "inst_trace": [{"instr_func": "rsxx_blkdev_ioctl", "instr_loc": -1, "instr": "  %5 = alloca i32, align 4"}, {"instr_func": "rsxx_blkdev_ioctl", "instr_loc": 65, "instr_file": "drivers/block/rsxx/dev.c", "instr": "return rsxx_reg_access(card, (void __user *)arg, 0);"}, {"instr_func": "rsxx_reg_access", "instr_loc": 677, "instr_file": "drivers/block/rsxx/cregs.c", "instr": "st = issue_reg_cmd(card, &cmd, read);"}, {"instr_func": "issue_reg_cmd", "instr_loc": 659, "instr_file": "drivers/block/rsxx/cregs.c", "instr": "return __issue_creg_rw(card, op, cmd->addr, cmd->cnt, cmd->data,"}, {"instr_func": "__issue_creg_rw", "instr_loc": 388, "instr_file": "drivers/block/rsxx/cregs.c", "instr": "st = creg_queue_cmd(card, op, addr, cnt8, buf, stream, creg_cmd_done_cb,"}], "at_file": "drivers/block/rsxx/cregs.c", "by": "GlobalVariableRaceDetector says:", "at_func": "creg_queue_cmd"}, "warn_no": 1}]}]}