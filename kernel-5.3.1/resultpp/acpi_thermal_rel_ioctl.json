{"all_contexts":[
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %4 = alloca i64, align 8"}],
"warnings":[{"warn_data": {"at_line": 341, "warn_str": "Trying to use a global variable without locking.", "at": "ret = acpi_parse_art(acpi_thermal_rel_handle, &count,", "inst_trace": [{"instr_func": "acpi_thermal_rel_ioctl", "instr_loc": -1, "instr": "  %4 = alloca i64, align 8"}], "at_file": "drivers/thermal/intel/int340x_thermal/acpi_thermal_rel.c", "by": "GlobalVariableRaceDetector says:", "at_func": "acpi_thermal_rel_ioctl"}, "warn_no": 1}]},
{"num_warnings": 2,
"context":[{"lineno": -1, "instr": "  %4 = alloca i64, align 8"}, {"lineno": 350, "file": "drivers/thermal/intel/int340x_thermal/acpi_thermal_rel.c", "instr": "return fill_art(arg);"}],
"warnings":[{"warn_data": {"at_line": 243, "warn_str": "Trying to use a global variable without locking.", "at": "ret = acpi_parse_art(acpi_thermal_rel_handle, &count, &arts, false);", "inst_trace": [{"instr_func": "acpi_thermal_rel_ioctl", "instr_loc": -1, "instr": "  %4 = alloca i64, align 8"}, {"instr_func": "acpi_thermal_rel_ioctl", "instr_loc": 350, "instr_file": "drivers/thermal/intel/int340x_thermal/acpi_thermal_rel.c", "instr": "return fill_art(arg);"}], "at_file": "drivers/thermal/intel/int340x_thermal/acpi_thermal_rel.c", "by": "GlobalVariableRaceDetector says:", "at_func": "fill_art"}, "warn_no": 1},
{"warn_data": {"at_line": 262, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "if (copy_to_user(ubuf, art_user, art_len))", "inst_trace": [], "at_file": "drivers/thermal/intel/int340x_thermal/acpi_thermal_rel.c", "by": "TaintedSizeDetector says:", "at_func": "fill_art"}, "warn_no": 2}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %4 = alloca i64, align 8"}, {"lineno": 350, "file": "drivers/thermal/intel/int340x_thermal/acpi_thermal_rel.c", "instr": "return fill_art(arg);"}, {"lineno": 243, "file": "drivers/thermal/intel/int340x_thermal/acpi_thermal_rel.c", "instr": "ret = acpi_parse_art(acpi_thermal_rel_handle, &count, &arts, false);"}, {"lineno": 161, "file": "drivers/thermal/intel/int340x_thermal/acpi_thermal_rel.c", "instr": "if (!acpi_has_method(handle, \"_ART\"))"}, {"lineno": 542, "file": "drivers/acpi/utils.c", "instr": "return ACPI_SUCCESS(acpi_get_handle(handle, name, &tmp));"}],
"warnings":[{"warn_data": {"at_line": 85, "warn_str": "Trying to use a global variable without locking.", "at": "ACPI_CAST_PTR(acpi_handle, acpi_gbl_root_node);", "inst_trace": [{"instr_func": "acpi_thermal_rel_ioctl", "instr_loc": -1, "instr": "  %4 = alloca i64, align 8"}, {"instr_func": "acpi_thermal_rel_ioctl", "instr_loc": 350, "instr_file": "drivers/thermal/intel/int340x_thermal/acpi_thermal_rel.c", "instr": "return fill_art(arg);"}, {"instr_func": "fill_art", "instr_loc": 243, "instr_file": "drivers/thermal/intel/int340x_thermal/acpi_thermal_rel.c", "instr": "ret = acpi_parse_art(acpi_thermal_rel_handle, &count, &arts, false);"}, {"instr_func": "acpi_parse_art", "instr_loc": 161, "instr_file": "drivers/thermal/intel/int340x_thermal/acpi_thermal_rel.c", "instr": "if (!acpi_has_method(handle, \"_ART\"))"}, {"instr_func": "acpi_has_method", "instr_loc": 542, "instr_file": "drivers/acpi/utils.c", "instr": "return ACPI_SUCCESS(acpi_get_handle(handle, name, &tmp));"}], "at_file": "drivers/acpi/acpica/nsxfname.c", "by": "GlobalVariableRaceDetector says:", "at_func": "acpi_get_handle"}, "warn_no": 1}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %4 = alloca i64, align 8"}, {"lineno": 350, "file": "drivers/thermal/intel/int340x_thermal/acpi_thermal_rel.c", "instr": "return fill_art(arg);"}, {"lineno": 243, "file": "drivers/thermal/intel/int340x_thermal/acpi_thermal_rel.c", "instr": "ret = acpi_parse_art(acpi_thermal_rel_handle, &count, &arts, false);"}, {"lineno": 164, "file": "drivers/thermal/intel/int340x_thermal/acpi_thermal_rel.c", "instr": "status = acpi_evaluate_object(handle, \"_ART\", NULL, &buffer);"}],
"warnings":[{"warn_data": {"at_line": 210, "warn_str": "Trying to use a global variable without locking.", "at": "ACPI_DEBUG_PRINT((ACPI_DB_INFO,", "inst_trace": [{"instr_func": "acpi_thermal_rel_ioctl", "instr_loc": -1, "instr": "  %4 = alloca i64, align 8"}, {"instr_func": "acpi_thermal_rel_ioctl", "instr_loc": 350, "instr_file": "drivers/thermal/intel/int340x_thermal/acpi_thermal_rel.c", "instr": "return fill_art(arg);"}, {"instr_func": "fill_art", "instr_loc": 243, "instr_file": "drivers/thermal/intel/int340x_thermal/acpi_thermal_rel.c", "instr": "ret = acpi_parse_art(acpi_thermal_rel_handle, &count, &arts, false);"}, {"instr_func": "acpi_parse_art", "instr_loc": 164, "instr_file": "drivers/thermal/intel/int340x_thermal/acpi_thermal_rel.c", "instr": "status = acpi_evaluate_object(handle, \"_ART\", NULL, &buffer);"}], "at_file": "drivers/acpi/acpica/nsxfeval.c", "by": "GlobalVariableRaceDetector says:", "at_func": "acpi_evaluate_object"}, "warn_no": 1}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %4 = alloca i64, align 8"}, {"lineno": 350, "file": "drivers/thermal/intel/int340x_thermal/acpi_thermal_rel.c", "instr": "return fill_art(arg);"}, {"lineno": 243, "file": "drivers/thermal/intel/int340x_thermal/acpi_thermal_rel.c", "instr": "ret = acpi_parse_art(acpi_thermal_rel_handle, &count, &arts, false);"}, {"lineno": 164, "file": "drivers/thermal/intel/int340x_thermal/acpi_thermal_rel.c", "instr": "status = acpi_evaluate_object(handle, \"_ART\", NULL, &buffer);"}, {"lineno": 177, "file": "drivers/acpi/acpica/nsxfeval.c", "instr": "info = ACPI_ALLOCATE_ZEROED(sizeof(struct acpi_evaluate_info));"}, {"lineno": 57, "file": "./include/acpi/platform/aclinuxex.h", "instr": "  %29 = call i8* @kzalloc.667(i64 %12, i32 %28) #14, !dbg !117015"}],
"warnings":[{"warn_data": {"at_line": 553, "warn_str": "Trying to use a global variable without locking.", "at": "  %183 = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %182, !dbg !117218", "inst_trace": [{"instr_func": "acpi_thermal_rel_ioctl", "instr_loc": -1, "instr": "  %4 = alloca i64, align 8"}, {"instr_func": "acpi_thermal_rel_ioctl", "instr_loc": 350, "instr_file": "drivers/thermal/intel/int340x_thermal/acpi_thermal_rel.c", "instr": "return fill_art(arg);"}, {"instr_func": "fill_art", "instr_loc": 243, "instr_file": "drivers/thermal/intel/int340x_thermal/acpi_thermal_rel.c", "instr": "ret = acpi_parse_art(acpi_thermal_rel_handle, &count, &arts, false);"}, {"instr_func": "acpi_parse_art", "instr_loc": 164, "instr_file": "drivers/thermal/intel/int340x_thermal/acpi_thermal_rel.c", "instr": "status = acpi_evaluate_object(handle, \"_ART\", NULL, &buffer);"}, {"instr_func": "acpi_evaluate_object", "instr_loc": 177, "instr_file": "drivers/acpi/acpica/nsxfeval.c", "instr": "info = ACPI_ALLOCATE_ZEROED(sizeof(struct acpi_evaluate_info));"}, {"instr_func": "acpi_os_allocate_zeroed", "instr_loc": 57, "instr_file": "./include/acpi/platform/aclinuxex.h", "instr": "  %29 = call i8* @kzalloc.667(i64 %12, i32 %28) #14, !dbg !117015"}], "at_file": "./include/linux/slab.h", "by": "GlobalVariableRaceDetector says:", "at_func": "kzalloc.667"}, "warn_no": 1}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %4 = alloca i64, align 8"}, {"lineno": 350, "file": "drivers/thermal/intel/int340x_thermal/acpi_thermal_rel.c", "instr": "return fill_art(arg);"}, {"lineno": 243, "file": "drivers/thermal/intel/int340x_thermal/acpi_thermal_rel.c", "instr": "ret = acpi_parse_art(acpi_thermal_rel_handle, &count, &arts, false);"}, {"lineno": 177, "file": "drivers/thermal/intel/int340x_thermal/acpi_thermal_rel.c", "instr": "arts = kcalloc(*art_count, sizeof(struct art), GFP_KERNEL);"}, {"lineno": 687, "file": "./include/linux/slab.h", "instr": "  %11 = call i8* @kmalloc_array.6(i64 %7, i64 %8, i32 %10) #14, !dbg !117005"}],
"warnings":[{"warn_data": {"at_line": 553, "warn_str": "Trying to use a global variable without locking.", "at": "  %221 = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %220, !dbg !117239", "inst_trace": [{"instr_func": "acpi_thermal_rel_ioctl", "instr_loc": -1, "instr": "  %4 = alloca i64, align 8"}, {"instr_func": "acpi_thermal_rel_ioctl", "instr_loc": 350, "instr_file": "drivers/thermal/intel/int340x_thermal/acpi_thermal_rel.c", "instr": "return fill_art(arg);"}, {"instr_func": "fill_art", "instr_loc": 243, "instr_file": "drivers/thermal/intel/int340x_thermal/acpi_thermal_rel.c", "instr": "ret = acpi_parse_art(acpi_thermal_rel_handle, &count, &arts, false);"}, {"instr_func": "acpi_parse_art", "instr_loc": 177, "instr_file": "drivers/thermal/intel/int340x_thermal/acpi_thermal_rel.c", "instr": "arts = kcalloc(*art_count, sizeof(struct art), GFP_KERNEL);"}, {"instr_func": "kcalloc.5", "instr_loc": 687, "instr_file": "./include/linux/slab.h", "instr": "  %11 = call i8* @kmalloc_array.6(i64 %7, i64 %8, i32 %10) #14, !dbg !117005"}], "at_file": "./include/linux/slab.h", "by": "GlobalVariableRaceDetector says:", "at_func": "kmalloc_array.6"}, "warn_no": 1}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %4 = alloca i64, align 8"}, {"lineno": 350, "file": "drivers/thermal/intel/int340x_thermal/acpi_thermal_rel.c", "instr": "return fill_art(arg);"}, {"lineno": 243, "file": "drivers/thermal/intel/int340x_thermal/acpi_thermal_rel.c", "instr": "ret = acpi_parse_art(acpi_thermal_rel_handle, &count, &arts, false);"}, {"lineno": 205, "file": "drivers/thermal/intel/int340x_thermal/acpi_thermal_rel.c", "instr": "result = acpi_bus_get_device(art->target, &adev);"}, {"lineno": 601, "file": "drivers/acpi/scan.c", "instr": "return acpi_get_device_data(handle, device, NULL);"}],
"warnings":[{"warn_data": {"at_line": 592, "warn_str": "Trying to use a global variable without locking.", "at": "ACPI_DEBUG_PRINT((ACPI_DB_INFO, \"No context for object [%p]\\n\",", "inst_trace": [{"instr_func": "acpi_thermal_rel_ioctl", "instr_loc": -1, "instr": "  %4 = alloca i64, align 8"}, {"instr_func": "acpi_thermal_rel_ioctl", "instr_loc": 350, "instr_file": "drivers/thermal/intel/int340x_thermal/acpi_thermal_rel.c", "instr": "return fill_art(arg);"}, {"instr_func": "fill_art", "instr_loc": 243, "instr_file": "drivers/thermal/intel/int340x_thermal/acpi_thermal_rel.c", "instr": "ret = acpi_parse_art(acpi_thermal_rel_handle, &count, &arts, false);"}, {"instr_func": "acpi_parse_art", "instr_loc": 205, "instr_file": "drivers/thermal/intel/int340x_thermal/acpi_thermal_rel.c", "instr": "result = acpi_bus_get_device(art->target, &adev);"}, {"instr_func": "acpi_bus_get_device", "instr_loc": 601, "instr_file": "drivers/acpi/scan.c", "instr": "return acpi_get_device_data(handle, device, NULL);"}], "at_file": "drivers/acpi/scan.c", "by": "GlobalVariableRaceDetector says:", "at_func": "acpi_get_device_data"}, "warn_no": 1}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %4 = alloca i64, align 8"}, {"lineno": 350, "file": "drivers/thermal/intel/int340x_thermal/acpi_thermal_rel.c", "instr": "return fill_art(arg);"}, {"lineno": 243, "file": "drivers/thermal/intel/int340x_thermal/acpi_thermal_rel.c", "instr": "ret = acpi_parse_art(acpi_thermal_rel_handle, &count, &arts, false);"}, {"lineno": 189, "file": "drivers/thermal/intel/int340x_thermal/acpi_thermal_rel.c", "instr": "status = acpi_extract_package(&(p->package.elements[i + 1]),"}],
"warnings":[{"warn_data": {"at_line": 153, "warn_str": "Trying to use a global variable without locking.", "at": "ACPI_DEBUG_PRINT((ACPI_DB_INFO,", "inst_trace": [{"instr_func": "acpi_thermal_rel_ioctl", "instr_loc": -1, "instr": "  %4 = alloca i64, align 8"}, {"instr_func": "acpi_thermal_rel_ioctl", "instr_loc": 350, "instr_file": "drivers/thermal/intel/int340x_thermal/acpi_thermal_rel.c", "instr": "return fill_art(arg);"}, {"instr_func": "fill_art", "instr_loc": 243, "instr_file": "drivers/thermal/intel/int340x_thermal/acpi_thermal_rel.c", "instr": "ret = acpi_parse_art(acpi_thermal_rel_handle, &count, &arts, false);"}, {"instr_func": "acpi_parse_art", "instr_loc": 189, "instr_file": "drivers/thermal/intel/int340x_thermal/acpi_thermal_rel.c", "instr": "status = acpi_extract_package(&(p->package.elements[i + 1]),"}], "at_file": "drivers/acpi/utils.c", "by": "GlobalVariableRaceDetector says:", "at_func": "acpi_extract_package"}, "warn_no": 1}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %4 = alloca i64, align 8"}, {"lineno": 350, "file": "drivers/thermal/intel/int340x_thermal/acpi_thermal_rel.c", "instr": "return fill_art(arg);"}, {"lineno": 243, "file": "drivers/thermal/intel/int340x_thermal/acpi_thermal_rel.c", "instr": "ret = acpi_parse_art(acpi_thermal_rel_handle, &count, &arts, false);"}, {"lineno": 189, "file": "drivers/thermal/intel/int340x_thermal/acpi_thermal_rel.c", "instr": "status = acpi_extract_package(&(p->package.elements[i + 1]),"}, {"lineno": 166, "file": "drivers/acpi/utils.c", "instr": "buffer->pointer = ACPI_ALLOCATE_ZEROED(size_required);"}, {"lineno": 57, "file": "./include/acpi/platform/aclinuxex.h", "instr": "  %29 = call i8* @kzalloc.1521(i64 %12, i32 %28) #14, !dbg !117015"}],
"warnings":[{"warn_data": {"at_line": 553, "warn_str": "Trying to use a global variable without locking.", "at": "  %183 = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %182, !dbg !117218", "inst_trace": [{"instr_func": "acpi_thermal_rel_ioctl", "instr_loc": -1, "instr": "  %4 = alloca i64, align 8"}, {"instr_func": "acpi_thermal_rel_ioctl", "instr_loc": 350, "instr_file": "drivers/thermal/intel/int340x_thermal/acpi_thermal_rel.c", "instr": "return fill_art(arg);"}, {"instr_func": "fill_art", "instr_loc": 243, "instr_file": "drivers/thermal/intel/int340x_thermal/acpi_thermal_rel.c", "instr": "ret = acpi_parse_art(acpi_thermal_rel_handle, &count, &arts, false);"}, {"instr_func": "acpi_parse_art", "instr_loc": 189, "instr_file": "drivers/thermal/intel/int340x_thermal/acpi_thermal_rel.c", "instr": "status = acpi_extract_package(&(p->package.elements[i + 1]),"}, {"instr_func": "acpi_extract_package", "instr_loc": 166, "instr_file": "drivers/acpi/utils.c", "instr": "buffer->pointer = ACPI_ALLOCATE_ZEROED(size_required);"}, {"instr_func": "acpi_os_allocate_zeroed.1515", "instr_loc": 57, "instr_file": "./include/acpi/platform/aclinuxex.h", "instr": "  %29 = call i8* @kzalloc.1521(i64 %12, i32 %28) #14, !dbg !117015"}], "at_file": "./include/linux/slab.h", "by": "GlobalVariableRaceDetector says:", "at_func": "kzalloc.1521"}, "warn_no": 1}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %4 = alloca i64, align 8"}, {"lineno": 350, "file": "drivers/thermal/intel/int340x_thermal/acpi_thermal_rel.c", "instr": "return fill_art(arg);"}, {"lineno": 247, "file": "drivers/thermal/intel/int340x_thermal/acpi_thermal_rel.c", "instr": "art_user = kzalloc(art_len, GFP_KERNEL);"}],
"warnings":[{"warn_data": {"at_line": 553, "warn_str": "Trying to use a global variable without locking.", "at": "  %183 = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %182, !dbg !117218", "inst_trace": [{"instr_func": "acpi_thermal_rel_ioctl", "instr_loc": -1, "instr": "  %4 = alloca i64, align 8"}, {"instr_func": "acpi_thermal_rel_ioctl", "instr_loc": 350, "instr_file": "drivers/thermal/intel/int340x_thermal/acpi_thermal_rel.c", "instr": "return fill_art(arg);"}, {"instr_func": "fill_art", "instr_loc": 247, "instr_file": "drivers/thermal/intel/int340x_thermal/acpi_thermal_rel.c", "instr": "art_user = kzalloc(art_len, GFP_KERNEL);"}], "at_file": "./include/linux/slab.h", "by": "GlobalVariableRaceDetector says:", "at_func": "kzalloc.2"}, "warn_no": 1}]},
{"num_warnings": 2,
"context":[{"lineno": -1, "instr": "  %4 = alloca i64, align 8"}, {"lineno": 332, "file": "drivers/thermal/intel/int340x_thermal/acpi_thermal_rel.c", "instr": "return fill_trt(arg);"}],
"warnings":[{"warn_data": {"at_line": 279, "warn_str": "Trying to use a global variable without locking.", "at": "ret = acpi_parse_trt(acpi_thermal_rel_handle, &count, &trts, false);", "inst_trace": [{"instr_func": "acpi_thermal_rel_ioctl", "instr_loc": -1, "instr": "  %4 = alloca i64, align 8"}, {"instr_func": "acpi_thermal_rel_ioctl", "instr_loc": 332, "instr_file": "drivers/thermal/intel/int340x_thermal/acpi_thermal_rel.c", "instr": "return fill_trt(arg);"}], "at_file": "drivers/thermal/intel/int340x_thermal/acpi_thermal_rel.c", "by": "GlobalVariableRaceDetector says:", "at_func": "fill_trt"}, "warn_no": 1},
{"warn_data": {"at_line": 297, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "if (copy_to_user(ubuf, trt_user, trt_len))", "inst_trace": [], "at_file": "drivers/thermal/intel/int340x_thermal/acpi_thermal_rel.c", "by": "TaintedSizeDetector says:", "at_func": "fill_trt"}, "warn_no": 2}]}]}