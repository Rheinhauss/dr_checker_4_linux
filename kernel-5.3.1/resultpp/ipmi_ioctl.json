{"all_contexts":[
{"num_warnings": 22,
"context":[{"lineno": -1, "instr": "  %4 = alloca i8*, align 8"}],
"warnings":[{"warn_data": {"at_line": 381, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "struct ipmi_cmdspec_chans val;", "inst_trace": [], "at_file": "drivers/char/ipmi/ipmi_devintf.c", "by": "TaintedSizeDetector says:", "at_func": "ipmi_ioctl"}, "warn_no": 1},
{"warn_data": {"at_line": 599, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "int mode;", "inst_trace": [], "at_file": "drivers/char/ipmi/ipmi_devintf.c", "by": "TaintedSizeDetector says:", "at_func": "ipmi_ioctl"}, "warn_no": 2},
{"warn_data": {"at_line": 586, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "int mode;", "inst_trace": [], "at_file": "drivers/char/ipmi/ipmi_devintf.c", "by": "TaintedSizeDetector says:", "at_func": "ipmi_ioctl"}, "warn_no": 3},
{"warn_data": {"at_line": 568, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "struct ipmi_timing_parms parms;", "inst_trace": [], "at_file": "drivers/char/ipmi/ipmi_devintf.c", "by": "TaintedSizeDetector says:", "at_func": "ipmi_ioctl"}, "warn_no": 4},
{"warn_data": {"at_line": 551, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "struct ipmi_timing_parms parms;", "inst_trace": [], "at_file": "drivers/char/ipmi/ipmi_devintf.c", "by": "TaintedSizeDetector says:", "at_func": "ipmi_ioctl"}, "warn_no": 5},
{"warn_data": {"at_line": 531, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "struct ipmi_channel_lun_address_set val;", "inst_trace": [], "at_file": "drivers/char/ipmi/ipmi_devintf.c", "by": "TaintedSizeDetector says:", "at_func": "ipmi_ioctl"}, "warn_no": 6},
{"warn_data": {"at_line": 518, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "struct ipmi_channel_lun_address_set val;", "inst_trace": [], "at_file": "drivers/char/ipmi/ipmi_devintf.c", "by": "TaintedSizeDetector says:", "at_func": "ipmi_ioctl"}, "warn_no": 7},
{"warn_data": {"at_line": 542, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "if (copy_to_user(arg, &val, sizeof(val))) {", "inst_trace": [], "at_file": "drivers/char/ipmi/ipmi_devintf.c", "by": "TaintedSizeDetector says:", "at_func": "ipmi_ioctl"}, "warn_no": 8},
{"warn_data": {"at_line": 498, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "struct ipmi_channel_lun_address_set val;", "inst_trace": [], "at_file": "drivers/char/ipmi/ipmi_devintf.c", "by": "TaintedSizeDetector says:", "at_func": "ipmi_ioctl"}, "warn_no": 9},
{"warn_data": {"at_line": 485, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "struct ipmi_channel_lun_address_set val;", "inst_trace": [], "at_file": "drivers/char/ipmi/ipmi_devintf.c", "by": "TaintedSizeDetector says:", "at_func": "ipmi_ioctl"}, "warn_no": 10},
{"warn_data": {"at_line": 509, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "if (copy_to_user(arg, &val, sizeof(val))) {", "inst_trace": [], "at_file": "drivers/char/ipmi/ipmi_devintf.c", "by": "TaintedSizeDetector says:", "at_func": "ipmi_ioctl"}, "warn_no": 11},
{"warn_data": {"at_line": 474, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "val = rval;", "inst_trace": [], "at_file": "drivers/char/ipmi/ipmi_devintf.c", "by": "TaintedSizeDetector says:", "at_func": "ipmi_ioctl"}, "warn_no": 12},
{"warn_data": {"at_line": 454, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "unsigned int val;", "inst_trace": [], "at_file": "drivers/char/ipmi/ipmi_devintf.c", "by": "TaintedSizeDetector says:", "at_func": "ipmi_ioctl"}, "warn_no": 13},
{"warn_data": {"at_line": 423, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "unsigned int val;", "inst_trace": [], "at_file": "drivers/char/ipmi/ipmi_devintf.c", "by": "TaintedSizeDetector says:", "at_func": "ipmi_ioctl"}, "warn_no": 14},
{"warn_data": {"at_line": 443, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "val = rval;", "inst_trace": [], "at_file": "drivers/char/ipmi/ipmi_devintf.c", "by": "TaintedSizeDetector says:", "at_func": "ipmi_ioctl"}, "warn_no": 15},
{"warn_data": {"at_line": 409, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "int val;", "inst_trace": [], "at_file": "drivers/char/ipmi/ipmi_devintf.c", "by": "TaintedSizeDetector says:", "at_func": "ipmi_ioctl"}, "warn_no": 16},
{"warn_data": {"at_line": 395, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "struct ipmi_cmdspec_chans val;", "inst_trace": [], "at_file": "drivers/char/ipmi/ipmi_devintf.c", "by": "TaintedSizeDetector says:", "at_func": "ipmi_ioctl"}, "warn_no": 17},
{"warn_data": {"at_line": 353, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "struct ipmi_cmdspec val;", "inst_trace": [], "at_file": "drivers/char/ipmi/ipmi_devintf.c", "by": "TaintedSizeDetector says:", "at_func": "ipmi_ioctl"}, "warn_no": 18},
{"warn_data": {"at_line": 367, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "struct ipmi_cmdspec   val;", "inst_trace": [], "at_file": "drivers/char/ipmi/ipmi_devintf.c", "by": "TaintedSizeDetector says:", "at_func": "ipmi_ioctl"}, "warn_no": 19},
{"warn_data": {"at_line": 341, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "struct ipmi_recv      rsp;", "inst_trace": [], "at_file": "drivers/char/ipmi/ipmi_devintf.c", "by": "TaintedSizeDetector says:", "at_func": "ipmi_ioctl"}, "warn_no": 20},
{"warn_data": {"at_line": 324, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "struct ipmi_req_settime req;", "inst_trace": [], "at_file": "drivers/char/ipmi/ipmi_devintf.c", "by": "TaintedSizeDetector says:", "at_func": "ipmi_ioctl"}, "warn_no": 21},
{"warn_data": {"at_line": 304, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "struct ipmi_req req;", "inst_trace": [], "at_file": "drivers/char/ipmi/ipmi_devintf.c", "by": "TaintedSizeDetector says:", "at_func": "ipmi_ioctl"}, "warn_no": 22}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %4 = alloca i8*, align 8"}, {"lineno": 538, "file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "rv = ipmi_get_my_LUN(priv->user, val.channel, &val.value);"}],
"warnings":[{"warn_data": {"at_line": 1464, "warn_str": "Trying to read from a user pointer.", "at": "*address = user->intf->addrinfo[channel].lun;", "inst_trace": [{"instr_func": "ipmi_ioctl", "instr_loc": 531, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "struct ipmi_channel_lun_address_set val;"}, {"instr_func": "ipmi_ioctl", "instr_loc": 538, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "rv = ipmi_get_my_LUN(priv->user, val.channel, &val.value);"}, {"instr_func": "ipmi_ioctl", "instr_loc": 538, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "rv = ipmi_get_my_LUN(priv->user, val.channel, &val.value);"}, {"instr_func": "ipmi_get_my_LUN", "instr_loc": 1453, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "{"}, {"instr_func": "ipmi_get_my_LUN", "instr_loc": 1464, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "*address = user->intf->addrinfo[channel].lun;"}, {"instr_func": "ipmi_get_my_LUN", "instr_loc": 1464, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "*address = user->intf->addrinfo[channel].lun;"}, {"instr_func": "ipmi_get_my_LUN", "instr_loc": 1464, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "*address = user->intf->addrinfo[channel].lun;"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "TaintedPointerDereferenceChecker says:", "at_func": "ipmi_get_my_LUN"}, "warn_no": 1}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %4 = alloca i8*, align 8"}, {"lineno": 525, "file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "rv = ipmi_set_my_LUN(priv->user, val.channel, val.value);"}],
"warnings":[{"warn_data": {"at_line": 1442, "warn_str": "Trying to write to a user pointer.", "at": "user->intf->addrinfo[channel].lun = LUN & 0x3;", "inst_trace": [{"instr_func": "ipmi_ioctl", "instr_loc": 518, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "struct ipmi_channel_lun_address_set val;"}, {"instr_func": "ipmi_ioctl", "instr_loc": 525, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "rv = ipmi_set_my_LUN(priv->user, val.channel, val.value);"}, {"instr_func": "ipmi_ioctl", "instr_loc": 525, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "rv = ipmi_set_my_LUN(priv->user, val.channel, val.value);"}, {"instr_func": "ipmi_set_my_LUN", "instr_loc": 1431, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "{"}, {"instr_func": "ipmi_set_my_LUN", "instr_loc": 1442, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "user->intf->addrinfo[channel].lun = LUN & 0x3;"}, {"instr_func": "ipmi_set_my_LUN", "instr_loc": 1442, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "user->intf->addrinfo[channel].lun = LUN & 0x3;"}, {"instr_func": "ipmi_set_my_LUN", "instr_loc": 1442, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "user->intf->addrinfo[channel].lun = LUN & 0x3;"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "TaintedPointerDereferenceChecker says:", "at_func": "ipmi_set_my_LUN"}, "warn_no": 1}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %4 = alloca i8*, align 8"}, {"lineno": 505, "file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "rv = ipmi_get_my_address(priv->user, val.channel, &val.value);"}],
"warnings":[{"warn_data": {"at_line": 1420, "warn_str": "Trying to read from a user pointer.", "at": "*address = user->intf->addrinfo[channel].address;", "inst_trace": [{"instr_func": "ipmi_ioctl", "instr_loc": 498, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "struct ipmi_channel_lun_address_set val;"}, {"instr_func": "ipmi_ioctl", "instr_loc": 505, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "rv = ipmi_get_my_address(priv->user, val.channel, &val.value);"}, {"instr_func": "ipmi_ioctl", "instr_loc": 505, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "rv = ipmi_get_my_address(priv->user, val.channel, &val.value);"}, {"instr_func": "ipmi_get_my_address", "instr_loc": 1409, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "{"}, {"instr_func": "ipmi_get_my_address", "instr_loc": 1420, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "*address = user->intf->addrinfo[channel].address;"}, {"instr_func": "ipmi_get_my_address", "instr_loc": 1420, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "*address = user->intf->addrinfo[channel].address;"}, {"instr_func": "ipmi_get_my_address", "instr_loc": 1420, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "*address = user->intf->addrinfo[channel].address;"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "TaintedPointerDereferenceChecker says:", "at_func": "ipmi_get_my_address"}, "warn_no": 1}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %4 = alloca i8*, align 8"}, {"lineno": 492, "file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "return ipmi_set_my_address(priv->user, val.channel, val.value);"}],
"warnings":[{"warn_data": {"at_line": 1398, "warn_str": "Trying to write to a user pointer.", "at": "user->intf->addrinfo[channel].address = address;", "inst_trace": [{"instr_func": "ipmi_ioctl", "instr_loc": 485, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "struct ipmi_channel_lun_address_set val;"}, {"instr_func": "ipmi_ioctl", "instr_loc": 492, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "return ipmi_set_my_address(priv->user, val.channel, val.value);"}, {"instr_func": "ipmi_ioctl", "instr_loc": 492, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "return ipmi_set_my_address(priv->user, val.channel, val.value);"}, {"instr_func": "ipmi_set_my_address", "instr_loc": 1387, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "{"}, {"instr_func": "ipmi_set_my_address", "instr_loc": 1398, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "user->intf->addrinfo[channel].address = address;"}, {"instr_func": "ipmi_set_my_address", "instr_loc": 1398, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "user->intf->addrinfo[channel].address = address;"}, {"instr_func": "ipmi_set_my_address", "instr_loc": 1398, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "user->intf->addrinfo[channel].address = address;"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "TaintedPointerDereferenceChecker says:", "at_func": "ipmi_set_my_address"}, "warn_no": 1}]},
{"num_warnings": 3,
"context":[{"lineno": -1, "instr": "  %4 = alloca i8*, align 8"}, {"lineno": 416, "file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "rv = ipmi_set_gets_events(priv->user, val);"}, {"lineno": 1589, "file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "deliver_local_response(intf, msg);"}, {"lineno": 932, "file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "if (deliver_response(intf, msg))"}],
"warnings":[{"warn_data": {"at_line": 917, "warn_str": "Trying to read from a user pointer.", "at": "user->handler->ipmi_recv_hndl(msg, user->handler_data);", "inst_trace": [{"instr_func": "ipmi_ioctl", "instr_loc": 409, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "int val;"}, {"instr_func": "ipmi_ioctl", "instr_loc": 416, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "rv = ipmi_set_gets_events(priv->user, val);"}, {"instr_func": "ipmi_ioctl", "instr_loc": 416, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "rv = ipmi_set_gets_events(priv->user, val);"}, {"instr_func": "ipmi_ioctl", "instr_loc": 416, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "rv = ipmi_set_gets_events(priv->user, val);"}, {"instr_func": "ipmi_set_gets_events", "instr_loc": 1540, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "{"}, {"instr_func": "ipmi_set_gets_events", "instr_loc": 1540, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "{"}, {"instr_func": "acquire_ipmi_user", "instr_loc": 224, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "{"}, {"instr_func": "acquire_ipmi_user", "instr_loc": 224, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "{"}, {"instr_func": "acquire_ipmi_user", "instr_loc": 228, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "ruser = srcu_dereference(user->self, &user->release_barrier);"}, {"instr_func": "acquire_ipmi_user", "instr_loc": 228, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "ruser = srcu_dereference(user->self, &user->release_barrier);"}, {"instr_func": "acquire_ipmi_user", "instr_loc": 228, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "ruser = srcu_dereference(user->self, &user->release_barrier);"}, {"instr_func": "acquire_ipmi_user", "instr_loc": 228, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "ruser = srcu_dereference(user->self, &user->release_barrier);"}, {"instr_func": "acquire_ipmi_user", "instr_loc": 228, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "ruser = srcu_dereference(user->self, &user->release_barrier);"}, {"instr_func": "acquire_ipmi_user", "instr_loc": 228, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "ruser = srcu_dereference(user->self, &user->release_barrier);"}, {"instr_func": "acquire_ipmi_user", "instr_loc": 228, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "ruser = srcu_dereference(user->self, &user->release_barrier);"}, {"instr_func": "acquire_ipmi_user", "instr_loc": 228, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "ruser = srcu_dereference(user->self, &user->release_barrier);"}, {"instr_func": "acquire_ipmi_user", "instr_loc": 231, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "return ruser;"}, {"instr_func": "deliver_response", "instr_loc": 914, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "struct ipmi_user *user = acquire_ipmi_user(msg->user, &index);"}, {"instr_func": "deliver_response", "instr_loc": 914, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "struct ipmi_user *user = acquire_ipmi_user(msg->user, &index);"}, {"instr_func": "deliver_response", "instr_loc": 917, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "user->handler->ipmi_recv_hndl(msg, user->handler_data);"}, {"instr_func": "deliver_response", "instr_loc": 917, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "user->handler->ipmi_recv_hndl(msg, user->handler_data);"}, {"instr_func": "deliver_response", "instr_loc": 917, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "user->handler->ipmi_recv_hndl(msg, user->handler_data);"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "TaintedPointerDereferenceChecker says:", "at_func": "deliver_response"}, "warn_no": 1},
{"warn_data": {"at_line": 917, "warn_str": "Trying to read from a user pointer.", "at": "user->handler->ipmi_recv_hndl(msg, user->handler_data);", "inst_trace": [{"instr_func": "ipmi_ioctl", "instr_loc": 409, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "int val;"}, {"instr_func": "ipmi_ioctl", "instr_loc": 416, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "rv = ipmi_set_gets_events(priv->user, val);"}, {"instr_func": "ipmi_ioctl", "instr_loc": 416, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "rv = ipmi_set_gets_events(priv->user, val);"}, {"instr_func": "ipmi_ioctl", "instr_loc": 416, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "rv = ipmi_set_gets_events(priv->user, val);"}, {"instr_func": "ipmi_set_gets_events", "instr_loc": 1540, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "{"}, {"instr_func": "ipmi_set_gets_events", "instr_loc": 1540, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "{"}, {"instr_func": "acquire_ipmi_user", "instr_loc": 224, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "{"}, {"instr_func": "acquire_ipmi_user", "instr_loc": 224, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "{"}, {"instr_func": "acquire_ipmi_user", "instr_loc": 228, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "ruser = srcu_dereference(user->self, &user->release_barrier);"}, {"instr_func": "acquire_ipmi_user", "instr_loc": 228, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "ruser = srcu_dereference(user->self, &user->release_barrier);"}, {"instr_func": "acquire_ipmi_user", "instr_loc": 228, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "ruser = srcu_dereference(user->self, &user->release_barrier);"}, {"instr_func": "acquire_ipmi_user", "instr_loc": 228, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "ruser = srcu_dereference(user->self, &user->release_barrier);"}, {"instr_func": "acquire_ipmi_user", "instr_loc": 228, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "ruser = srcu_dereference(user->self, &user->release_barrier);"}, {"instr_func": "acquire_ipmi_user", "instr_loc": 228, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "ruser = srcu_dereference(user->self, &user->release_barrier);"}, {"instr_func": "acquire_ipmi_user", "instr_loc": 228, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "ruser = srcu_dereference(user->self, &user->release_barrier);"}, {"instr_func": "acquire_ipmi_user", "instr_loc": 228, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "ruser = srcu_dereference(user->self, &user->release_barrier);"}, {"instr_func": "acquire_ipmi_user", "instr_loc": 231, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "return ruser;"}, {"instr_func": "deliver_response", "instr_loc": 914, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "struct ipmi_user *user = acquire_ipmi_user(msg->user, &index);"}, {"instr_func": "deliver_response", "instr_loc": 914, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "struct ipmi_user *user = acquire_ipmi_user(msg->user, &index);"}, {"instr_func": "deliver_response", "instr_loc": 917, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "user->handler->ipmi_recv_hndl(msg, user->handler_data);"}, {"instr_func": "deliver_response", "instr_loc": 917, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "user->handler->ipmi_recv_hndl(msg, user->handler_data);"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "TaintedPointerDereferenceChecker says:", "at_func": "deliver_response"}, "warn_no": 2},
{"warn_data": {"at_line": 917, "warn_str": "Trying to read from a user pointer.", "at": "user->handler->ipmi_recv_hndl(msg, user->handler_data);", "inst_trace": [{"instr_func": "ipmi_ioctl", "instr_loc": 409, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "int val;"}, {"instr_func": "ipmi_ioctl", "instr_loc": 416, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "rv = ipmi_set_gets_events(priv->user, val);"}, {"instr_func": "ipmi_ioctl", "instr_loc": 416, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "rv = ipmi_set_gets_events(priv->user, val);"}, {"instr_func": "ipmi_ioctl", "instr_loc": 416, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "rv = ipmi_set_gets_events(priv->user, val);"}, {"instr_func": "ipmi_set_gets_events", "instr_loc": 1540, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "{"}, {"instr_func": "ipmi_set_gets_events", "instr_loc": 1540, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "{"}, {"instr_func": "acquire_ipmi_user", "instr_loc": 224, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "{"}, {"instr_func": "acquire_ipmi_user", "instr_loc": 224, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "{"}, {"instr_func": "acquire_ipmi_user", "instr_loc": 228, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "ruser = srcu_dereference(user->self, &user->release_barrier);"}, {"instr_func": "acquire_ipmi_user", "instr_loc": 228, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "ruser = srcu_dereference(user->self, &user->release_barrier);"}, {"instr_func": "acquire_ipmi_user", "instr_loc": 228, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "ruser = srcu_dereference(user->self, &user->release_barrier);"}, {"instr_func": "acquire_ipmi_user", "instr_loc": 228, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "ruser = srcu_dereference(user->self, &user->release_barrier);"}, {"instr_func": "acquire_ipmi_user", "instr_loc": 228, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "ruser = srcu_dereference(user->self, &user->release_barrier);"}, {"instr_func": "acquire_ipmi_user", "instr_loc": 228, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "ruser = srcu_dereference(user->self, &user->release_barrier);"}, {"instr_func": "acquire_ipmi_user", "instr_loc": 228, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "ruser = srcu_dereference(user->self, &user->release_barrier);"}, {"instr_func": "acquire_ipmi_user", "instr_loc": 228, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "ruser = srcu_dereference(user->self, &user->release_barrier);"}, {"instr_func": "acquire_ipmi_user", "instr_loc": 231, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "return ruser;"}, {"instr_func": "deliver_response", "instr_loc": 914, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "struct ipmi_user *user = acquire_ipmi_user(msg->user, &index);"}, {"instr_func": "deliver_response", "instr_loc": 914, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "struct ipmi_user *user = acquire_ipmi_user(msg->user, &index);"}, {"instr_func": "deliver_response", "instr_loc": 917, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "user->handler->ipmi_recv_hndl(msg, user->handler_data);"}, {"instr_func": "deliver_response", "instr_loc": 917, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "user->handler->ipmi_recv_hndl(msg, user->handler_data);"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "TaintedPointerDereferenceChecker says:", "at_func": "deliver_response"}, "warn_no": 3}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %4 = alloca i8*, align 8"}, {"lineno": 402, "file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "rv = ipmi_unregister_for_cmd(priv->user, val.netfn, val.cmd,"}],
"warnings":[{"warn_data": {"at_line": 1713, "warn_str": "Loop is bounded by a tainted value.", "at": "while (rcvrs) {", "inst_trace": [{"instr_func": "ipmi_ioctl", "instr_loc": 395, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "struct ipmi_cmdspec_chans val;"}, {"instr_func": "ipmi_unregister_for_cmd", "instr_loc": 1716, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "rcvrs = rcvr->next;"}, {"instr_func": "ipmi_unregister_for_cmd", "instr_loc": 1716, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "rcvrs = rcvr->next;"}, {"instr_func": "ipmi_unregister_for_cmd", "instr_loc": 1713, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "while (rcvrs) {"}, {"instr_func": "ipmi_unregister_for_cmd", "instr_loc": 1713, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "while (rcvrs) {"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "TaintedLoopBoundDetector says:", "at_func": "ipmi_unregister_for_cmd"}, "warn_no": 1}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %4 = alloca i8*, align 8"}, {"lineno": 388, "file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "rv = ipmi_register_for_cmd(priv->user, val.netfn, val.cmd,"}, {"lineno": 1659, "file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "if (!is_cmd_rcvr_exclusive(intf, netfn, cmd, chans)) {"}],
"warnings":[{"warn_data": {"at_line": 1627, "warn_str": "Loop is bounded by a tainted value.", "at": "if ((rcvr->netfn == netfn) && (rcvr->cmd == cmd)", "inst_trace": [{"instr_func": "ipmi_ioctl", "instr_loc": 381, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "struct ipmi_cmdspec_chans val;"}, {"instr_func": "ipmi_ioctl", "instr_loc": 389, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "val.chans);"}, {"instr_func": "ipmi_ioctl", "instr_loc": 388, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "rv = ipmi_register_for_cmd(priv->user, val.netfn, val.cmd,"}, {"instr_func": "ipmi_register_for_cmd", "instr_loc": 1638, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "{"}, {"instr_func": "ipmi_register_for_cmd", "instr_loc": 1659, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "if (!is_cmd_rcvr_exclusive(intf, netfn, cmd, chans)) {"}, {"instr_func": "ipmi_register_for_cmd", "instr_loc": 1659, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "if (!is_cmd_rcvr_exclusive(intf, netfn, cmd, chans)) {"}, {"instr_func": "is_cmd_rcvr_exclusive", "instr_loc": 1623, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "{"}, {"instr_func": "is_cmd_rcvr_exclusive", "instr_loc": 1628, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "&& (rcvr->chans & chans))"}, {"instr_func": "is_cmd_rcvr_exclusive", "instr_loc": 1628, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "&& (rcvr->chans & chans))"}, {"instr_func": "is_cmd_rcvr_exclusive", "instr_loc": 1628, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "&& (rcvr->chans & chans))"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "TaintedLoopBoundDetector says:", "at_func": "is_cmd_rcvr_exclusive"}, "warn_no": 1}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %4 = alloca i8*, align 8"}, {"lineno": 360, "file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "rv = ipmi_register_for_cmd(priv->user, val.netfn, val.cmd,"}, {"lineno": 1659, "file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "if (!is_cmd_rcvr_exclusive(intf, netfn, cmd, chans)) {"}],
"warnings":[{"warn_data": {"at_line": 1627, "warn_str": "Loop is bounded by a tainted value.", "at": "if ((rcvr->netfn == netfn) && (rcvr->cmd == cmd)", "inst_trace": [{"instr_func": "ipmi_ioctl", "instr_loc": 381, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "struct ipmi_cmdspec_chans val;"}, {"instr_func": "ipmi_ioctl", "instr_loc": 389, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "val.chans);"}, {"instr_func": "ipmi_ioctl", "instr_loc": 388, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "rv = ipmi_register_for_cmd(priv->user, val.netfn, val.cmd,"}, {"instr_func": "ipmi_register_for_cmd", "instr_loc": 1638, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "{"}, {"instr_func": "ipmi_register_for_cmd", "instr_loc": 1654, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "rcvr->chans = chans;"}, {"instr_func": "ipmi_register_for_cmd", "instr_loc": 1654, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "rcvr->chans = chans;"}, {"instr_func": "is_cmd_rcvr_exclusive", "instr_loc": 1628, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "&& (rcvr->chans & chans))"}, {"instr_func": "is_cmd_rcvr_exclusive", "instr_loc": 1628, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "&& (rcvr->chans & chans))"}, {"instr_func": "is_cmd_rcvr_exclusive", "instr_loc": 1628, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "&& (rcvr->chans & chans))"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "TaintedLoopBoundDetector says:", "at_func": "is_cmd_rcvr_exclusive"}, "warn_no": 1}]},
{"num_warnings": 2,
"context":[{"lineno": -1, "instr": "  %4 = alloca i8*, align 8"}, {"lineno": 346, "file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "rv = handle_recv(priv, cmd == IPMICTL_RECEIVE_MSG_TRUNC,"}],
"warnings":[{"warn_data": {"at_line": 237, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "if (copy_to_user(rsp->addr, &msg->addr, addr_len)) {", "inst_trace": [], "at_file": "drivers/char/ipmi/ipmi_devintf.c", "by": "TaintedSizeDetector says:", "at_func": "handle_recv"}, "warn_no": 1},
{"warn_data": {"at_line": 257, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "if (copy_to_user(rsp->msg.data,", "inst_trace": [], "at_file": "drivers/char/ipmi/ipmi_devintf.c", "by": "TaintedSizeDetector says:", "at_func": "handle_recv"}, "warn_no": 2}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %4 = alloca i8*, align 8"}, {"lineno": 346, "file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "rv = handle_recv(priv, cmd == IPMICTL_RECEIVE_MSG_TRUNC,"}, {"lineno": 268, "file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "rv = copyout(rsp, to);"}],
"warnings":[{"warn_data": {"at_line": 288, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "{", "inst_trace": [], "at_file": "drivers/char/ipmi/ipmi_devintf.c", "by": "TaintedSizeDetector says:", "at_func": "copyout_recv"}, "warn_no": 1}]},
{"num_warnings": 2,
"context":[{"lineno": -1, "instr": "  %4 = alloca i8*, align 8"}, {"lineno": 331, "file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "rv = handle_send_req(priv->user,"}],
"warnings":[{"warn_data": {"at_line": 152, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "if (copy_from_user(&addr, req->addr, req->addr_len))", "inst_trace": [], "at_file": "drivers/char/ipmi/ipmi_devintf.c", "by": "TaintedSizeDetector says:", "at_func": "handle_send_req"}, "warn_no": 1},
{"warn_data": {"at_line": 175, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "if (copy_from_user(msg.data,", "inst_trace": [], "at_file": "drivers/char/ipmi/ipmi_devintf.c", "by": "TaintedSizeDetector says:", "at_func": "handle_send_req"}, "warn_no": 2}]},
{"num_warnings": 2,
"context":[{"lineno": -1, "instr": "  %4 = alloca i8*, align 8"}, {"lineno": 331, "file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "rv = handle_send_req(priv->user,"}, {"lineno": 185, "file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "rv = ipmi_request_settime(user,"}, {"lineno": 2309, "file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "rv = check_addr(user->intf, addr, &saddr, &lun);"}],
"warnings":[{"warn_data": {"at_line": 2285, "warn_str": "Trying to read from a user pointer.", "at": "*lun = intf->addrinfo[addr->channel].lun;", "inst_trace": [{"instr_func": "handle_send_req", "instr_loc": 152, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "if (copy_from_user(&addr, req->addr, req->addr_len))"}, {"instr_func": "check_addr", "instr_loc": 2285, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "*lun = intf->addrinfo[addr->channel].lun;"}, {"instr_func": "check_addr", "instr_loc": 2285, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "*lun = intf->addrinfo[addr->channel].lun;"}, {"instr_func": "check_addr", "instr_loc": 2285, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "*lun = intf->addrinfo[addr->channel].lun;"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "TaintedPointerDereferenceChecker says:", "at_func": "check_addr"}, "warn_no": 1},
{"warn_data": {"at_line": 2286, "warn_str": "Trying to read from a user pointer.", "at": "*saddr = intf->addrinfo[addr->channel].address;", "inst_trace": [{"instr_func": "handle_send_req", "instr_loc": 152, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "if (copy_from_user(&addr, req->addr, req->addr_len))"}, {"instr_func": "check_addr", "instr_loc": 2286, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "*saddr = intf->addrinfo[addr->channel].address;"}, {"instr_func": "check_addr", "instr_loc": 2286, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "*saddr = intf->addrinfo[addr->channel].address;"}, {"instr_func": "check_addr", "instr_loc": 2286, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "*saddr = intf->addrinfo[addr->channel].address;"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "TaintedPointerDereferenceChecker says:", "at_func": "check_addr"}, "warn_no": 2}]},
{"num_warnings": 3,
"context":[{"lineno": -1, "instr": "  %4 = alloca i8*, align 8"}, {"lineno": 331, "file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "rv = handle_send_req(priv->user,"}, {"lineno": 185, "file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "rv = ipmi_request_settime(user,"}, {"lineno": 2311, "file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "rv = i_ipmi_request(user,"}, {"lineno": 2254, "file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "rv = i_ipmi_req_lan(intf, addr, msgid, msg, smi_msg, recv_msg,"}],
"warnings":[{"warn_data": {"at_line": 2088, "warn_str": "Trying to read from a user pointer.", "at": "if ((chans[addr->channel].medium", "inst_trace": [{"instr_func": "handle_send_req", "instr_loc": 152, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "if (copy_from_user(&addr, req->addr, req->addr_len))"}, {"instr_func": "i_ipmi_req_lan", "instr_loc": 2088, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "if ((chans[addr->channel].medium"}, {"instr_func": "i_ipmi_req_lan", "instr_loc": 2088, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "if ((chans[addr->channel].medium"}, {"instr_func": "i_ipmi_req_lan", "instr_loc": 2088, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "if ((chans[addr->channel].medium"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "TaintedPointerDereferenceChecker says:", "at_func": "i_ipmi_req_lan"}, "warn_no": 1},
{"warn_data": {"at_line": 2090, "warn_str": "Trying to read from a user pointer.", "at": "&& (chans[addr->channel].medium", "inst_trace": [{"instr_func": "handle_send_req", "instr_loc": 152, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "if (copy_from_user(&addr, req->addr, req->addr_len))"}, {"instr_func": "i_ipmi_req_lan", "instr_loc": 2090, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "&& (chans[addr->channel].medium"}, {"instr_func": "i_ipmi_req_lan", "instr_loc": 2090, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "&& (chans[addr->channel].medium"}, {"instr_func": "i_ipmi_req_lan", "instr_loc": 2090, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "&& (chans[addr->channel].medium"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "TaintedPointerDereferenceChecker says:", "at_func": "i_ipmi_req_lan"}, "warn_no": 2},
{"warn_data": {"at_line": 2097, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "if ((msg->data_len + 12) > IPMI_MAX_MSG_LENGTH) {", "inst_trace": [{"instr_func": "ipmi_ioctl", "instr_loc": 324, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "struct ipmi_req_settime req;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "i_ipmi_req_lan", "instr_loc": 2097, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "if ((msg->data_len + 12) > IPMI_MAX_MSG_LENGTH) {"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "IntegerOverflowDetector says:", "at_func": "i_ipmi_req_lan"}, "warn_no": 3}]},
{"num_warnings": 3,
"context":[{"lineno": -1, "instr": "  %4 = alloca i8*, align 8"}, {"lineno": 331, "file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "rv = handle_send_req(priv->user,"}, {"lineno": 185, "file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "rv = ipmi_request_settime(user,"}, {"lineno": 2311, "file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "rv = i_ipmi_request(user,"}, {"lineno": 2250, "file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "rv = i_ipmi_req_ipmb(intf, addr, msgid, msg, smi_msg, recv_msg,"}],
"warnings":[{"warn_data": {"at_line": 1949, "warn_str": "Trying to read from a user pointer.", "at": "if (chans[addr->channel].medium != IPMI_CHANNEL_MEDIUM_IPMB) {", "inst_trace": [{"instr_func": "handle_send_req", "instr_loc": 152, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "if (copy_from_user(&addr, req->addr, req->addr_len))"}, {"instr_func": "i_ipmi_req_ipmb", "instr_loc": 1949, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "if (chans[addr->channel].medium != IPMI_CHANNEL_MEDIUM_IPMB) {"}, {"instr_func": "i_ipmi_req_ipmb", "instr_loc": 1949, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "if (chans[addr->channel].medium != IPMI_CHANNEL_MEDIUM_IPMB) {"}, {"instr_func": "i_ipmi_req_ipmb", "instr_loc": 1949, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "if (chans[addr->channel].medium != IPMI_CHANNEL_MEDIUM_IPMB) {"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "TaintedPointerDereferenceChecker says:", "at_func": "i_ipmi_req_ipmb"}, "warn_no": 1},
{"warn_data": {"at_line": 1969, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "if ((msg->data_len + 10 + broadcast) > IPMI_MAX_MSG_LENGTH) {", "inst_trace": [{"instr_func": "ipmi_ioctl", "instr_loc": 324, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "struct ipmi_req_settime req;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "i_ipmi_req_ipmb", "instr_loc": 1969, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "if ((msg->data_len + 10 + broadcast) > IPMI_MAX_MSG_LENGTH) {"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "IntegerOverflowDetector says:", "at_func": "i_ipmi_req_ipmb"}, "warn_no": 2},
{"warn_data": {"at_line": 1969, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "if ((msg->data_len + 10 + broadcast) > IPMI_MAX_MSG_LENGTH) {", "inst_trace": [{"instr_func": "ipmi_ioctl", "instr_loc": 324, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "struct ipmi_req_settime req;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "i_ipmi_req_ipmb", "instr_loc": 1969, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "if ((msg->data_len + 10 + broadcast) > IPMI_MAX_MSG_LENGTH) {"}, {"instr_func": "i_ipmi_req_ipmb", "instr_loc": 1969, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "if ((msg->data_len + 10 + broadcast) > IPMI_MAX_MSG_LENGTH) {"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "IntegerOverflowDetector says:", "at_func": "i_ipmi_req_ipmb"}, "warn_no": 3}]},
{"num_warnings": 4,
"context":[{"lineno": -1, "instr": "  %4 = alloca i8*, align 8"}, {"lineno": 331, "file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "rv = handle_send_req(priv->user,"}, {"lineno": 185, "file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "rv = ipmi_request_settime(user,"}, {"lineno": 2311, "file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "rv = i_ipmi_request(user,"}, {"lineno": 2254, "file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "rv = i_ipmi_req_lan(intf, addr, msgid, msg, smi_msg, recv_msg,"}, {"lineno": 2155, "file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "format_lan_msg(smi_msg, msg, lan_addr,"}],
"warnings":[{"warn_data": {"at_line": 1799, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "smi_msg->data_size = msg->data_len + 10;", "inst_trace": [{"instr_func": "ipmi_ioctl", "instr_loc": 324, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "struct ipmi_req_settime req;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "format_lan_msg", "instr_loc": 1799, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 10;"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "IntegerOverflowDetector says:", "at_func": "format_lan_msg"}, "warn_no": 1},
{"warn_data": {"at_line": 1803, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "= ipmb_checksum(&smi_msg->data[7], smi_msg->data_size - 7);", "inst_trace": [{"instr_func": "ipmi_ioctl", "instr_loc": 324, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "struct ipmi_req_settime req;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "format_lan_msg", "instr_loc": 1799, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 10;"}, {"instr_func": "format_lan_msg", "instr_loc": 1799, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 10;"}, {"instr_func": "format_lan_msg", "instr_loc": 1799, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 10;"}, {"instr_func": "format_lan_msg", "instr_loc": 1803, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "= ipmb_checksum(&smi_msg->data[7], smi_msg->data_size - 7);"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "IntegerOverflowDetector says:", "at_func": "format_lan_msg"}, "warn_no": 2},
{"warn_data": {"at_line": 1803, "warn_str": "Trying to write to a user pointer.", "at": "= ipmb_checksum(&smi_msg->data[7], smi_msg->data_size - 7);", "inst_trace": [{"instr_func": "ipmi_ioctl", "instr_loc": 324, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "struct ipmi_req_settime req;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "format_lan_msg", "instr_loc": 1799, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 10;"}, {"instr_func": "format_lan_msg", "instr_loc": 1799, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 10;"}, {"instr_func": "format_lan_msg", "instr_loc": 1799, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 10;"}, {"instr_func": "format_lan_msg", "instr_loc": 1802, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data[smi_msg->data_size]"}, {"instr_func": "format_lan_msg", "instr_loc": 1802, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data[smi_msg->data_size]"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "TaintedPointerDereferenceChecker says:", "at_func": "format_lan_msg"}, "warn_no": 3},
{"warn_data": {"at_line": 1809, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "smi_msg->data_size += 1;", "inst_trace": [{"instr_func": "ipmi_ioctl", "instr_loc": 324, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "struct ipmi_req_settime req;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "format_lan_msg", "instr_loc": 1799, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 10;"}, {"instr_func": "format_lan_msg", "instr_loc": 1799, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 10;"}, {"instr_func": "format_lan_msg", "instr_loc": 1799, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 10;"}, {"instr_func": "format_lan_msg", "instr_loc": 1809, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size += 1;"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "IntegerOverflowDetector says:", "at_func": "format_lan_msg"}, "warn_no": 4}]},
{"num_warnings": 4,
"context":[{"lineno": -1, "instr": "  %4 = alloca i8*, align 8"}, {"lineno": 331, "file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "rv = handle_send_req(priv->user,"}, {"lineno": 185, "file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "rv = ipmi_request_settime(user,"}, {"lineno": 2311, "file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "rv = i_ipmi_request(user,"}, {"lineno": 2254, "file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "rv = i_ipmi_req_lan(intf, addr, msgid, msg, smi_msg, recv_msg,"}, {"lineno": 2116, "file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "format_lan_msg(smi_msg, msg, lan_addr, msgid,"}],
"warnings":[{"warn_data": {"at_line": 1799, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "smi_msg->data_size = msg->data_len + 10;", "inst_trace": [{"instr_func": "ipmi_ioctl", "instr_loc": 324, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "struct ipmi_req_settime req;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "format_lan_msg", "instr_loc": 1799, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 10;"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "IntegerOverflowDetector says:", "at_func": "format_lan_msg"}, "warn_no": 1},
{"warn_data": {"at_line": 1803, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "= ipmb_checksum(&smi_msg->data[7], smi_msg->data_size - 7);", "inst_trace": [{"instr_func": "ipmi_ioctl", "instr_loc": 324, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "struct ipmi_req_settime req;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "format_lan_msg", "instr_loc": 1799, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 10;"}, {"instr_func": "format_lan_msg", "instr_loc": 1799, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 10;"}, {"instr_func": "format_lan_msg", "instr_loc": 1799, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 10;"}, {"instr_func": "format_lan_msg", "instr_loc": 1803, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "= ipmb_checksum(&smi_msg->data[7], smi_msg->data_size - 7);"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "IntegerOverflowDetector says:", "at_func": "format_lan_msg"}, "warn_no": 2},
{"warn_data": {"at_line": 1803, "warn_str": "Trying to write to a user pointer.", "at": "= ipmb_checksum(&smi_msg->data[7], smi_msg->data_size - 7);", "inst_trace": [{"instr_func": "ipmi_ioctl", "instr_loc": 324, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "struct ipmi_req_settime req;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "format_lan_msg", "instr_loc": 1799, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 10;"}, {"instr_func": "format_lan_msg", "instr_loc": 1799, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 10;"}, {"instr_func": "format_lan_msg", "instr_loc": 1799, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 10;"}, {"instr_func": "format_lan_msg", "instr_loc": 1802, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data[smi_msg->data_size]"}, {"instr_func": "format_lan_msg", "instr_loc": 1802, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data[smi_msg->data_size]"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "TaintedPointerDereferenceChecker says:", "at_func": "format_lan_msg"}, "warn_no": 3},
{"warn_data": {"at_line": 1809, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "smi_msg->data_size += 1;", "inst_trace": [{"instr_func": "ipmi_ioctl", "instr_loc": 324, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "struct ipmi_req_settime req;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "format_lan_msg", "instr_loc": 1799, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 10;"}, {"instr_func": "format_lan_msg", "instr_loc": 1799, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 10;"}, {"instr_func": "format_lan_msg", "instr_loc": 1799, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 10;"}, {"instr_func": "format_lan_msg", "instr_loc": 1809, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size += 1;"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "IntegerOverflowDetector says:", "at_func": "format_lan_msg"}, "warn_no": 4}]},
{"num_warnings": 2,
"context":[{"lineno": -1, "instr": "  %4 = alloca i8*, align 8"}, {"lineno": 331, "file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "rv = handle_send_req(priv->user,"}, {"lineno": 185, "file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "rv = ipmi_request_settime(user,"}, {"lineno": 2311, "file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "rv = i_ipmi_request(user,"}, {"lineno": 2247, "file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "rv = i_ipmi_req_sysintf(intf, addr, msgid, msg, smi_msg,"}],
"warnings":[{"warn_data": {"at_line": 1907, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "if (msg->data_len + 2 > IPMI_MAX_MSG_LENGTH) {", "inst_trace": [{"instr_func": "ipmi_ioctl", "instr_loc": 324, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "struct ipmi_req_settime req;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "i_ipmi_req_sysintf", "instr_loc": 1907, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "if (msg->data_len + 2 > IPMI_MAX_MSG_LENGTH) {"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "IntegerOverflowDetector says:", "at_func": "i_ipmi_req_sysintf"}, "warn_no": 1},
{"warn_data": {"at_line": 1918, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "smi_msg->data_size = msg->data_len + 2;", "inst_trace": [{"instr_func": "ipmi_ioctl", "instr_loc": 324, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "struct ipmi_req_settime req;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "i_ipmi_req_sysintf", "instr_loc": 1918, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 2;"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "IntegerOverflowDetector says:", "at_func": "i_ipmi_req_sysintf"}, "warn_no": 2}]},
{"num_warnings": 5,
"context":[{"lineno": -1, "instr": "  %4 = alloca i8*, align 8"}, {"lineno": 331, "file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "rv = handle_send_req(priv->user,"}, {"lineno": 185, "file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "rv = ipmi_request_settime(user,"}, {"lineno": 2311, "file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "rv = i_ipmi_request(user,"}, {"lineno": 2250, "file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "rv = i_ipmi_req_ipmb(intf, addr, msgid, msg, smi_msg, recv_msg,"}, {"lineno": 2036, "file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "format_ipmb_msg(smi_msg, msg, ipmb_addr,"}],
"warnings":[{"warn_data": {"at_line": 1762, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "smi_msg->data_size = msg->data_len + 9;", "inst_trace": [{"instr_func": "ipmi_ioctl", "instr_loc": 324, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "struct ipmi_req_settime req;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "format_ipmb_msg", "instr_loc": 1762, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 9;"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "IntegerOverflowDetector says:", "at_func": "format_ipmb_msg"}, "warn_no": 1},
{"warn_data": {"at_line": 1766, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "= ipmb_checksum(&smi_msg->data[i + 6], smi_msg->data_size - 6);", "inst_trace": [{"instr_func": "ipmi_ioctl", "instr_loc": 324, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "struct ipmi_req_settime req;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "format_ipmb_msg", "instr_loc": 1762, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 9;"}, {"instr_func": "format_ipmb_msg", "instr_loc": 1762, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 9;"}, {"instr_func": "format_ipmb_msg", "instr_loc": 1762, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 9;"}, {"instr_func": "format_ipmb_msg", "instr_loc": 1766, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "= ipmb_checksum(&smi_msg->data[i + 6], smi_msg->data_size - 6);"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "IntegerOverflowDetector says:", "at_func": "format_ipmb_msg"}, "warn_no": 2},
{"warn_data": {"at_line": 1765, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "smi_msg->data[i+smi_msg->data_size]", "inst_trace": [{"instr_func": "ipmi_ioctl", "instr_loc": 324, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "struct ipmi_req_settime req;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "format_ipmb_msg", "instr_loc": 1762, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 9;"}, {"instr_func": "format_ipmb_msg", "instr_loc": 1762, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 9;"}, {"instr_func": "format_ipmb_msg", "instr_loc": 1762, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 9;"}, {"instr_func": "format_ipmb_msg", "instr_loc": 1765, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data[i+smi_msg->data_size]"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "IntegerOverflowDetector says:", "at_func": "format_ipmb_msg"}, "warn_no": 3},
{"warn_data": {"at_line": 1766, "warn_str": "Trying to write to a user pointer.", "at": "= ipmb_checksum(&smi_msg->data[i + 6], smi_msg->data_size - 6);", "inst_trace": [{"instr_func": "ipmi_ioctl", "instr_loc": 324, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "struct ipmi_req_settime req;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "format_ipmb_msg", "instr_loc": 1762, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 9;"}, {"instr_func": "format_ipmb_msg", "instr_loc": 1762, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 9;"}, {"instr_func": "format_ipmb_msg", "instr_loc": 1762, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 9;"}, {"instr_func": "format_ipmb_msg", "instr_loc": 1765, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data[i+smi_msg->data_size]"}, {"instr_func": "format_ipmb_msg", "instr_loc": 1765, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data[i+smi_msg->data_size]"}, {"instr_func": "format_ipmb_msg", "instr_loc": 1765, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data[i+smi_msg->data_size]"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "TaintedPointerDereferenceChecker says:", "at_func": "format_ipmb_msg"}, "warn_no": 4},
{"warn_data": {"at_line": 1772, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "smi_msg->data_size += 1 + i;", "inst_trace": [{"instr_func": "ipmi_ioctl", "instr_loc": 324, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "struct ipmi_req_settime req;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "format_ipmb_msg", "instr_loc": 1762, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 9;"}, {"instr_func": "format_ipmb_msg", "instr_loc": 1762, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 9;"}, {"instr_func": "format_ipmb_msg", "instr_loc": 1762, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 9;"}, {"instr_func": "format_ipmb_msg", "instr_loc": 1772, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size += 1 + i;"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "IntegerOverflowDetector says:", "at_func": "format_ipmb_msg"}, "warn_no": 5}]},
{"num_warnings": 5,
"context":[{"lineno": -1, "instr": "  %4 = alloca i8*, align 8"}, {"lineno": 331, "file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "rv = handle_send_req(priv->user,"}, {"lineno": 185, "file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "rv = ipmi_request_settime(user,"}, {"lineno": 2311, "file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "rv = i_ipmi_request(user,"}, {"lineno": 2250, "file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "rv = i_ipmi_req_ipmb(intf, addr, msgid, msg, smi_msg, recv_msg,"}, {"lineno": 1988, "file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "format_ipmb_msg(smi_msg, msg, ipmb_addr, msgid,"}],
"warnings":[{"warn_data": {"at_line": 1762, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "smi_msg->data_size = msg->data_len + 9;", "inst_trace": [{"instr_func": "ipmi_ioctl", "instr_loc": 324, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "struct ipmi_req_settime req;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "format_ipmb_msg", "instr_loc": 1762, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 9;"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "IntegerOverflowDetector says:", "at_func": "format_ipmb_msg"}, "warn_no": 1},
{"warn_data": {"at_line": 1766, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "= ipmb_checksum(&smi_msg->data[i + 6], smi_msg->data_size - 6);", "inst_trace": [{"instr_func": "ipmi_ioctl", "instr_loc": 324, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "struct ipmi_req_settime req;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "format_ipmb_msg", "instr_loc": 1762, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 9;"}, {"instr_func": "format_ipmb_msg", "instr_loc": 1762, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 9;"}, {"instr_func": "format_ipmb_msg", "instr_loc": 1762, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 9;"}, {"instr_func": "format_ipmb_msg", "instr_loc": 1766, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "= ipmb_checksum(&smi_msg->data[i + 6], smi_msg->data_size - 6);"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "IntegerOverflowDetector says:", "at_func": "format_ipmb_msg"}, "warn_no": 2},
{"warn_data": {"at_line": 1765, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "smi_msg->data[i+smi_msg->data_size]", "inst_trace": [{"instr_func": "ipmi_ioctl", "instr_loc": 324, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "struct ipmi_req_settime req;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "format_ipmb_msg", "instr_loc": 1762, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 9;"}, {"instr_func": "format_ipmb_msg", "instr_loc": 1762, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 9;"}, {"instr_func": "format_ipmb_msg", "instr_loc": 1762, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 9;"}, {"instr_func": "format_ipmb_msg", "instr_loc": 1765, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data[i+smi_msg->data_size]"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "IntegerOverflowDetector says:", "at_func": "format_ipmb_msg"}, "warn_no": 3},
{"warn_data": {"at_line": 1766, "warn_str": "Trying to write to a user pointer.", "at": "= ipmb_checksum(&smi_msg->data[i + 6], smi_msg->data_size - 6);", "inst_trace": [{"instr_func": "ipmi_ioctl", "instr_loc": 324, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "struct ipmi_req_settime req;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "format_ipmb_msg", "instr_loc": 1762, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 9;"}, {"instr_func": "format_ipmb_msg", "instr_loc": 1762, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 9;"}, {"instr_func": "format_ipmb_msg", "instr_loc": 1762, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 9;"}, {"instr_func": "format_ipmb_msg", "instr_loc": 1765, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data[i+smi_msg->data_size]"}, {"instr_func": "format_ipmb_msg", "instr_loc": 1765, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data[i+smi_msg->data_size]"}, {"instr_func": "format_ipmb_msg", "instr_loc": 1765, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data[i+smi_msg->data_size]"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "TaintedPointerDereferenceChecker says:", "at_func": "format_ipmb_msg"}, "warn_no": 4},
{"warn_data": {"at_line": 1772, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "smi_msg->data_size += 1 + i;", "inst_trace": [{"instr_func": "ipmi_ioctl", "instr_loc": 324, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "struct ipmi_req_settime req;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "format_ipmb_msg", "instr_loc": 1762, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 9;"}, {"instr_func": "format_ipmb_msg", "instr_loc": 1762, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 9;"}, {"instr_func": "format_ipmb_msg", "instr_loc": 1762, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 9;"}, {"instr_func": "format_ipmb_msg", "instr_loc": 1772, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size += 1 + i;"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "IntegerOverflowDetector says:", "at_func": "format_ipmb_msg"}, "warn_no": 5}]},
{"num_warnings": 2,
"context":[{"lineno": -1, "instr": "  %4 = alloca i8*, align 8"}, {"lineno": 318, "file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "rv = handle_send_req(priv->user, &req, retries, retry_time_ms);"}],
"warnings":[{"warn_data": {"at_line": 152, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "if (copy_from_user(&addr, req->addr, req->addr_len))", "inst_trace": [], "at_file": "drivers/char/ipmi/ipmi_devintf.c", "by": "TaintedSizeDetector says:", "at_func": "handle_send_req"}, "warn_no": 1},
{"warn_data": {"at_line": 175, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "if (copy_from_user(msg.data,", "inst_trace": [], "at_file": "drivers/char/ipmi/ipmi_devintf.c", "by": "TaintedSizeDetector says:", "at_func": "handle_send_req"}, "warn_no": 2}]},
{"num_warnings": 2,
"context":[{"lineno": -1, "instr": "  %4 = alloca i8*, align 8"}, {"lineno": 318, "file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "rv = handle_send_req(priv->user, &req, retries, retry_time_ms);"}, {"lineno": 185, "file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "rv = ipmi_request_settime(user,"}, {"lineno": 2309, "file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "rv = check_addr(user->intf, addr, &saddr, &lun);"}],
"warnings":[{"warn_data": {"at_line": 2285, "warn_str": "Trying to read from a user pointer.", "at": "*lun = intf->addrinfo[addr->channel].lun;", "inst_trace": [{"instr_func": "handle_send_req", "instr_loc": 152, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "if (copy_from_user(&addr, req->addr, req->addr_len))"}, {"instr_func": "check_addr", "instr_loc": 2284, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "addr->channel = array_index_nospec(addr->channel, IPMI_MAX_CHANNELS);"}, {"instr_func": "check_addr", "instr_loc": 2284, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "addr->channel = array_index_nospec(addr->channel, IPMI_MAX_CHANNELS);"}, {"instr_func": "check_addr", "instr_loc": 2284, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "addr->channel = array_index_nospec(addr->channel, IPMI_MAX_CHANNELS);"}, {"instr_func": "check_addr", "instr_loc": 2284, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "addr->channel = array_index_nospec(addr->channel, IPMI_MAX_CHANNELS);"}, {"instr_func": "check_addr", "instr_loc": 2284, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "addr->channel = array_index_nospec(addr->channel, IPMI_MAX_CHANNELS);"}, {"instr_func": "check_addr", "instr_loc": 2284, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "addr->channel = array_index_nospec(addr->channel, IPMI_MAX_CHANNELS);"}, {"instr_func": "check_addr", "instr_loc": 2284, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "addr->channel = array_index_nospec(addr->channel, IPMI_MAX_CHANNELS);"}, {"instr_func": "check_addr", "instr_loc": 2284, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "addr->channel = array_index_nospec(addr->channel, IPMI_MAX_CHANNELS);"}, {"instr_func": "check_addr", "instr_loc": 2285, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "*lun = intf->addrinfo[addr->channel].lun;"}, {"instr_func": "check_addr", "instr_loc": 2285, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "*lun = intf->addrinfo[addr->channel].lun;"}, {"instr_func": "check_addr", "instr_loc": 2285, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "*lun = intf->addrinfo[addr->channel].lun;"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "TaintedPointerDereferenceChecker says:", "at_func": "check_addr"}, "warn_no": 1},
{"warn_data": {"at_line": 2286, "warn_str": "Trying to read from a user pointer.", "at": "*saddr = intf->addrinfo[addr->channel].address;", "inst_trace": [{"instr_func": "handle_send_req", "instr_loc": 152, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "if (copy_from_user(&addr, req->addr, req->addr_len))"}, {"instr_func": "check_addr", "instr_loc": 2284, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "addr->channel = array_index_nospec(addr->channel, IPMI_MAX_CHANNELS);"}, {"instr_func": "check_addr", "instr_loc": 2284, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "addr->channel = array_index_nospec(addr->channel, IPMI_MAX_CHANNELS);"}, {"instr_func": "check_addr", "instr_loc": 2284, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "addr->channel = array_index_nospec(addr->channel, IPMI_MAX_CHANNELS);"}, {"instr_func": "check_addr", "instr_loc": 2284, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "addr->channel = array_index_nospec(addr->channel, IPMI_MAX_CHANNELS);"}, {"instr_func": "check_addr", "instr_loc": 2284, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "addr->channel = array_index_nospec(addr->channel, IPMI_MAX_CHANNELS);"}, {"instr_func": "check_addr", "instr_loc": 2284, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "addr->channel = array_index_nospec(addr->channel, IPMI_MAX_CHANNELS);"}, {"instr_func": "check_addr", "instr_loc": 2284, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "addr->channel = array_index_nospec(addr->channel, IPMI_MAX_CHANNELS);"}, {"instr_func": "check_addr", "instr_loc": 2284, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "addr->channel = array_index_nospec(addr->channel, IPMI_MAX_CHANNELS);"}, {"instr_func": "check_addr", "instr_loc": 2286, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "*saddr = intf->addrinfo[addr->channel].address;"}, {"instr_func": "check_addr", "instr_loc": 2286, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "*saddr = intf->addrinfo[addr->channel].address;"}, {"instr_func": "check_addr", "instr_loc": 2286, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "*saddr = intf->addrinfo[addr->channel].address;"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "TaintedPointerDereferenceChecker says:", "at_func": "check_addr"}, "warn_no": 2}]},
{"num_warnings": 3,
"context":[{"lineno": -1, "instr": "  %4 = alloca i8*, align 8"}, {"lineno": 318, "file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "rv = handle_send_req(priv->user, &req, retries, retry_time_ms);"}, {"lineno": 185, "file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "rv = ipmi_request_settime(user,"}, {"lineno": 2311, "file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "rv = i_ipmi_request(user,"}, {"lineno": 2254, "file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "rv = i_ipmi_req_lan(intf, addr, msgid, msg, smi_msg, recv_msg,"}],
"warnings":[{"warn_data": {"at_line": 2088, "warn_str": "Trying to read from a user pointer.", "at": "if ((chans[addr->channel].medium", "inst_trace": [{"instr_func": "handle_send_req", "instr_loc": 175, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "if (copy_from_user(msg.data,"}, {"instr_func": "i_ipmi_req_lan", "instr_loc": 2086, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "chans = READ_ONCE(intf->channel_list)->c;"}, {"instr_func": "i_ipmi_req_lan", "instr_loc": 2086, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "chans = READ_ONCE(intf->channel_list)->c;"}, {"instr_func": "i_ipmi_req_lan", "instr_loc": 2086, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "chans = READ_ONCE(intf->channel_list)->c;"}, {"instr_func": "i_ipmi_req_lan", "instr_loc": 2086, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "chans = READ_ONCE(intf->channel_list)->c;"}, {"instr_func": "i_ipmi_req_lan", "instr_loc": 2086, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "chans = READ_ONCE(intf->channel_list)->c;"}, {"instr_func": "i_ipmi_req_lan", "instr_loc": 2086, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "chans = READ_ONCE(intf->channel_list)->c;"}, {"instr_func": "i_ipmi_req_lan", "instr_loc": 2086, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "chans = READ_ONCE(intf->channel_list)->c;"}, {"instr_func": "i_ipmi_req_lan", "instr_loc": 2086, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "chans = READ_ONCE(intf->channel_list)->c;"}, {"instr_func": "i_ipmi_req_lan", "instr_loc": 2088, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "if ((chans[addr->channel].medium"}, {"instr_func": "i_ipmi_req_lan", "instr_loc": 2088, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "if ((chans[addr->channel].medium"}, {"instr_func": "i_ipmi_req_lan", "instr_loc": 2088, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "if ((chans[addr->channel].medium"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "TaintedPointerDereferenceChecker says:", "at_func": "i_ipmi_req_lan"}, "warn_no": 1},
{"warn_data": {"at_line": 2090, "warn_str": "Trying to read from a user pointer.", "at": "&& (chans[addr->channel].medium", "inst_trace": [{"instr_func": "handle_send_req", "instr_loc": 175, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "if (copy_from_user(msg.data,"}, {"instr_func": "i_ipmi_req_lan", "instr_loc": 2086, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "chans = READ_ONCE(intf->channel_list)->c;"}, {"instr_func": "i_ipmi_req_lan", "instr_loc": 2086, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "chans = READ_ONCE(intf->channel_list)->c;"}, {"instr_func": "i_ipmi_req_lan", "instr_loc": 2086, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "chans = READ_ONCE(intf->channel_list)->c;"}, {"instr_func": "i_ipmi_req_lan", "instr_loc": 2086, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "chans = READ_ONCE(intf->channel_list)->c;"}, {"instr_func": "i_ipmi_req_lan", "instr_loc": 2086, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "chans = READ_ONCE(intf->channel_list)->c;"}, {"instr_func": "i_ipmi_req_lan", "instr_loc": 2086, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "chans = READ_ONCE(intf->channel_list)->c;"}, {"instr_func": "i_ipmi_req_lan", "instr_loc": 2086, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "chans = READ_ONCE(intf->channel_list)->c;"}, {"instr_func": "i_ipmi_req_lan", "instr_loc": 2086, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "chans = READ_ONCE(intf->channel_list)->c;"}, {"instr_func": "i_ipmi_req_lan", "instr_loc": 2090, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "&& (chans[addr->channel].medium"}, {"instr_func": "i_ipmi_req_lan", "instr_loc": 2090, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "&& (chans[addr->channel].medium"}, {"instr_func": "i_ipmi_req_lan", "instr_loc": 2090, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "&& (chans[addr->channel].medium"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "TaintedPointerDereferenceChecker says:", "at_func": "i_ipmi_req_lan"}, "warn_no": 2},
{"warn_data": {"at_line": 2097, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "if ((msg->data_len + 12) > IPMI_MAX_MSG_LENGTH) {", "inst_trace": [{"instr_func": "ipmi_ioctl", "instr_loc": 304, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "struct ipmi_req req;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "i_ipmi_req_lan", "instr_loc": 2097, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "if ((msg->data_len + 12) > IPMI_MAX_MSG_LENGTH) {"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "IntegerOverflowDetector says:", "at_func": "i_ipmi_req_lan"}, "warn_no": 3}]},
{"num_warnings": 19,
"context":[{"lineno": -1, "instr": "  %4 = alloca i8*, align 8"}, {"lineno": 318, "file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "rv = handle_send_req(priv->user, &req, retries, retry_time_ms);"}, {"lineno": 185, "file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "rv = ipmi_request_settime(user,"}, {"lineno": 2311, "file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "rv = i_ipmi_request(user,"}, {"lineno": 2254, "file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "rv = i_ipmi_req_lan(intf, addr, msgid, msg, smi_msg, recv_msg,"}, {"lineno": 2134, "file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "rv = intf_next_seq(intf,"}],
"warnings":[{"warn_data": {"at_line": 1029, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {", "inst_trace": [{"instr_func": "handle_send_req", "instr_loc": 175, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "if (copy_from_user(msg.data,"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "IntegerOverflowDetector says:", "at_func": "intf_next_seq"}, "warn_no": 1},
{"warn_data": {"at_line": 1030, "warn_str": "Trying to read from a user pointer.", "at": "if (!intf->seq_table[i].inuse)", "inst_trace": [{"instr_func": "handle_send_req", "instr_loc": 175, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "if (copy_from_user(msg.data,"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1030, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "if (!intf->seq_table[i].inuse)"}, {"instr_func": "intf_next_seq", "instr_loc": 1030, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "if (!intf->seq_table[i].inuse)"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "TaintedPointerDereferenceChecker says:", "at_func": "intf_next_seq"}, "warn_no": 2},
{"warn_data": {"at_line": 1030, "warn_str": "Loop is bounded by a tainted value.", "at": "if (!intf->seq_table[i].inuse)", "inst_trace": [{"instr_func": "handle_send_req", "instr_loc": 175, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "if (copy_from_user(msg.data,"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1030, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "if (!intf->seq_table[i].inuse)"}, {"instr_func": "intf_next_seq", "instr_loc": 1030, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "if (!intf->seq_table[i].inuse)"}, {"instr_func": "intf_next_seq", "instr_loc": 1030, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "if (!intf->seq_table[i].inuse)"}, {"instr_func": "intf_next_seq", "instr_loc": 1030, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "if (!intf->seq_table[i].inuse)"}, {"instr_func": "intf_next_seq", "instr_loc": 1030, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "if (!intf->seq_table[i].inuse)"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "TaintedLoopBoundDetector says:", "at_func": "intf_next_seq"}, "warn_no": 3},
{"warn_data": {"at_line": 1028, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;", "inst_trace": [{"instr_func": "handle_send_req", "instr_loc": 175, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "if (copy_from_user(msg.data,"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "IntegerOverflowDetector says:", "at_func": "intf_next_seq"}, "warn_no": 4},
{"warn_data": {"at_line": 1028, "warn_str": "Loop is bounded by a tainted value.", "at": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;", "inst_trace": [{"instr_func": "handle_send_req", "instr_loc": 175, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "if (copy_from_user(msg.data,"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "TaintedLoopBoundDetector says:", "at_func": "intf_next_seq"}, "warn_no": 5},
{"warn_data": {"at_line": 1034, "warn_str": "Trying to read from a user pointer.", "at": "if (!intf->seq_table[i].inuse) {", "inst_trace": [{"instr_func": "handle_send_req", "instr_loc": 175, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "if (copy_from_user(msg.data,"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1034, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "if (!intf->seq_table[i].inuse) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1034, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "if (!intf->seq_table[i].inuse) {"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "TaintedPointerDereferenceChecker says:", "at_func": "intf_next_seq"}, "warn_no": 6},
{"warn_data": {"at_line": 1035, "warn_str": "Trying to write to a user pointer.", "at": "intf->seq_table[i].recv_msg = recv_msg;", "inst_trace": [{"instr_func": "handle_send_req", "instr_loc": 175, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "if (copy_from_user(msg.data,"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1035, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "intf->seq_table[i].recv_msg = recv_msg;"}, {"instr_func": "intf_next_seq", "instr_loc": 1035, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "intf->seq_table[i].recv_msg = recv_msg;"}, {"instr_func": "intf_next_seq", "instr_loc": 1035, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "intf->seq_table[i].recv_msg = recv_msg;"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "TaintedPointerDereferenceChecker says:", "at_func": "intf_next_seq"}, "warn_no": 7},
{"warn_data": {"at_line": 1041, "warn_str": "Trying to write to a user pointer.", "at": "intf->seq_table[i].timeout = MAX_MSG_TIMEOUT;", "inst_trace": [{"instr_func": "handle_send_req", "instr_loc": 175, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "if (copy_from_user(msg.data,"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1041, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "intf->seq_table[i].timeout = MAX_MSG_TIMEOUT;"}, {"instr_func": "intf_next_seq", "instr_loc": 1041, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "intf->seq_table[i].timeout = MAX_MSG_TIMEOUT;"}, {"instr_func": "intf_next_seq", "instr_loc": 1041, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "intf->seq_table[i].timeout = MAX_MSG_TIMEOUT;"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "TaintedPointerDereferenceChecker says:", "at_func": "intf_next_seq"}, "warn_no": 8},
{"warn_data": {"at_line": 1042, "warn_str": "Trying to write to a user pointer.", "at": "intf->seq_table[i].orig_timeout = timeout;", "inst_trace": [{"instr_func": "handle_send_req", "instr_loc": 175, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "if (copy_from_user(msg.data,"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1042, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "intf->seq_table[i].orig_timeout = timeout;"}, {"instr_func": "intf_next_seq", "instr_loc": 1042, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "intf->seq_table[i].orig_timeout = timeout;"}, {"instr_func": "intf_next_seq", "instr_loc": 1042, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "intf->seq_table[i].orig_timeout = timeout;"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "TaintedPointerDereferenceChecker says:", "at_func": "intf_next_seq"}, "warn_no": 9},
{"warn_data": {"at_line": 1043, "warn_str": "Trying to write to a user pointer.", "at": "intf->seq_table[i].retries_left = retries;", "inst_trace": [{"instr_func": "handle_send_req", "instr_loc": 175, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "if (copy_from_user(msg.data,"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1043, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "intf->seq_table[i].retries_left = retries;"}, {"instr_func": "intf_next_seq", "instr_loc": 1043, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "intf->seq_table[i].retries_left = retries;"}, {"instr_func": "intf_next_seq", "instr_loc": 1043, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "intf->seq_table[i].retries_left = retries;"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "TaintedPointerDereferenceChecker says:", "at_func": "intf_next_seq"}, "warn_no": 10},
{"warn_data": {"at_line": 1044, "warn_str": "Trying to read from a user pointer.", "at": "intf->seq_table[i].broadcast = broadcast;", "inst_trace": [{"instr_func": "handle_send_req", "instr_loc": 175, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "if (copy_from_user(msg.data,"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1044, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "intf->seq_table[i].broadcast = broadcast;"}, {"instr_func": "intf_next_seq", "instr_loc": 1044, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "intf->seq_table[i].broadcast = broadcast;"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "TaintedPointerDereferenceChecker says:", "at_func": "intf_next_seq"}, "warn_no": 11},
{"warn_data": {"at_line": 1044, "warn_str": "Trying to write to a user pointer.", "at": "intf->seq_table[i].broadcast = broadcast;", "inst_trace": [{"instr_func": "handle_send_req", "instr_loc": 175, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "if (copy_from_user(msg.data,"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1044, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "intf->seq_table[i].broadcast = broadcast;"}, {"instr_func": "intf_next_seq", "instr_loc": 1044, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "intf->seq_table[i].broadcast = broadcast;"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "TaintedPointerDereferenceChecker says:", "at_func": "intf_next_seq"}, "warn_no": 12},
{"warn_data": {"at_line": 1045, "warn_str": "Trying to read from a user pointer.", "at": "intf->seq_table[i].inuse = 1;", "inst_trace": [{"instr_func": "handle_send_req", "instr_loc": 175, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "if (copy_from_user(msg.data,"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1045, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "intf->seq_table[i].inuse = 1;"}, {"instr_func": "intf_next_seq", "instr_loc": 1045, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "intf->seq_table[i].inuse = 1;"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "TaintedPointerDereferenceChecker says:", "at_func": "intf_next_seq"}, "warn_no": 13},
{"warn_data": {"at_line": 1045, "warn_str": "Trying to write to a user pointer.", "at": "intf->seq_table[i].inuse = 1;", "inst_trace": [{"instr_func": "handle_send_req", "instr_loc": 175, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "if (copy_from_user(msg.data,"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1045, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "intf->seq_table[i].inuse = 1;"}, {"instr_func": "intf_next_seq", "instr_loc": 1045, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "intf->seq_table[i].inuse = 1;"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "TaintedPointerDereferenceChecker says:", "at_func": "intf_next_seq"}, "warn_no": 14},
{"warn_data": {"at_line": 1046, "warn_str": "Trying to read from a user pointer.", "at": "intf->seq_table[i].seqid = NEXT_SEQID(intf->seq_table[i].seqid);", "inst_trace": [{"instr_func": "handle_send_req", "instr_loc": 175, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "if (copy_from_user(msg.data,"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1046, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "intf->seq_table[i].seqid = NEXT_SEQID(intf->seq_table[i].seqid);"}, {"instr_func": "intf_next_seq", "instr_loc": 1046, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "intf->seq_table[i].seqid = NEXT_SEQID(intf->seq_table[i].seqid);"}, {"instr_func": "intf_next_seq", "instr_loc": 1046, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "intf->seq_table[i].seqid = NEXT_SEQID(intf->seq_table[i].seqid);"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "TaintedPointerDereferenceChecker says:", "at_func": "intf_next_seq"}, "warn_no": 15},
{"warn_data": {"at_line": 1046, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "intf->seq_table[i].seqid = NEXT_SEQID(intf->seq_table[i].seqid);", "inst_trace": [{"instr_func": "handle_send_req", "instr_loc": 175, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "if (copy_from_user(msg.data,"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1046, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "intf->seq_table[i].seqid = NEXT_SEQID(intf->seq_table[i].seqid);"}, {"instr_func": "intf_next_seq", "instr_loc": 1046, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "intf->seq_table[i].seqid = NEXT_SEQID(intf->seq_table[i].seqid);"}, {"instr_func": "intf_next_seq", "instr_loc": 1046, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "intf->seq_table[i].seqid = NEXT_SEQID(intf->seq_table[i].seqid);"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "IntegerOverflowDetector says:", "at_func": "intf_next_seq"}, "warn_no": 16},
{"warn_data": {"at_line": 1046, "warn_str": "Trying to write to a user pointer.", "at": "intf->seq_table[i].seqid = NEXT_SEQID(intf->seq_table[i].seqid);", "inst_trace": [{"instr_func": "handle_send_req", "instr_loc": 175, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "if (copy_from_user(msg.data,"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1046, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "intf->seq_table[i].seqid = NEXT_SEQID(intf->seq_table[i].seqid);"}, {"instr_func": "intf_next_seq", "instr_loc": 1046, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "intf->seq_table[i].seqid = NEXT_SEQID(intf->seq_table[i].seqid);"}, {"instr_func": "intf_next_seq", "instr_loc": 1046, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "intf->seq_table[i].seqid = NEXT_SEQID(intf->seq_table[i].seqid);"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "TaintedPointerDereferenceChecker says:", "at_func": "intf_next_seq"}, "warn_no": 17},
{"warn_data": {"at_line": 1048, "warn_str": "Trying to read from a user pointer.", "at": "*seqid = intf->seq_table[i].seqid;", "inst_trace": [{"instr_func": "handle_send_req", "instr_loc": 175, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "if (copy_from_user(msg.data,"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1048, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "*seqid = intf->seq_table[i].seqid;"}, {"instr_func": "intf_next_seq", "instr_loc": 1048, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "*seqid = intf->seq_table[i].seqid;"}, {"instr_func": "intf_next_seq", "instr_loc": 1048, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "*seqid = intf->seq_table[i].seqid;"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "TaintedPointerDereferenceChecker says:", "at_func": "intf_next_seq"}, "warn_no": 18},
{"warn_data": {"at_line": 1049, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "intf->curr_seq = (i+1)%IPMI_IPMB_NUM_SEQ;", "inst_trace": [{"instr_func": "handle_send_req", "instr_loc": 175, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "if (copy_from_user(msg.data,"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1049, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "intf->curr_seq = (i+1)%IPMI_IPMB_NUM_SEQ;"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "IntegerOverflowDetector says:", "at_func": "intf_next_seq"}, "warn_no": 19}]},
{"num_warnings": 4,
"context":[{"lineno": -1, "instr": "  %4 = alloca i8*, align 8"}, {"lineno": 318, "file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "rv = handle_send_req(priv->user, &req, retries, retry_time_ms);"}, {"lineno": 185, "file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "rv = ipmi_request_settime(user,"}, {"lineno": 2311, "file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "rv = i_ipmi_request(user,"}, {"lineno": 2254, "file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "rv = i_ipmi_req_lan(intf, addr, msgid, msg, smi_msg, recv_msg,"}, {"lineno": 2155, "file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "format_lan_msg(smi_msg, msg, lan_addr,"}],
"warnings":[{"warn_data": {"at_line": 1799, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "smi_msg->data_size = msg->data_len + 10;", "inst_trace": [{"instr_func": "ipmi_ioctl", "instr_loc": 304, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "struct ipmi_req req;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "format_lan_msg", "instr_loc": 1799, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 10;"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "IntegerOverflowDetector says:", "at_func": "format_lan_msg"}, "warn_no": 1},
{"warn_data": {"at_line": 1803, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "= ipmb_checksum(&smi_msg->data[7], smi_msg->data_size - 7);", "inst_trace": [{"instr_func": "ipmi_ioctl", "instr_loc": 304, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "struct ipmi_req req;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "format_lan_msg", "instr_loc": 1799, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 10;"}, {"instr_func": "format_lan_msg", "instr_loc": 1799, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 10;"}, {"instr_func": "format_lan_msg", "instr_loc": 1799, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 10;"}, {"instr_func": "format_lan_msg", "instr_loc": 1803, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "= ipmb_checksum(&smi_msg->data[7], smi_msg->data_size - 7);"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "IntegerOverflowDetector says:", "at_func": "format_lan_msg"}, "warn_no": 2},
{"warn_data": {"at_line": 1803, "warn_str": "Trying to write to a user pointer.", "at": "= ipmb_checksum(&smi_msg->data[7], smi_msg->data_size - 7);", "inst_trace": [{"instr_func": "ipmi_ioctl", "instr_loc": 304, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "struct ipmi_req req;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "format_lan_msg", "instr_loc": 1799, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 10;"}, {"instr_func": "format_lan_msg", "instr_loc": 1799, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 10;"}, {"instr_func": "format_lan_msg", "instr_loc": 1799, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 10;"}, {"instr_func": "format_lan_msg", "instr_loc": 1802, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data[smi_msg->data_size]"}, {"instr_func": "format_lan_msg", "instr_loc": 1802, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data[smi_msg->data_size]"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "TaintedPointerDereferenceChecker says:", "at_func": "format_lan_msg"}, "warn_no": 3},
{"warn_data": {"at_line": 1809, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "smi_msg->data_size += 1;", "inst_trace": [{"instr_func": "ipmi_ioctl", "instr_loc": 304, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "struct ipmi_req req;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "format_lan_msg", "instr_loc": 1799, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 10;"}, {"instr_func": "format_lan_msg", "instr_loc": 1799, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 10;"}, {"instr_func": "format_lan_msg", "instr_loc": 1799, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 10;"}, {"instr_func": "format_lan_msg", "instr_loc": 1809, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size += 1;"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "IntegerOverflowDetector says:", "at_func": "format_lan_msg"}, "warn_no": 4}]},
{"num_warnings": 4,
"context":[{"lineno": -1, "instr": "  %4 = alloca i8*, align 8"}, {"lineno": 318, "file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "rv = handle_send_req(priv->user, &req, retries, retry_time_ms);"}, {"lineno": 185, "file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "rv = ipmi_request_settime(user,"}, {"lineno": 2311, "file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "rv = i_ipmi_request(user,"}, {"lineno": 2254, "file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "rv = i_ipmi_req_lan(intf, addr, msgid, msg, smi_msg, recv_msg,"}, {"lineno": 2116, "file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "format_lan_msg(smi_msg, msg, lan_addr, msgid,"}],
"warnings":[{"warn_data": {"at_line": 1799, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "smi_msg->data_size = msg->data_len + 10;", "inst_trace": [{"instr_func": "ipmi_ioctl", "instr_loc": 304, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "struct ipmi_req req;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "format_lan_msg", "instr_loc": 1799, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 10;"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "IntegerOverflowDetector says:", "at_func": "format_lan_msg"}, "warn_no": 1},
{"warn_data": {"at_line": 1803, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "= ipmb_checksum(&smi_msg->data[7], smi_msg->data_size - 7);", "inst_trace": [{"instr_func": "ipmi_ioctl", "instr_loc": 304, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "struct ipmi_req req;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "format_lan_msg", "instr_loc": 1799, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 10;"}, {"instr_func": "format_lan_msg", "instr_loc": 1799, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 10;"}, {"instr_func": "format_lan_msg", "instr_loc": 1799, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 10;"}, {"instr_func": "format_lan_msg", "instr_loc": 1803, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "= ipmb_checksum(&smi_msg->data[7], smi_msg->data_size - 7);"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "IntegerOverflowDetector says:", "at_func": "format_lan_msg"}, "warn_no": 2},
{"warn_data": {"at_line": 1803, "warn_str": "Trying to write to a user pointer.", "at": "= ipmb_checksum(&smi_msg->data[7], smi_msg->data_size - 7);", "inst_trace": [{"instr_func": "ipmi_ioctl", "instr_loc": 304, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "struct ipmi_req req;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "format_lan_msg", "instr_loc": 1799, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 10;"}, {"instr_func": "format_lan_msg", "instr_loc": 1799, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 10;"}, {"instr_func": "format_lan_msg", "instr_loc": 1799, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 10;"}, {"instr_func": "format_lan_msg", "instr_loc": 1802, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data[smi_msg->data_size]"}, {"instr_func": "format_lan_msg", "instr_loc": 1802, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data[smi_msg->data_size]"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "TaintedPointerDereferenceChecker says:", "at_func": "format_lan_msg"}, "warn_no": 3},
{"warn_data": {"at_line": 1809, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "smi_msg->data_size += 1;", "inst_trace": [{"instr_func": "ipmi_ioctl", "instr_loc": 304, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "struct ipmi_req req;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "format_lan_msg", "instr_loc": 1799, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 10;"}, {"instr_func": "format_lan_msg", "instr_loc": 1799, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 10;"}, {"instr_func": "format_lan_msg", "instr_loc": 1799, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 10;"}, {"instr_func": "format_lan_msg", "instr_loc": 1809, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size += 1;"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "IntegerOverflowDetector says:", "at_func": "format_lan_msg"}, "warn_no": 4}]},
{"num_warnings": 3,
"context":[{"lineno": -1, "instr": "  %4 = alloca i8*, align 8"}, {"lineno": 318, "file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "rv = handle_send_req(priv->user, &req, retries, retry_time_ms);"}, {"lineno": 185, "file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "rv = ipmi_request_settime(user,"}, {"lineno": 2311, "file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "rv = i_ipmi_request(user,"}, {"lineno": 2250, "file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "rv = i_ipmi_req_ipmb(intf, addr, msgid, msg, smi_msg, recv_msg,"}],
"warnings":[{"warn_data": {"at_line": 1949, "warn_str": "Trying to read from a user pointer.", "at": "if (chans[addr->channel].medium != IPMI_CHANNEL_MEDIUM_IPMB) {", "inst_trace": [{"instr_func": "handle_send_req", "instr_loc": 175, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "if (copy_from_user(msg.data,"}, {"instr_func": "i_ipmi_req_ipmb", "instr_loc": 1947, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "chans = READ_ONCE(intf->channel_list)->c;"}, {"instr_func": "i_ipmi_req_ipmb", "instr_loc": 1947, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "chans = READ_ONCE(intf->channel_list)->c;"}, {"instr_func": "i_ipmi_req_ipmb", "instr_loc": 1947, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "chans = READ_ONCE(intf->channel_list)->c;"}, {"instr_func": "i_ipmi_req_ipmb", "instr_loc": 1947, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "chans = READ_ONCE(intf->channel_list)->c;"}, {"instr_func": "i_ipmi_req_ipmb", "instr_loc": 1947, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "chans = READ_ONCE(intf->channel_list)->c;"}, {"instr_func": "i_ipmi_req_ipmb", "instr_loc": 1947, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "chans = READ_ONCE(intf->channel_list)->c;"}, {"instr_func": "i_ipmi_req_ipmb", "instr_loc": 1947, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "chans = READ_ONCE(intf->channel_list)->c;"}, {"instr_func": "i_ipmi_req_ipmb", "instr_loc": 1947, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "chans = READ_ONCE(intf->channel_list)->c;"}, {"instr_func": "i_ipmi_req_ipmb", "instr_loc": 1949, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "if (chans[addr->channel].medium != IPMI_CHANNEL_MEDIUM_IPMB) {"}, {"instr_func": "i_ipmi_req_ipmb", "instr_loc": 1949, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "if (chans[addr->channel].medium != IPMI_CHANNEL_MEDIUM_IPMB) {"}, {"instr_func": "i_ipmi_req_ipmb", "instr_loc": 1949, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "if (chans[addr->channel].medium != IPMI_CHANNEL_MEDIUM_IPMB) {"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "TaintedPointerDereferenceChecker says:", "at_func": "i_ipmi_req_ipmb"}, "warn_no": 1},
{"warn_data": {"at_line": 1969, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "if ((msg->data_len + 10 + broadcast) > IPMI_MAX_MSG_LENGTH) {", "inst_trace": [{"instr_func": "ipmi_ioctl", "instr_loc": 304, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "struct ipmi_req req;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "i_ipmi_req_ipmb", "instr_loc": 1969, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "if ((msg->data_len + 10 + broadcast) > IPMI_MAX_MSG_LENGTH) {"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "IntegerOverflowDetector says:", "at_func": "i_ipmi_req_ipmb"}, "warn_no": 2},
{"warn_data": {"at_line": 1969, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "if ((msg->data_len + 10 + broadcast) > IPMI_MAX_MSG_LENGTH) {", "inst_trace": [{"instr_func": "ipmi_ioctl", "instr_loc": 304, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "struct ipmi_req req;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "i_ipmi_req_ipmb", "instr_loc": 1969, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "if ((msg->data_len + 10 + broadcast) > IPMI_MAX_MSG_LENGTH) {"}, {"instr_func": "i_ipmi_req_ipmb", "instr_loc": 1969, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "if ((msg->data_len + 10 + broadcast) > IPMI_MAX_MSG_LENGTH) {"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "IntegerOverflowDetector says:", "at_func": "i_ipmi_req_ipmb"}, "warn_no": 3}]},
{"num_warnings": 2,
"context":[{"lineno": -1, "instr": "  %4 = alloca i8*, align 8"}, {"lineno": 318, "file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "rv = handle_send_req(priv->user, &req, retries, retry_time_ms);"}, {"lineno": 185, "file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "rv = ipmi_request_settime(user,"}, {"lineno": 2311, "file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "rv = i_ipmi_request(user,"}, {"lineno": 2247, "file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "rv = i_ipmi_req_sysintf(intf, addr, msgid, msg, smi_msg,"}],
"warnings":[{"warn_data": {"at_line": 1907, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "if (msg->data_len + 2 > IPMI_MAX_MSG_LENGTH) {", "inst_trace": [{"instr_func": "ipmi_ioctl", "instr_loc": 304, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "struct ipmi_req req;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "i_ipmi_req_sysintf", "instr_loc": 1907, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "if (msg->data_len + 2 > IPMI_MAX_MSG_LENGTH) {"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "IntegerOverflowDetector says:", "at_func": "i_ipmi_req_sysintf"}, "warn_no": 1},
{"warn_data": {"at_line": 1918, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "smi_msg->data_size = msg->data_len + 2;", "inst_trace": [{"instr_func": "ipmi_ioctl", "instr_loc": 304, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "struct ipmi_req req;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "i_ipmi_req_sysintf", "instr_loc": 1918, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 2;"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "IntegerOverflowDetector says:", "at_func": "i_ipmi_req_sysintf"}, "warn_no": 2}]},
{"num_warnings": 19,
"context":[{"lineno": -1, "instr": "  %4 = alloca i8*, align 8"}, {"lineno": 318, "file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "rv = handle_send_req(priv->user, &req, retries, retry_time_ms);"}, {"lineno": 185, "file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "rv = ipmi_request_settime(user,"}, {"lineno": 2311, "file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "rv = i_ipmi_request(user,"}, {"lineno": 2250, "file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "rv = i_ipmi_req_ipmb(intf, addr, msgid, msg, smi_msg, recv_msg,"}, {"lineno": 2015, "file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "rv = intf_next_seq(intf,"}],
"warnings":[{"warn_data": {"at_line": 1044, "warn_str": "Trying to write to a user pointer.", "at": "intf->seq_table[i].broadcast = broadcast;", "inst_trace": [{"instr_func": "handle_send_req", "instr_loc": 175, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "if (copy_from_user(msg.data,"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1044, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "intf->seq_table[i].broadcast = broadcast;"}, {"instr_func": "intf_next_seq", "instr_loc": 1044, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "intf->seq_table[i].broadcast = broadcast;"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "TaintedPointerDereferenceChecker says:", "at_func": "intf_next_seq"}, "warn_no": 1},
{"warn_data": {"at_line": 1029, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {", "inst_trace": [{"instr_func": "handle_send_req", "instr_loc": 175, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "if (copy_from_user(msg.data,"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "IntegerOverflowDetector says:", "at_func": "intf_next_seq"}, "warn_no": 2},
{"warn_data": {"at_line": 1030, "warn_str": "Trying to read from a user pointer.", "at": "if (!intf->seq_table[i].inuse)", "inst_trace": [{"instr_func": "handle_send_req", "instr_loc": 175, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "if (copy_from_user(msg.data,"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1030, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "if (!intf->seq_table[i].inuse)"}, {"instr_func": "intf_next_seq", "instr_loc": 1030, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "if (!intf->seq_table[i].inuse)"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "TaintedPointerDereferenceChecker says:", "at_func": "intf_next_seq"}, "warn_no": 3},
{"warn_data": {"at_line": 1030, "warn_str": "Loop is bounded by a tainted value.", "at": "if (!intf->seq_table[i].inuse)", "inst_trace": [{"instr_func": "handle_send_req", "instr_loc": 175, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "if (copy_from_user(msg.data,"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1030, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "if (!intf->seq_table[i].inuse)"}, {"instr_func": "intf_next_seq", "instr_loc": 1030, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "if (!intf->seq_table[i].inuse)"}, {"instr_func": "intf_next_seq", "instr_loc": 1030, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "if (!intf->seq_table[i].inuse)"}, {"instr_func": "intf_next_seq", "instr_loc": 1030, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "if (!intf->seq_table[i].inuse)"}, {"instr_func": "intf_next_seq", "instr_loc": 1030, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "if (!intf->seq_table[i].inuse)"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "TaintedLoopBoundDetector says:", "at_func": "intf_next_seq"}, "warn_no": 4},
{"warn_data": {"at_line": 1028, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;", "inst_trace": [{"instr_func": "handle_send_req", "instr_loc": 175, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "if (copy_from_user(msg.data,"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "IntegerOverflowDetector says:", "at_func": "intf_next_seq"}, "warn_no": 5},
{"warn_data": {"at_line": 1028, "warn_str": "Loop is bounded by a tainted value.", "at": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;", "inst_trace": [{"instr_func": "handle_send_req", "instr_loc": 175, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "if (copy_from_user(msg.data,"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "TaintedLoopBoundDetector says:", "at_func": "intf_next_seq"}, "warn_no": 6},
{"warn_data": {"at_line": 1034, "warn_str": "Trying to read from a user pointer.", "at": "if (!intf->seq_table[i].inuse) {", "inst_trace": [{"instr_func": "handle_send_req", "instr_loc": 175, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "if (copy_from_user(msg.data,"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1034, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "if (!intf->seq_table[i].inuse) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1034, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "if (!intf->seq_table[i].inuse) {"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "TaintedPointerDereferenceChecker says:", "at_func": "intf_next_seq"}, "warn_no": 7},
{"warn_data": {"at_line": 1035, "warn_str": "Trying to write to a user pointer.", "at": "intf->seq_table[i].recv_msg = recv_msg;", "inst_trace": [{"instr_func": "handle_send_req", "instr_loc": 175, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "if (copy_from_user(msg.data,"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1035, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "intf->seq_table[i].recv_msg = recv_msg;"}, {"instr_func": "intf_next_seq", "instr_loc": 1035, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "intf->seq_table[i].recv_msg = recv_msg;"}, {"instr_func": "intf_next_seq", "instr_loc": 1035, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "intf->seq_table[i].recv_msg = recv_msg;"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "TaintedPointerDereferenceChecker says:", "at_func": "intf_next_seq"}, "warn_no": 8},
{"warn_data": {"at_line": 1041, "warn_str": "Trying to write to a user pointer.", "at": "intf->seq_table[i].timeout = MAX_MSG_TIMEOUT;", "inst_trace": [{"instr_func": "handle_send_req", "instr_loc": 175, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "if (copy_from_user(msg.data,"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1041, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "intf->seq_table[i].timeout = MAX_MSG_TIMEOUT;"}, {"instr_func": "intf_next_seq", "instr_loc": 1041, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "intf->seq_table[i].timeout = MAX_MSG_TIMEOUT;"}, {"instr_func": "intf_next_seq", "instr_loc": 1041, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "intf->seq_table[i].timeout = MAX_MSG_TIMEOUT;"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "TaintedPointerDereferenceChecker says:", "at_func": "intf_next_seq"}, "warn_no": 9},
{"warn_data": {"at_line": 1042, "warn_str": "Trying to write to a user pointer.", "at": "intf->seq_table[i].orig_timeout = timeout;", "inst_trace": [{"instr_func": "handle_send_req", "instr_loc": 175, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "if (copy_from_user(msg.data,"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1042, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "intf->seq_table[i].orig_timeout = timeout;"}, {"instr_func": "intf_next_seq", "instr_loc": 1042, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "intf->seq_table[i].orig_timeout = timeout;"}, {"instr_func": "intf_next_seq", "instr_loc": 1042, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "intf->seq_table[i].orig_timeout = timeout;"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "TaintedPointerDereferenceChecker says:", "at_func": "intf_next_seq"}, "warn_no": 10},
{"warn_data": {"at_line": 1043, "warn_str": "Trying to write to a user pointer.", "at": "intf->seq_table[i].retries_left = retries;", "inst_trace": [{"instr_func": "handle_send_req", "instr_loc": 175, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "if (copy_from_user(msg.data,"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1043, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "intf->seq_table[i].retries_left = retries;"}, {"instr_func": "intf_next_seq", "instr_loc": 1043, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "intf->seq_table[i].retries_left = retries;"}, {"instr_func": "intf_next_seq", "instr_loc": 1043, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "intf->seq_table[i].retries_left = retries;"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "TaintedPointerDereferenceChecker says:", "at_func": "intf_next_seq"}, "warn_no": 11},
{"warn_data": {"at_line": 1044, "warn_str": "Trying to read from a user pointer.", "at": "intf->seq_table[i].broadcast = broadcast;", "inst_trace": [{"instr_func": "handle_send_req", "instr_loc": 175, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "if (copy_from_user(msg.data,"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1044, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "intf->seq_table[i].broadcast = broadcast;"}, {"instr_func": "intf_next_seq", "instr_loc": 1044, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "intf->seq_table[i].broadcast = broadcast;"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "TaintedPointerDereferenceChecker says:", "at_func": "intf_next_seq"}, "warn_no": 12},
{"warn_data": {"at_line": 1045, "warn_str": "Trying to read from a user pointer.", "at": "intf->seq_table[i].inuse = 1;", "inst_trace": [{"instr_func": "handle_send_req", "instr_loc": 175, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "if (copy_from_user(msg.data,"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1045, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "intf->seq_table[i].inuse = 1;"}, {"instr_func": "intf_next_seq", "instr_loc": 1045, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "intf->seq_table[i].inuse = 1;"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "TaintedPointerDereferenceChecker says:", "at_func": "intf_next_seq"}, "warn_no": 13},
{"warn_data": {"at_line": 1045, "warn_str": "Trying to write to a user pointer.", "at": "intf->seq_table[i].inuse = 1;", "inst_trace": [{"instr_func": "handle_send_req", "instr_loc": 175, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "if (copy_from_user(msg.data,"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1045, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "intf->seq_table[i].inuse = 1;"}, {"instr_func": "intf_next_seq", "instr_loc": 1045, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "intf->seq_table[i].inuse = 1;"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "TaintedPointerDereferenceChecker says:", "at_func": "intf_next_seq"}, "warn_no": 14},
{"warn_data": {"at_line": 1046, "warn_str": "Trying to read from a user pointer.", "at": "intf->seq_table[i].seqid = NEXT_SEQID(intf->seq_table[i].seqid);", "inst_trace": [{"instr_func": "handle_send_req", "instr_loc": 175, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "if (copy_from_user(msg.data,"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1046, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "intf->seq_table[i].seqid = NEXT_SEQID(intf->seq_table[i].seqid);"}, {"instr_func": "intf_next_seq", "instr_loc": 1046, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "intf->seq_table[i].seqid = NEXT_SEQID(intf->seq_table[i].seqid);"}, {"instr_func": "intf_next_seq", "instr_loc": 1046, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "intf->seq_table[i].seqid = NEXT_SEQID(intf->seq_table[i].seqid);"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "TaintedPointerDereferenceChecker says:", "at_func": "intf_next_seq"}, "warn_no": 15},
{"warn_data": {"at_line": 1046, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "intf->seq_table[i].seqid = NEXT_SEQID(intf->seq_table[i].seqid);", "inst_trace": [{"instr_func": "handle_send_req", "instr_loc": 175, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "if (copy_from_user(msg.data,"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1046, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "intf->seq_table[i].seqid = NEXT_SEQID(intf->seq_table[i].seqid);"}, {"instr_func": "intf_next_seq", "instr_loc": 1046, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "intf->seq_table[i].seqid = NEXT_SEQID(intf->seq_table[i].seqid);"}, {"instr_func": "intf_next_seq", "instr_loc": 1046, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "intf->seq_table[i].seqid = NEXT_SEQID(intf->seq_table[i].seqid);"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "IntegerOverflowDetector says:", "at_func": "intf_next_seq"}, "warn_no": 16},
{"warn_data": {"at_line": 1046, "warn_str": "Trying to write to a user pointer.", "at": "intf->seq_table[i].seqid = NEXT_SEQID(intf->seq_table[i].seqid);", "inst_trace": [{"instr_func": "handle_send_req", "instr_loc": 175, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "if (copy_from_user(msg.data,"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1046, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "intf->seq_table[i].seqid = NEXT_SEQID(intf->seq_table[i].seqid);"}, {"instr_func": "intf_next_seq", "instr_loc": 1046, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "intf->seq_table[i].seqid = NEXT_SEQID(intf->seq_table[i].seqid);"}, {"instr_func": "intf_next_seq", "instr_loc": 1046, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "intf->seq_table[i].seqid = NEXT_SEQID(intf->seq_table[i].seqid);"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "TaintedPointerDereferenceChecker says:", "at_func": "intf_next_seq"}, "warn_no": 17},
{"warn_data": {"at_line": 1048, "warn_str": "Trying to read from a user pointer.", "at": "*seqid = intf->seq_table[i].seqid;", "inst_trace": [{"instr_func": "handle_send_req", "instr_loc": 175, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "if (copy_from_user(msg.data,"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1048, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "*seqid = intf->seq_table[i].seqid;"}, {"instr_func": "intf_next_seq", "instr_loc": 1048, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "*seqid = intf->seq_table[i].seqid;"}, {"instr_func": "intf_next_seq", "instr_loc": 1048, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "*seqid = intf->seq_table[i].seqid;"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "TaintedPointerDereferenceChecker says:", "at_func": "intf_next_seq"}, "warn_no": 18},
{"warn_data": {"at_line": 1049, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "intf->curr_seq = (i+1)%IPMI_IPMB_NUM_SEQ;", "inst_trace": [{"instr_func": "handle_send_req", "instr_loc": 175, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "if (copy_from_user(msg.data,"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1028, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "for (i = intf->curr_seq; (i+1)%IPMI_IPMB_NUM_SEQ != intf->curr_seq;"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1029, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "i = (i+1)%IPMI_IPMB_NUM_SEQ) {"}, {"instr_func": "intf_next_seq", "instr_loc": 1049, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "intf->curr_seq = (i+1)%IPMI_IPMB_NUM_SEQ;"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "IntegerOverflowDetector says:", "at_func": "intf_next_seq"}, "warn_no": 19}]},
{"num_warnings": 5,
"context":[{"lineno": -1, "instr": "  %4 = alloca i8*, align 8"}, {"lineno": 318, "file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "rv = handle_send_req(priv->user, &req, retries, retry_time_ms);"}, {"lineno": 185, "file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "rv = ipmi_request_settime(user,"}, {"lineno": 2311, "file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "rv = i_ipmi_request(user,"}, {"lineno": 2250, "file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "rv = i_ipmi_req_ipmb(intf, addr, msgid, msg, smi_msg, recv_msg,"}, {"lineno": 2036, "file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "format_ipmb_msg(smi_msg, msg, ipmb_addr,"}],
"warnings":[{"warn_data": {"at_line": 1762, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "smi_msg->data_size = msg->data_len + 9;", "inst_trace": [{"instr_func": "ipmi_ioctl", "instr_loc": 304, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "struct ipmi_req req;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "format_ipmb_msg", "instr_loc": 1762, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 9;"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "IntegerOverflowDetector says:", "at_func": "format_ipmb_msg"}, "warn_no": 1},
{"warn_data": {"at_line": 1766, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "= ipmb_checksum(&smi_msg->data[i + 6], smi_msg->data_size - 6);", "inst_trace": [{"instr_func": "ipmi_ioctl", "instr_loc": 304, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "struct ipmi_req req;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "format_ipmb_msg", "instr_loc": 1762, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 9;"}, {"instr_func": "format_ipmb_msg", "instr_loc": 1762, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 9;"}, {"instr_func": "format_ipmb_msg", "instr_loc": 1762, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 9;"}, {"instr_func": "format_ipmb_msg", "instr_loc": 1766, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "= ipmb_checksum(&smi_msg->data[i + 6], smi_msg->data_size - 6);"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "IntegerOverflowDetector says:", "at_func": "format_ipmb_msg"}, "warn_no": 2},
{"warn_data": {"at_line": 1765, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "smi_msg->data[i+smi_msg->data_size]", "inst_trace": [{"instr_func": "ipmi_ioctl", "instr_loc": 304, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "struct ipmi_req req;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "format_ipmb_msg", "instr_loc": 1762, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 9;"}, {"instr_func": "format_ipmb_msg", "instr_loc": 1762, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 9;"}, {"instr_func": "format_ipmb_msg", "instr_loc": 1762, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 9;"}, {"instr_func": "format_ipmb_msg", "instr_loc": 1765, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data[i+smi_msg->data_size]"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "IntegerOverflowDetector says:", "at_func": "format_ipmb_msg"}, "warn_no": 3},
{"warn_data": {"at_line": 1766, "warn_str": "Trying to write to a user pointer.", "at": "= ipmb_checksum(&smi_msg->data[i + 6], smi_msg->data_size - 6);", "inst_trace": [{"instr_func": "ipmi_ioctl", "instr_loc": 304, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "struct ipmi_req req;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "format_ipmb_msg", "instr_loc": 1762, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 9;"}, {"instr_func": "format_ipmb_msg", "instr_loc": 1762, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 9;"}, {"instr_func": "format_ipmb_msg", "instr_loc": 1762, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 9;"}, {"instr_func": "format_ipmb_msg", "instr_loc": 1765, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data[i+smi_msg->data_size]"}, {"instr_func": "format_ipmb_msg", "instr_loc": 1765, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data[i+smi_msg->data_size]"}, {"instr_func": "format_ipmb_msg", "instr_loc": 1765, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data[i+smi_msg->data_size]"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "TaintedPointerDereferenceChecker says:", "at_func": "format_ipmb_msg"}, "warn_no": 4},
{"warn_data": {"at_line": 1772, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "smi_msg->data_size += 1 + i;", "inst_trace": [{"instr_func": "ipmi_ioctl", "instr_loc": 304, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "struct ipmi_req req;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "format_ipmb_msg", "instr_loc": 1762, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 9;"}, {"instr_func": "format_ipmb_msg", "instr_loc": 1762, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 9;"}, {"instr_func": "format_ipmb_msg", "instr_loc": 1762, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 9;"}, {"instr_func": "format_ipmb_msg", "instr_loc": 1772, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size += 1 + i;"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "IntegerOverflowDetector says:", "at_func": "format_ipmb_msg"}, "warn_no": 5}]},
{"num_warnings": 5,
"context":[{"lineno": -1, "instr": "  %4 = alloca i8*, align 8"}, {"lineno": 318, "file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "rv = handle_send_req(priv->user, &req, retries, retry_time_ms);"}, {"lineno": 185, "file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "rv = ipmi_request_settime(user,"}, {"lineno": 2311, "file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "rv = i_ipmi_request(user,"}, {"lineno": 2250, "file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "rv = i_ipmi_req_ipmb(intf, addr, msgid, msg, smi_msg, recv_msg,"}, {"lineno": 1988, "file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "format_ipmb_msg(smi_msg, msg, ipmb_addr, msgid,"}],
"warnings":[{"warn_data": {"at_line": 1762, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "smi_msg->data_size = msg->data_len + 9;", "inst_trace": [{"instr_func": "ipmi_ioctl", "instr_loc": 304, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "struct ipmi_req req;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "format_ipmb_msg", "instr_loc": 1762, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 9;"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "IntegerOverflowDetector says:", "at_func": "format_ipmb_msg"}, "warn_no": 1},
{"warn_data": {"at_line": 1766, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "= ipmb_checksum(&smi_msg->data[i + 6], smi_msg->data_size - 6);", "inst_trace": [{"instr_func": "ipmi_ioctl", "instr_loc": 304, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "struct ipmi_req req;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "format_ipmb_msg", "instr_loc": 1762, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 9;"}, {"instr_func": "format_ipmb_msg", "instr_loc": 1762, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 9;"}, {"instr_func": "format_ipmb_msg", "instr_loc": 1762, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 9;"}, {"instr_func": "format_ipmb_msg", "instr_loc": 1766, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "= ipmb_checksum(&smi_msg->data[i + 6], smi_msg->data_size - 6);"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "IntegerOverflowDetector says:", "at_func": "format_ipmb_msg"}, "warn_no": 2},
{"warn_data": {"at_line": 1765, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "smi_msg->data[i+smi_msg->data_size]", "inst_trace": [{"instr_func": "ipmi_ioctl", "instr_loc": 304, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "struct ipmi_req req;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "format_ipmb_msg", "instr_loc": 1762, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 9;"}, {"instr_func": "format_ipmb_msg", "instr_loc": 1762, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 9;"}, {"instr_func": "format_ipmb_msg", "instr_loc": 1762, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 9;"}, {"instr_func": "format_ipmb_msg", "instr_loc": 1765, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data[i+smi_msg->data_size]"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "IntegerOverflowDetector says:", "at_func": "format_ipmb_msg"}, "warn_no": 3},
{"warn_data": {"at_line": 1766, "warn_str": "Trying to write to a user pointer.", "at": "= ipmb_checksum(&smi_msg->data[i + 6], smi_msg->data_size - 6);", "inst_trace": [{"instr_func": "ipmi_ioctl", "instr_loc": 304, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "struct ipmi_req req;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "format_ipmb_msg", "instr_loc": 1762, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 9;"}, {"instr_func": "format_ipmb_msg", "instr_loc": 1762, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 9;"}, {"instr_func": "format_ipmb_msg", "instr_loc": 1762, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 9;"}, {"instr_func": "format_ipmb_msg", "instr_loc": 1765, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data[i+smi_msg->data_size]"}, {"instr_func": "format_ipmb_msg", "instr_loc": 1765, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data[i+smi_msg->data_size]"}, {"instr_func": "format_ipmb_msg", "instr_loc": 1765, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data[i+smi_msg->data_size]"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "TaintedPointerDereferenceChecker says:", "at_func": "format_ipmb_msg"}, "warn_no": 4},
{"warn_data": {"at_line": 1772, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "smi_msg->data_size += 1 + i;", "inst_trace": [{"instr_func": "ipmi_ioctl", "instr_loc": 304, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "struct ipmi_req req;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "handle_send_req", "instr_loc": 157, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "msg.data_len = req->msg.data_len;"}, {"instr_func": "format_ipmb_msg", "instr_loc": 1762, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 9;"}, {"instr_func": "format_ipmb_msg", "instr_loc": 1762, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 9;"}, {"instr_func": "format_ipmb_msg", "instr_loc": 1762, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size = msg->data_len + 9;"}, {"instr_func": "format_ipmb_msg", "instr_loc": 1772, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_msg->data_size += 1 + i;"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "IntegerOverflowDetector says:", "at_func": "format_ipmb_msg"}, "warn_no": 5}]},
{"num_warnings": 2,
"context":[{"lineno": -1, "instr": "  %4 = alloca i8*, align 8"}, {"lineno": 318, "file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "rv = handle_send_req(priv->user, &req, retries, retry_time_ms);"}, {"lineno": 185, "file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "rv = ipmi_request_settime(user,"}, {"lineno": 2311, "file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "rv = i_ipmi_request(user,"}, {"lineno": 2247, "file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "rv = i_ipmi_req_sysintf(intf, addr, msgid, msg, smi_msg,"}, {"lineno": 1901, "file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "maintenance_mode_update(intf);"}],
"warnings":[{"warn_data": {"at_line": 1492, "warn_str": "Trying to read from a user pointer.", "at": "if (intf->handlers->set_maintenance_mode)", "inst_trace": [{"instr_func": "handle_send_req", "instr_loc": 175, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "if (copy_from_user(msg.data,"}, {"instr_func": "maintenance_mode_update", "instr_loc": 1492, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "if (intf->handlers->set_maintenance_mode)"}, {"instr_func": "maintenance_mode_update", "instr_loc": 1492, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "if (intf->handlers->set_maintenance_mode)"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "TaintedPointerDereferenceChecker says:", "at_func": "maintenance_mode_update"}, "warn_no": 1},
{"warn_data": {"at_line": 1493, "warn_str": "Trying to read from a user pointer.", "at": "intf->handlers->set_maintenance_mode(", "inst_trace": [{"instr_func": "handle_send_req", "instr_loc": 175, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "if (copy_from_user(msg.data,"}, {"instr_func": "maintenance_mode_update", "instr_loc": 1493, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "intf->handlers->set_maintenance_mode("}, {"instr_func": "maintenance_mode_update", "instr_loc": 1493, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "intf->handlers->set_maintenance_mode("}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "TaintedPointerDereferenceChecker says:", "at_func": "maintenance_mode_update"}, "warn_no": 2}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %4 = alloca i8*, align 8"}, {"lineno": 318, "file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "rv = handle_send_req(priv->user, &req, retries, retry_time_ms);"}, {"lineno": 185, "file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "rv = ipmi_request_settime(user,"}, {"lineno": 2311, "file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "rv = i_ipmi_request(user,"}, {"lineno": 2269, "file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_send(intf, intf->handlers, smi_msg, priority);"}],
"warnings":[{"warn_data": {"at_line": 1846, "warn_str": "Trying to read from a user pointer.", "at": "handlers->sender(intf->send_info, smi_msg);", "inst_trace": [{"instr_func": "handle_send_req", "instr_loc": 175, "instr_file": "drivers/char/ipmi/ipmi_devintf.c", "instr": "if (copy_from_user(msg.data,"}, {"instr_func": "i_ipmi_request", "instr_loc": 2269, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_send(intf, intf->handlers, smi_msg, priority);"}, {"instr_func": "i_ipmi_request", "instr_loc": 2269, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "smi_send(intf, intf->handlers, smi_msg, priority);"}, {"instr_func": "smi_send", "instr_loc": 1834, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "{"}, {"instr_func": "smi_send", "instr_loc": 1846, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "handlers->sender(intf->send_info, smi_msg);"}, {"instr_func": "smi_send", "instr_loc": 1846, "instr_file": "drivers/char/ipmi/ipmi_msghandler.c", "instr": "handlers->sender(intf->send_info, smi_msg);"}], "at_file": "drivers/char/ipmi/ipmi_msghandler.c", "by": "TaintedPointerDereferenceChecker says:", "at_func": "smi_send"}, "warn_no": 1}]}]}