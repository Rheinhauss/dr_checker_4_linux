{"all_contexts":[
{"num_warnings": 6,
"context":[{"lineno": -1, "instr": "  %5 = alloca i8*, align 8"}],
"warnings":[{"warn_data": {"at_line": 650, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "if (copy > (count - hs))", "inst_trace": [{"instr_func": "pg_read", "instr_loc": -1, "instr": "  %5 = alloca i8*, align 8"}, {"instr_func": "pg_read", "instr_loc": 625, "instr_file": "drivers/block/paride/pg.c", "instr": "{"}, {"instr_func": "pg_read", "instr_loc": 650, "instr_file": "drivers/block/paride/pg.c", "instr": "if (copy > (count - hs))"}], "at_file": "drivers/block/paride/pg.c", "by": "IntegerOverflowDetector says:", "at_func": "pg_read"}, "warn_no": 1},
{"warn_data": {"at_line": 651, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "copy = count - hs;", "inst_trace": [{"instr_func": "pg_read", "instr_loc": -1, "instr": "  %5 = alloca i8*, align 8"}, {"instr_func": "pg_read", "instr_loc": 625, "instr_file": "drivers/block/paride/pg.c", "instr": "{"}, {"instr_func": "pg_read", "instr_loc": 651, "instr_file": "drivers/block/paride/pg.c", "instr": "copy = count - hs;"}], "at_file": "drivers/block/paride/pg.c", "by": "IntegerOverflowDetector says:", "at_func": "pg_read"}, "warn_no": 2},
{"warn_data": {"at_line": 662, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "return copy + hs;", "inst_trace": [{"instr_func": "pg_read", "instr_loc": -1, "instr": "  %5 = alloca i8*, align 8"}, {"instr_func": "pg_read", "instr_loc": 625, "instr_file": "drivers/block/paride/pg.c", "instr": "{"}, {"instr_func": "pg_read", "instr_loc": 651, "instr_file": "drivers/block/paride/pg.c", "instr": "copy = count - hs;"}, {"instr_func": "pg_read", "instr_loc": 651, "instr_file": "drivers/block/paride/pg.c", "instr": "copy = count - hs;"}, {"instr_func": "pg_read", "instr_loc": 651, "instr_file": "drivers/block/paride/pg.c", "instr": "copy = count - hs;"}, {"instr_func": "pg_read", "instr_loc": 651, "instr_file": "drivers/block/paride/pg.c", "instr": "copy = count - hs;"}, {"instr_func": "pg_read", "instr_loc": 662, "instr_file": "drivers/block/paride/pg.c", "instr": "return copy + hs;"}], "at_file": "drivers/block/paride/pg.c", "by": "IntegerOverflowDetector says:", "at_func": "pg_read"}, "warn_no": 3},
{"warn_data": {"at_line": 654, "warn_str": "Trying to use a global variable without locking.", "at": "hdr.duration = (jiffies - dev->start + HZ / 2) / HZ;", "inst_trace": [{"instr_func": "pg_read", "instr_loc": -1, "instr": "  %5 = alloca i8*, align 8"}], "at_file": "drivers/block/paride/pg.c", "by": "GlobalVariableRaceDetector says:", "at_func": "pg_read"}, "warn_no": 4},
{"warn_data": {"at_line": 654, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "hdr.duration = (jiffies - dev->start + HZ / 2) / HZ;", "inst_trace": [], "at_file": "drivers/block/paride/pg.c", "by": "TaintedSizeDetector says:", "at_func": "pg_read"}, "warn_no": 5},
{"warn_data": {"at_line": 660, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "if (copy_to_user(buf + hs, dev->bufptr, copy))", "inst_trace": [], "at_file": "drivers/block/paride/pg.c", "by": "TaintedSizeDetector says:", "at_func": "pg_read"}, "warn_no": 6}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %5 = alloca i8*, align 8"}, {"lineno": 638, "file": "drivers/block/paride/pg.c", "instr": "if (pg_completion(dev, dev->bufptr, dev->timeout))"}],
"warnings":[{"warn_data": {"at_line": 374, "warn_str": "Trying to use a global variable without locking.", "at": "if (verbose > 1)", "inst_trace": [{"instr_func": "pg_read", "instr_loc": -1, "instr": "  %5 = alloca i8*, align 8"}, {"instr_func": "pg_read", "instr_loc": 638, "instr_file": "drivers/block/paride/pg.c", "instr": "if (pg_completion(dev, dev->bufptr, dev->timeout))"}], "at_file": "drivers/block/paride/pg.c", "by": "GlobalVariableRaceDetector says:", "at_func": "pg_completion"}, "warn_no": 1}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %5 = alloca i8*, align 8"}, {"lineno": 638, "file": "drivers/block/paride/pg.c", "instr": "if (pg_completion(dev, dev->bufptr, dev->timeout))"}, {"lineno": 361, "file": "drivers/block/paride/pg.c", "instr": "r = pg_wait(dev, STAT_BUSY, STAT_DRQ | STAT_READY | STAT_ERR,"}],
"warnings":[{"warn_data": {"at_line": 0, "warn_str": "Trying to use a global variable without locking.", "at": "", "inst_trace": [{"instr_func": "pg_read", "instr_loc": -1, "instr": "  %5 = alloca i8*, align 8"}, {"instr_func": "pg_read", "instr_loc": 638, "instr_file": "drivers/block/paride/pg.c", "instr": "if (pg_completion(dev, dev->bufptr, dev->timeout))"}, {"instr_func": "pg_completion", "instr_loc": 361, "instr_file": "drivers/block/paride/pg.c", "instr": "r = pg_wait(dev, STAT_BUSY, STAT_DRQ | STAT_READY | STAT_ERR,"}], "at_file": "drivers/block/paride/pg.c", "by": "GlobalVariableRaceDetector says:", "at_func": "pg_wait"}, "warn_no": 1}]}]}