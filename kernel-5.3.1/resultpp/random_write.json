{"all_contexts":[
{"num_warnings": 4,
"context":[{"lineno": -1, "instr": "  %5 = alloca i64, align 8"}, {"lineno": 2035, "file": "drivers/char/random.c", "instr": "ret = write_pool(&input_pool, buffer, count);"}],
"warnings":[{"warn_data": {"at_line": 2020, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "count -= bytes;", "inst_trace": [{"instr_func": "random_write", "instr_loc": -1, "instr": "  %5 = alloca i64, align 8"}, {"instr_func": "random_write", "instr_loc": 2032, "instr_file": "drivers/char/random.c", "instr": "{"}, {"instr_func": "random_write", "instr_loc": 2035, "instr_file": "drivers/char/random.c", "instr": "ret = write_pool(&input_pool, buffer, count);"}, {"instr_func": "random_write", "instr_loc": 2035, "instr_file": "drivers/char/random.c", "instr": "ret = write_pool(&input_pool, buffer, count);"}, {"instr_func": "write_pool", "instr_loc": 2002, "instr_file": "drivers/char/random.c", "instr": "{"}, {"instr_func": "write_pool", "instr_loc": 2020, "instr_file": "drivers/char/random.c", "instr": "count -= bytes;"}], "at_file": "drivers/char/random.c", "by": "IntegerOverflowDetector says:", "at_func": "write_pool"}, "warn_no": 1},
{"warn_data": {"at_line": 2007, "warn_str": "Loop is bounded by a tainted value.", "at": "while (count > 0) {", "inst_trace": [{"instr_func": "random_write", "instr_loc": -1, "instr": "  %5 = alloca i64, align 8"}, {"instr_func": "random_write", "instr_loc": 2032, "instr_file": "drivers/char/random.c", "instr": "{"}, {"instr_func": "random_write", "instr_loc": 2035, "instr_file": "drivers/char/random.c", "instr": "ret = write_pool(&input_pool, buffer, count);"}, {"instr_func": "random_write", "instr_loc": 2035, "instr_file": "drivers/char/random.c", "instr": "ret = write_pool(&input_pool, buffer, count);"}, {"instr_func": "write_pool", "instr_loc": 2002, "instr_file": "drivers/char/random.c", "instr": "{"}, {"instr_func": "write_pool", "instr_loc": 2007, "instr_file": "drivers/char/random.c", "instr": "while (count > 0) {"}, {"instr_func": "write_pool", "instr_loc": 2007, "instr_file": "drivers/char/random.c", "instr": "while (count > 0) {"}], "at_file": "drivers/char/random.c", "by": "TaintedLoopBoundDetector says:", "at_func": "write_pool"}, "warn_no": 2},
{"warn_data": {"at_line": 2011, "warn_str": "Loop is bounded by a tainted value.", "at": "if (copy_from_user(&buf, p, bytes))", "inst_trace": [{"instr_func": "random_write", "instr_loc": -1, "instr": "  %5 = alloca i64, align 8"}, {"instr_func": "random_write", "instr_loc": 2032, "instr_file": "drivers/char/random.c", "instr": "{"}, {"instr_func": "random_write", "instr_loc": 2035, "instr_file": "drivers/char/random.c", "instr": "ret = write_pool(&input_pool, buffer, count);"}, {"instr_func": "random_write", "instr_loc": 2035, "instr_file": "drivers/char/random.c", "instr": "ret = write_pool(&input_pool, buffer, count);"}, {"instr_func": "write_pool", "instr_loc": 2002, "instr_file": "drivers/char/random.c", "instr": "{"}, {"instr_func": "write_pool", "instr_loc": 2020, "instr_file": "drivers/char/random.c", "instr": "count -= bytes;"}, {"instr_func": "write_pool", "instr_loc": 2020, "instr_file": "drivers/char/random.c", "instr": "count -= bytes;"}, {"instr_func": "write_pool", "instr_loc": 2020, "instr_file": "drivers/char/random.c", "instr": "count -= bytes;"}, {"instr_func": "write_pool", "instr_loc": 2010, "instr_file": "drivers/char/random.c", "instr": "bytes = min(count, sizeof(buf));"}, {"instr_func": "write_pool", "instr_loc": 2010, "instr_file": "drivers/char/random.c", "instr": "bytes = min(count, sizeof(buf));"}, {"instr_func": "write_pool", "instr_loc": 2010, "instr_file": "drivers/char/random.c", "instr": "bytes = min(count, sizeof(buf));"}, {"instr_func": "write_pool", "instr_loc": 2010, "instr_file": "drivers/char/random.c", "instr": "bytes = min(count, sizeof(buf));"}, {"instr_func": "write_pool", "instr_loc": 2010, "instr_file": "drivers/char/random.c", "instr": "bytes = min(count, sizeof(buf));"}, {"instr_func": "write_pool", "instr_loc": 2010, "instr_file": "drivers/char/random.c", "instr": "bytes = min(count, sizeof(buf));"}, {"instr_func": "write_pool", "instr_loc": 2010, "instr_file": "drivers/char/random.c", "instr": "bytes = min(count, sizeof(buf));"}, {"instr_func": "write_pool", "instr_loc": 2011, "instr_file": "drivers/char/random.c", "instr": "if (copy_from_user(&buf, p, bytes))"}, {"instr_func": "write_pool", "instr_loc": 2010, "instr_file": "drivers/char/random.c", "instr": "bytes = min(count, sizeof(buf));"}, {"instr_func": "write_pool", "instr_loc": 2010, "instr_file": "drivers/char/random.c", "instr": "bytes = min(count, sizeof(buf));"}, {"instr_func": "write_pool", "instr_loc": 2011, "instr_file": "drivers/char/random.c", "instr": "if (copy_from_user(&buf, p, bytes))"}], "at_file": "drivers/char/random.c", "by": "TaintedLoopBoundDetector says:", "at_func": "write_pool"}, "warn_no": 3},
{"warn_data": {"at_line": 2010, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "bytes = min(count, sizeof(buf));", "inst_trace": [], "at_file": "drivers/char/random.c", "by": "TaintedSizeDetector says:", "at_func": "write_pool"}, "warn_no": 4}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %5 = alloca i64, align 8"}, {"lineno": 2035, "file": "drivers/char/random.c", "instr": "ret = write_pool(&input_pool, buffer, count);"}, {"lineno": 2023, "file": "drivers/char/random.c", "instr": "mix_pool_bytes(r, buf, bytes);"}, {"lineno": 647, "file": "drivers/char/random.c", "instr": "trace_mix_pool_bytes(r->name, nbytes, _RET_IP_);"}, {"lineno": 51, "file": "./include/trace/events/random.h", "instr": "  %64 = call i32 @cpumask_test_cpu(i32 %63, %struct.cpumask* @__cpu_online_mask) #15, !dbg !7833"}, {"lineno": 344, "file": "./include/linux/cpumask.h", "instr": "  %6 = call i32 @cpumask_check(i32 %5) #15, !dbg !7754"}],
"warnings":[{"warn_data": {"at_line": 128, "warn_str": "Trying to use a global variable without locking.", "at": "  %4 = load i32, i32* @nr_cpu_ids, align 4, !dbg !7752", "inst_trace": [{"instr_func": "random_write", "instr_loc": -1, "instr": "  %5 = alloca i64, align 8"}, {"instr_func": "random_write", "instr_loc": 2035, "instr_file": "drivers/char/random.c", "instr": "ret = write_pool(&input_pool, buffer, count);"}, {"instr_func": "write_pool", "instr_loc": 2023, "instr_file": "drivers/char/random.c", "instr": "mix_pool_bytes(r, buf, bytes);"}, {"instr_func": "mix_pool_bytes", "instr_loc": 647, "instr_file": "drivers/char/random.c", "instr": "trace_mix_pool_bytes(r->name, nbytes, _RET_IP_);"}, {"instr_func": "trace_mix_pool_bytes", "instr_loc": 51, "instr_file": "./include/trace/events/random.h", "instr": "  %64 = call i32 @cpumask_test_cpu(i32 %63, %struct.cpumask* @__cpu_online_mask) #15, !dbg !7833"}, {"instr_func": "cpumask_test_cpu", "instr_loc": 344, "instr_file": "./include/linux/cpumask.h", "instr": "  %6 = call i32 @cpumask_check(i32 %5) #15, !dbg !7754"}], "at_file": "./include/linux/cpumask.h", "by": "GlobalVariableRaceDetector says:", "at_func": "cpumask_check"}, "warn_no": 1}]},
{"num_warnings": 2,
"context":[{"lineno": -1, "instr": "  %5 = alloca i64, align 8"}, {"lineno": 2035, "file": "drivers/char/random.c", "instr": "ret = write_pool(&input_pool, buffer, count);"}, {"lineno": 2023, "file": "drivers/char/random.c", "instr": "mix_pool_bytes(r, buf, bytes);"}, {"lineno": 649, "file": "drivers/char/random.c", "instr": "_mix_pool_bytes(r, in, nbytes);"}],
"warnings":[{"warn_data": {"at_line": 607, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "while (nbytes--) {", "inst_trace": [{"instr_func": "random_write", "instr_loc": -1, "instr": "  %5 = alloca i64, align 8"}, {"instr_func": "random_write", "instr_loc": 2032, "instr_file": "drivers/char/random.c", "instr": "{"}, {"instr_func": "random_write", "instr_loc": 2035, "instr_file": "drivers/char/random.c", "instr": "ret = write_pool(&input_pool, buffer, count);"}, {"instr_func": "random_write", "instr_loc": 2035, "instr_file": "drivers/char/random.c", "instr": "ret = write_pool(&input_pool, buffer, count);"}, {"instr_func": "write_pool", "instr_loc": 2002, "instr_file": "drivers/char/random.c", "instr": "{"}, {"instr_func": "write_pool", "instr_loc": 2010, "instr_file": "drivers/char/random.c", "instr": "bytes = min(count, sizeof(buf));"}, {"instr_func": "write_pool", "instr_loc": 2010, "instr_file": "drivers/char/random.c", "instr": "bytes = min(count, sizeof(buf));"}, {"instr_func": "write_pool", "instr_loc": 2010, "instr_file": "drivers/char/random.c", "instr": "bytes = min(count, sizeof(buf));"}, {"instr_func": "write_pool", "instr_loc": 2010, "instr_file": "drivers/char/random.c", "instr": "bytes = min(count, sizeof(buf));"}, {"instr_func": "write_pool", "instr_loc": 2010, "instr_file": "drivers/char/random.c", "instr": "bytes = min(count, sizeof(buf));"}, {"instr_func": "write_pool", "instr_loc": 2010, "instr_file": "drivers/char/random.c", "instr": "bytes = min(count, sizeof(buf));"}, {"instr_func": "write_pool", "instr_loc": 2010, "instr_file": "drivers/char/random.c", "instr": "bytes = min(count, sizeof(buf));"}, {"instr_func": "write_pool", "instr_loc": 2023, "instr_file": "drivers/char/random.c", "instr": "mix_pool_bytes(r, buf, bytes);"}, {"instr_func": "write_pool", "instr_loc": 2023, "instr_file": "drivers/char/random.c", "instr": "mix_pool_bytes(r, buf, bytes);"}, {"instr_func": "mix_pool_bytes", "instr_loc": 644, "instr_file": "drivers/char/random.c", "instr": "{"}, {"instr_func": "mix_pool_bytes", "instr_loc": 649, "instr_file": "drivers/char/random.c", "instr": "_mix_pool_bytes(r, in, nbytes);"}, {"instr_func": "mix_pool_bytes", "instr_loc": 649, "instr_file": "drivers/char/random.c", "instr": "_mix_pool_bytes(r, in, nbytes);"}, {"instr_func": "_mix_pool_bytes", "instr_loc": 590, "instr_file": "drivers/char/random.c", "instr": "{"}, {"instr_func": "_mix_pool_bytes", "instr_loc": 607, "instr_file": "drivers/char/random.c", "instr": "while (nbytes--) {"}], "at_file": "drivers/char/random.c", "by": "IntegerOverflowDetector says:", "at_func": "_mix_pool_bytes"}, "warn_no": 1},
{"warn_data": {"at_line": 607, "warn_str": "Loop is bounded by a tainted value.", "at": "while (nbytes--) {", "inst_trace": [{"instr_func": "random_write", "instr_loc": -1, "instr": "  %5 = alloca i64, align 8"}, {"instr_func": "random_write", "instr_loc": 2032, "instr_file": "drivers/char/random.c", "instr": "{"}, {"instr_func": "random_write", "instr_loc": 2035, "instr_file": "drivers/char/random.c", "instr": "ret = write_pool(&input_pool, buffer, count);"}, {"instr_func": "random_write", "instr_loc": 2035, "instr_file": "drivers/char/random.c", "instr": "ret = write_pool(&input_pool, buffer, count);"}, {"instr_func": "write_pool", "instr_loc": 2002, "instr_file": "drivers/char/random.c", "instr": "{"}, {"instr_func": "write_pool", "instr_loc": 2010, "instr_file": "drivers/char/random.c", "instr": "bytes = min(count, sizeof(buf));"}, {"instr_func": "write_pool", "instr_loc": 2010, "instr_file": "drivers/char/random.c", "instr": "bytes = min(count, sizeof(buf));"}, {"instr_func": "write_pool", "instr_loc": 2010, "instr_file": "drivers/char/random.c", "instr": "bytes = min(count, sizeof(buf));"}, {"instr_func": "write_pool", "instr_loc": 2010, "instr_file": "drivers/char/random.c", "instr": "bytes = min(count, sizeof(buf));"}, {"instr_func": "write_pool", "instr_loc": 2010, "instr_file": "drivers/char/random.c", "instr": "bytes = min(count, sizeof(buf));"}, {"instr_func": "write_pool", "instr_loc": 2010, "instr_file": "drivers/char/random.c", "instr": "bytes = min(count, sizeof(buf));"}, {"instr_func": "write_pool", "instr_loc": 2010, "instr_file": "drivers/char/random.c", "instr": "bytes = min(count, sizeof(buf));"}, {"instr_func": "write_pool", "instr_loc": 2023, "instr_file": "drivers/char/random.c", "instr": "mix_pool_bytes(r, buf, bytes);"}, {"instr_func": "write_pool", "instr_loc": 2023, "instr_file": "drivers/char/random.c", "instr": "mix_pool_bytes(r, buf, bytes);"}, {"instr_func": "mix_pool_bytes", "instr_loc": 644, "instr_file": "drivers/char/random.c", "instr": "{"}, {"instr_func": "mix_pool_bytes", "instr_loc": 649, "instr_file": "drivers/char/random.c", "instr": "_mix_pool_bytes(r, in, nbytes);"}, {"instr_func": "mix_pool_bytes", "instr_loc": 649, "instr_file": "drivers/char/random.c", "instr": "_mix_pool_bytes(r, in, nbytes);"}, {"instr_func": "_mix_pool_bytes", "instr_loc": 590, "instr_file": "drivers/char/random.c", "instr": "{"}, {"instr_func": "_mix_pool_bytes", "instr_loc": 607, "instr_file": "drivers/char/random.c", "instr": "while (nbytes--) {"}, {"instr_func": "_mix_pool_bytes", "instr_loc": 607, "instr_file": "drivers/char/random.c", "instr": "while (nbytes--) {"}], "at_file": "drivers/char/random.c", "by": "TaintedLoopBoundDetector says:", "at_func": "_mix_pool_bytes"}, "warn_no": 2}]}]}