{"all_contexts":[
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %5 = alloca i64, align 8"}, {"lineno": 717, "file": "drivers/media/usb/stkwebcam/stk-webcam.c", "instr": "struct stk_camera *dev = video_drvdata(fp);"}, {"lineno": 510, "file": "./include/media/v4l2-dev.h", "instr": "  %4 = call %struct.video_device* @video_devdata(%struct.file* %3) #12, !dbg !71073"}],
"warnings":[{"warn_data": {"at_line": 236, "warn_str": "Trying to use a global variable without locking.", "at": "return video_devices[iminor(file_inode(file))];", "inst_trace": [{"instr_func": "v4l_stk_read", "instr_loc": -1, "instr": "  %5 = alloca i64, align 8"}, {"instr_func": "v4l_stk_read", "instr_loc": 717, "instr_file": "drivers/media/usb/stkwebcam/stk-webcam.c", "instr": "struct stk_camera *dev = video_drvdata(fp);"}, {"instr_func": "video_drvdata", "instr_loc": 510, "instr_file": "./include/media/v4l2-dev.h", "instr": "  %4 = call %struct.video_device* @video_devdata(%struct.file* %3) #12, !dbg !71073"}], "at_file": "drivers/media/v4l2-core/v4l2-dev.c", "by": "GlobalVariableRaceDetector says:", "at_func": "video_devdata"}, "warn_no": 1}]},
{"num_warnings": 3,
"context":[{"lineno": -1, "instr": "  %5 = alloca i64, align 8"}, {"lineno": 722, "file": "drivers/media/usb/stkwebcam/stk-webcam.c", "instr": "ret = stk_read(fp, buf, count, f_pos);"}],
"warnings":[{"warn_data": {"at_line": 689, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "if (count + *f_pos > dev->frame_size)", "inst_trace": [{"instr_func": "v4l_stk_read", "instr_loc": -1, "instr": "  %5 = alloca i64, align 8"}, {"instr_func": "v4l_stk_read", "instr_loc": 716, "instr_file": "drivers/media/usb/stkwebcam/stk-webcam.c", "instr": "{"}, {"instr_func": "v4l_stk_read", "instr_loc": 722, "instr_file": "drivers/media/usb/stkwebcam/stk-webcam.c", "instr": "ret = stk_read(fp, buf, count, f_pos);"}, {"instr_func": "v4l_stk_read", "instr_loc": 722, "instr_file": "drivers/media/usb/stkwebcam/stk-webcam.c", "instr": "ret = stk_read(fp, buf, count, f_pos);"}, {"instr_func": "stk_read", "instr_loc": 654, "instr_file": "drivers/media/usb/stkwebcam/stk-webcam.c", "instr": "{"}, {"instr_func": "stk_read", "instr_loc": 689, "instr_file": "drivers/media/usb/stkwebcam/stk-webcam.c", "instr": "if (count + *f_pos > dev->frame_size)"}], "at_file": "drivers/media/usb/stkwebcam/stk-webcam.c", "by": "IntegerOverflowDetector says:", "at_func": "stk_read"}, "warn_no": 1},
{"warn_data": {"at_line": 697, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "sbuf = list_first_entry(&dev->sio_full, struct stk_sio_buffer, list);", "inst_trace": [], "at_file": "drivers/media/usb/stkwebcam/stk-webcam.c", "by": "TaintedSizeDetector says:", "at_func": "stk_read"}, "warn_no": 2},
{"warn_data": {"at_line": 703, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "*f_pos += count;", "inst_trace": [{"instr_func": "v4l_stk_read", "instr_loc": -1, "instr": "  %5 = alloca i64, align 8"}, {"instr_func": "v4l_stk_read", "instr_loc": 716, "instr_file": "drivers/media/usb/stkwebcam/stk-webcam.c", "instr": "{"}, {"instr_func": "v4l_stk_read", "instr_loc": 722, "instr_file": "drivers/media/usb/stkwebcam/stk-webcam.c", "instr": "ret = stk_read(fp, buf, count, f_pos);"}, {"instr_func": "v4l_stk_read", "instr_loc": 722, "instr_file": "drivers/media/usb/stkwebcam/stk-webcam.c", "instr": "ret = stk_read(fp, buf, count, f_pos);"}, {"instr_func": "stk_read", "instr_loc": 654, "instr_file": "drivers/media/usb/stkwebcam/stk-webcam.c", "instr": "{"}, {"instr_func": "stk_read", "instr_loc": 703, "instr_file": "drivers/media/usb/stkwebcam/stk-webcam.c", "instr": "*f_pos += count;"}], "at_file": "drivers/media/usb/stkwebcam/stk-webcam.c", "by": "IntegerOverflowDetector says:", "at_func": "stk_read"}, "warn_no": 3}]}]}