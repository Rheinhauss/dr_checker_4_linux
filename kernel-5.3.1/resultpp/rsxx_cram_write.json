{"all_contexts":[
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %5 = alloca i64, align 8"}],
"warnings":[{"warn_data": {"at_line": 199, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "*ppos += cnt;", "inst_trace": [{"instr_func": "rsxx_cram_write", "instr_loc": -1, "instr": "  %5 = alloca i64, align 8"}, {"instr_func": "rsxx_cram_write", "instr_loc": 186, "instr_file": "drivers/block/rsxx/core.c", "instr": "{"}, {"instr_func": "rsxx_cram_write", "instr_loc": 199, "instr_file": "drivers/block/rsxx/core.c", "instr": "*ppos += cnt;"}], "at_file": "drivers/block/rsxx/core.c", "by": "IntegerOverflowDetector says:", "at_func": "rsxx_cram_write"}, "warn_no": 1}]},
{"num_warnings": 3,
"context":[{"lineno": -1, "instr": "  %5 = alloca i64, align 8"}, {"lineno": 195, "file": "drivers/block/rsxx/core.c", "instr": "st = rsxx_creg_write(card, CREG_ADD_CRAM + (u32)*ppos, cnt, buf, 1);"}, {"lineno": 475, "file": "drivers/block/rsxx/cregs.c", "instr": "return issue_creg_rw(card, addr, size8, data, byte_stream, 0);"}],
"warnings":[{"warn_data": {"at_line": 463, "warn_str": "Loop is bounded by a tainted value.", "at": "} while (size8);", "inst_trace": [{"instr_func": "rsxx_cram_write", "instr_loc": -1, "instr": "  %5 = alloca i64, align 8"}, {"instr_func": "rsxx_cram_write", "instr_loc": 186, "instr_file": "drivers/block/rsxx/core.c", "instr": "{"}, {"instr_func": "rsxx_cram_write", "instr_loc": 195, "instr_file": "drivers/block/rsxx/core.c", "instr": "st = rsxx_creg_write(card, CREG_ADD_CRAM + (u32)*ppos, cnt, buf, 1);"}, {"instr_func": "rsxx_cram_write", "instr_loc": 195, "instr_file": "drivers/block/rsxx/core.c", "instr": "st = rsxx_creg_write(card, CREG_ADD_CRAM + (u32)*ppos, cnt, buf, 1);"}, {"instr_func": "rsxx_creg_write", "instr_loc": 474, "instr_file": "drivers/block/rsxx/cregs.c", "instr": "{"}, {"instr_func": "rsxx_creg_write", "instr_loc": 475, "instr_file": "drivers/block/rsxx/cregs.c", "instr": "return issue_creg_rw(card, addr, size8, data, byte_stream, 0);"}, {"instr_func": "rsxx_creg_write", "instr_loc": 475, "instr_file": "drivers/block/rsxx/cregs.c", "instr": "return issue_creg_rw(card, addr, size8, data, byte_stream, 0);"}, {"instr_func": "issue_creg_rw", "instr_loc": 444, "instr_file": "drivers/block/rsxx/cregs.c", "instr": "{"}, {"instr_func": "issue_creg_rw", "instr_loc": 463, "instr_file": "drivers/block/rsxx/cregs.c", "instr": "} while (size8);"}, {"instr_func": "issue_creg_rw", "instr_loc": 463, "instr_file": "drivers/block/rsxx/cregs.c", "instr": "} while (size8);"}], "at_file": "drivers/block/rsxx/cregs.c", "by": "TaintedLoopBoundDetector says:", "at_func": "issue_creg_rw"}, "warn_no": 1},
{"warn_data": {"at_line": 462, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "size8 -= xfer;", "inst_trace": [{"instr_func": "rsxx_cram_write", "instr_loc": -1, "instr": "  %5 = alloca i64, align 8"}, {"instr_func": "rsxx_cram_write", "instr_loc": 186, "instr_file": "drivers/block/rsxx/core.c", "instr": "{"}, {"instr_func": "rsxx_cram_write", "instr_loc": 195, "instr_file": "drivers/block/rsxx/core.c", "instr": "st = rsxx_creg_write(card, CREG_ADD_CRAM + (u32)*ppos, cnt, buf, 1);"}, {"instr_func": "rsxx_cram_write", "instr_loc": 195, "instr_file": "drivers/block/rsxx/core.c", "instr": "st = rsxx_creg_write(card, CREG_ADD_CRAM + (u32)*ppos, cnt, buf, 1);"}, {"instr_func": "rsxx_creg_write", "instr_loc": 474, "instr_file": "drivers/block/rsxx/cregs.c", "instr": "{"}, {"instr_func": "rsxx_creg_write", "instr_loc": 475, "instr_file": "drivers/block/rsxx/cregs.c", "instr": "return issue_creg_rw(card, addr, size8, data, byte_stream, 0);"}, {"instr_func": "rsxx_creg_write", "instr_loc": 475, "instr_file": "drivers/block/rsxx/cregs.c", "instr": "return issue_creg_rw(card, addr, size8, data, byte_stream, 0);"}, {"instr_func": "issue_creg_rw", "instr_loc": 444, "instr_file": "drivers/block/rsxx/cregs.c", "instr": "{"}, {"instr_func": "issue_creg_rw", "instr_loc": 462, "instr_file": "drivers/block/rsxx/cregs.c", "instr": "size8 -= xfer;"}], "at_file": "drivers/block/rsxx/cregs.c", "by": "IntegerOverflowDetector says:", "at_func": "issue_creg_rw"}, "warn_no": 2},
{"warn_data": {"at_line": 461, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "addr  += xfer;", "inst_trace": [{"instr_func": "rsxx_cram_write", "instr_loc": -1, "instr": "  %5 = alloca i64, align 8"}, {"instr_func": "rsxx_cram_write", "instr_loc": 186, "instr_file": "drivers/block/rsxx/core.c", "instr": "{"}, {"instr_func": "rsxx_cram_write", "instr_loc": 195, "instr_file": "drivers/block/rsxx/core.c", "instr": "st = rsxx_creg_write(card, CREG_ADD_CRAM + (u32)*ppos, cnt, buf, 1);"}, {"instr_func": "rsxx_cram_write", "instr_loc": 195, "instr_file": "drivers/block/rsxx/core.c", "instr": "st = rsxx_creg_write(card, CREG_ADD_CRAM + (u32)*ppos, cnt, buf, 1);"}, {"instr_func": "rsxx_creg_write", "instr_loc": 474, "instr_file": "drivers/block/rsxx/cregs.c", "instr": "{"}, {"instr_func": "rsxx_creg_write", "instr_loc": 475, "instr_file": "drivers/block/rsxx/cregs.c", "instr": "return issue_creg_rw(card, addr, size8, data, byte_stream, 0);"}, {"instr_func": "rsxx_creg_write", "instr_loc": 475, "instr_file": "drivers/block/rsxx/cregs.c", "instr": "return issue_creg_rw(card, addr, size8, data, byte_stream, 0);"}, {"instr_func": "issue_creg_rw", "instr_loc": 444, "instr_file": "drivers/block/rsxx/cregs.c", "instr": "{"}, {"instr_func": "issue_creg_rw", "instr_loc": 453, "instr_file": "drivers/block/rsxx/cregs.c", "instr": "xfer = min_t(unsigned int, size8, MAX_CREG_DATA8);"}, {"instr_func": "issue_creg_rw", "instr_loc": 453, "instr_file": "drivers/block/rsxx/cregs.c", "instr": "xfer = min_t(unsigned int, size8, MAX_CREG_DATA8);"}, {"instr_func": "issue_creg_rw", "instr_loc": 453, "instr_file": "drivers/block/rsxx/cregs.c", "instr": "xfer = min_t(unsigned int, size8, MAX_CREG_DATA8);"}, {"instr_func": "issue_creg_rw", "instr_loc": 453, "instr_file": "drivers/block/rsxx/cregs.c", "instr": "xfer = min_t(unsigned int, size8, MAX_CREG_DATA8);"}, {"instr_func": "issue_creg_rw", "instr_loc": 453, "instr_file": "drivers/block/rsxx/cregs.c", "instr": "xfer = min_t(unsigned int, size8, MAX_CREG_DATA8);"}, {"instr_func": "issue_creg_rw", "instr_loc": 453, "instr_file": "drivers/block/rsxx/cregs.c", "instr": "xfer = min_t(unsigned int, size8, MAX_CREG_DATA8);"}, {"instr_func": "issue_creg_rw", "instr_loc": 453, "instr_file": "drivers/block/rsxx/cregs.c", "instr": "xfer = min_t(unsigned int, size8, MAX_CREG_DATA8);"}, {"instr_func": "issue_creg_rw", "instr_loc": 461, "instr_file": "drivers/block/rsxx/cregs.c", "instr": "addr  += xfer;"}], "at_file": "drivers/block/rsxx/cregs.c", "by": "IntegerOverflowDetector says:", "at_func": "issue_creg_rw"}, "warn_no": 3}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %5 = alloca i64, align 8"}, {"lineno": 195, "file": "drivers/block/rsxx/core.c", "instr": "st = rsxx_creg_write(card, CREG_ADD_CRAM + (u32)*ppos, cnt, buf, 1);"}, {"lineno": 475, "file": "drivers/block/rsxx/cregs.c", "instr": "return issue_creg_rw(card, addr, size8, data, byte_stream, 0);"}, {"lineno": 455, "file": "drivers/block/rsxx/cregs.c", "instr": "st = __issue_creg_rw(card, op, addr, xfer,"}, {"lineno": 388, "file": "drivers/block/rsxx/cregs.c", "instr": "st = creg_queue_cmd(card, op, addr, cnt8, buf, stream, creg_cmd_done_cb,"}],
"warnings":[{"warn_data": {"at_line": 168, "warn_str": "Trying to use a global variable without locking.", "at": "cmd = kmem_cache_alloc(creg_cmd_pool, GFP_KERNEL);", "inst_trace": [{"instr_func": "rsxx_cram_write", "instr_loc": -1, "instr": "  %5 = alloca i64, align 8"}, {"instr_func": "rsxx_cram_write", "instr_loc": 195, "instr_file": "drivers/block/rsxx/core.c", "instr": "st = rsxx_creg_write(card, CREG_ADD_CRAM + (u32)*ppos, cnt, buf, 1);"}, {"instr_func": "rsxx_creg_write", "instr_loc": 475, "instr_file": "drivers/block/rsxx/cregs.c", "instr": "return issue_creg_rw(card, addr, size8, data, byte_stream, 0);"}, {"instr_func": "issue_creg_rw", "instr_loc": 455, "instr_file": "drivers/block/rsxx/cregs.c", "instr": "st = __issue_creg_rw(card, op, addr, xfer,"}, {"instr_func": "__issue_creg_rw", "instr_loc": 388, "instr_file": "drivers/block/rsxx/cregs.c", "instr": "st = creg_queue_cmd(card, op, addr, cnt8, buf, stream, creg_cmd_done_cb,"}], "at_file": "drivers/block/rsxx/cregs.c", "by": "GlobalVariableRaceDetector says:", "at_func": "creg_queue_cmd"}, "warn_no": 1}]}]}