{"all_contexts":[
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %5 = alloca %struct.device*, align 8"}, {"lineno": 438, "file": "drivers/acpi/acpi_tad.c", "instr": "int ret = acpi_tad_alarm_write(dev, buf, ACPI_TAD_AC_TIMER);"}],
"warnings":[{"warn_data": {"at_line": 336, "warn_str": "Trying to use a global variable without locking.", "at": "return acpi_tad_wake_write(dev, buf, \"_STV\", timer_id, alarm_specval);", "inst_trace": [{"instr_func": "ac_alarm_store", "instr_loc": -1, "instr": "  %5 = alloca %struct.device*, align 8"}, {"instr_func": "ac_alarm_store", "instr_loc": 438, "instr_file": "drivers/acpi/acpi_tad.c", "instr": "int ret = acpi_tad_alarm_write(dev, buf, ACPI_TAD_AC_TIMER);"}], "at_file": "drivers/acpi/acpi_tad.c", "by": "GlobalVariableRaceDetector says:", "at_func": "acpi_tad_alarm_write"}, "warn_no": 1}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %5 = alloca %struct.device*, align 8"}, {"lineno": 438, "file": "drivers/acpi/acpi_tad.c", "instr": "int ret = acpi_tad_alarm_write(dev, buf, ACPI_TAD_AC_TIMER);"}, {"lineno": 336, "file": "drivers/acpi/acpi_tad.c", "instr": "return acpi_tad_wake_write(dev, buf, \"_STV\", timer_id, alarm_specval);"}, {"lineno": 297, "file": "drivers/acpi/acpi_tad.c", "instr": "return acpi_tad_wake_set(dev, method, timer_id, value);"}, {"lineno": 253, "file": "drivers/acpi/acpi_tad.c", "instr": "acpi_handle handle = ACPI_HANDLE(dev);"}],
"warnings":[{"warn_data": {"at_line": 1371, "warn_str": "Trying to use a global variable without locking.", "at": "fwnode->ops == &acpi_device_fwnode_ops;", "inst_trace": [{"instr_func": "ac_alarm_store", "instr_loc": -1, "instr": "  %5 = alloca %struct.device*, align 8"}, {"instr_func": "ac_alarm_store", "instr_loc": 438, "instr_file": "drivers/acpi/acpi_tad.c", "instr": "int ret = acpi_tad_alarm_write(dev, buf, ACPI_TAD_AC_TIMER);"}, {"instr_func": "acpi_tad_alarm_write", "instr_loc": 336, "instr_file": "drivers/acpi/acpi_tad.c", "instr": "return acpi_tad_wake_write(dev, buf, \"_STV\", timer_id, alarm_specval);"}, {"instr_func": "acpi_tad_wake_write", "instr_loc": 297, "instr_file": "drivers/acpi/acpi_tad.c", "instr": "return acpi_tad_wake_set(dev, method, timer_id, value);"}, {"instr_func": "acpi_tad_wake_set", "instr_loc": 253, "instr_file": "drivers/acpi/acpi_tad.c", "instr": "acpi_handle handle = ACPI_HANDLE(dev);"}], "at_file": "drivers/acpi/property.c", "by": "GlobalVariableRaceDetector says:", "at_func": "is_acpi_device_node"}, "warn_no": 1}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %5 = alloca %struct.device*, align 8"}, {"lineno": 438, "file": "drivers/acpi/acpi_tad.c", "instr": "int ret = acpi_tad_alarm_write(dev, buf, ACPI_TAD_AC_TIMER);"}, {"lineno": 336, "file": "drivers/acpi/acpi_tad.c", "instr": "return acpi_tad_wake_write(dev, buf, \"_STV\", timer_id, alarm_specval);"}, {"lineno": 297, "file": "drivers/acpi/acpi_tad.c", "instr": "return acpi_tad_wake_set(dev, method, timer_id, value);"}, {"lineno": 270, "file": "drivers/acpi/acpi_tad.c", "instr": "status = acpi_evaluate_integer(handle, method, &arg_list, &retval);"}],
"warnings":[{"warn_data": {"at_line": 296, "warn_str": "Trying to use a global variable without locking.", "at": "ACPI_DEBUG_PRINT((ACPI_DB_INFO, \"Return value [%llu]\\n\", *data));", "inst_trace": [{"instr_func": "ac_alarm_store", "instr_loc": -1, "instr": "  %5 = alloca %struct.device*, align 8"}, {"instr_func": "ac_alarm_store", "instr_loc": 438, "instr_file": "drivers/acpi/acpi_tad.c", "instr": "int ret = acpi_tad_alarm_write(dev, buf, ACPI_TAD_AC_TIMER);"}, {"instr_func": "acpi_tad_alarm_write", "instr_loc": 336, "instr_file": "drivers/acpi/acpi_tad.c", "instr": "return acpi_tad_wake_write(dev, buf, \"_STV\", timer_id, alarm_specval);"}, {"instr_func": "acpi_tad_wake_write", "instr_loc": 297, "instr_file": "drivers/acpi/acpi_tad.c", "instr": "return acpi_tad_wake_set(dev, method, timer_id, value);"}, {"instr_func": "acpi_tad_wake_set", "instr_loc": 270, "instr_file": "drivers/acpi/acpi_tad.c", "instr": "status = acpi_evaluate_integer(handle, method, &arg_list, &retval);"}], "at_file": "drivers/acpi/utils.c", "by": "GlobalVariableRaceDetector says:", "at_func": "acpi_evaluate_integer"}, "warn_no": 1}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %5 = alloca %struct.device*, align 8"}, {"lineno": 438, "file": "drivers/acpi/acpi_tad.c", "instr": "int ret = acpi_tad_alarm_write(dev, buf, ACPI_TAD_AC_TIMER);"}, {"lineno": 336, "file": "drivers/acpi/acpi_tad.c", "instr": "return acpi_tad_wake_write(dev, buf, \"_STV\", timer_id, alarm_specval);"}, {"lineno": 297, "file": "drivers/acpi/acpi_tad.c", "instr": "return acpi_tad_wake_set(dev, method, timer_id, value);"}, {"lineno": 270, "file": "drivers/acpi/acpi_tad.c", "instr": "status = acpi_evaluate_integer(handle, method, &arg_list, &retval);"}, {"lineno": 283, "file": "drivers/acpi/utils.c", "instr": "status = acpi_evaluate_object(handle, pathname, arguments, &buffer);"}],
"warnings":[{"warn_data": {"at_line": 210, "warn_str": "Trying to use a global variable without locking.", "at": "ACPI_DEBUG_PRINT((ACPI_DB_INFO,", "inst_trace": [{"instr_func": "ac_alarm_store", "instr_loc": -1, "instr": "  %5 = alloca %struct.device*, align 8"}, {"instr_func": "ac_alarm_store", "instr_loc": 438, "instr_file": "drivers/acpi/acpi_tad.c", "instr": "int ret = acpi_tad_alarm_write(dev, buf, ACPI_TAD_AC_TIMER);"}, {"instr_func": "acpi_tad_alarm_write", "instr_loc": 336, "instr_file": "drivers/acpi/acpi_tad.c", "instr": "return acpi_tad_wake_write(dev, buf, \"_STV\", timer_id, alarm_specval);"}, {"instr_func": "acpi_tad_wake_write", "instr_loc": 297, "instr_file": "drivers/acpi/acpi_tad.c", "instr": "return acpi_tad_wake_set(dev, method, timer_id, value);"}, {"instr_func": "acpi_tad_wake_set", "instr_loc": 270, "instr_file": "drivers/acpi/acpi_tad.c", "instr": "status = acpi_evaluate_integer(handle, method, &arg_list, &retval);"}, {"instr_func": "acpi_evaluate_integer", "instr_loc": 283, "instr_file": "drivers/acpi/utils.c", "instr": "status = acpi_evaluate_object(handle, pathname, arguments, &buffer);"}], "at_file": "drivers/acpi/acpica/nsxfeval.c", "by": "GlobalVariableRaceDetector says:", "at_func": "acpi_evaluate_object"}, "warn_no": 1}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %5 = alloca %struct.device*, align 8"}, {"lineno": 438, "file": "drivers/acpi/acpi_tad.c", "instr": "int ret = acpi_tad_alarm_write(dev, buf, ACPI_TAD_AC_TIMER);"}, {"lineno": 336, "file": "drivers/acpi/acpi_tad.c", "instr": "return acpi_tad_wake_write(dev, buf, \"_STV\", timer_id, alarm_specval);"}, {"lineno": 297, "file": "drivers/acpi/acpi_tad.c", "instr": "return acpi_tad_wake_set(dev, method, timer_id, value);"}, {"lineno": 270, "file": "drivers/acpi/acpi_tad.c", "instr": "status = acpi_evaluate_integer(handle, method, &arg_list, &retval);"}, {"lineno": 296, "file": "drivers/acpi/utils.c", "instr": "ACPI_DEBUG_PRINT((ACPI_DB_INFO, \"Return value [%llu]\\n\", *data));"}],
"warnings":[{"warn_data": {"at_line": 138, "warn_str": "Trying to use a global variable without locking.", "at": "if (!ACPI_IS_DEBUG_ENABLED(requested_debug_level, component_id)) {", "inst_trace": [{"instr_func": "ac_alarm_store", "instr_loc": -1, "instr": "  %5 = alloca %struct.device*, align 8"}, {"instr_func": "ac_alarm_store", "instr_loc": 438, "instr_file": "drivers/acpi/acpi_tad.c", "instr": "int ret = acpi_tad_alarm_write(dev, buf, ACPI_TAD_AC_TIMER);"}, {"instr_func": "acpi_tad_alarm_write", "instr_loc": 336, "instr_file": "drivers/acpi/acpi_tad.c", "instr": "return acpi_tad_wake_write(dev, buf, \"_STV\", timer_id, alarm_specval);"}, {"instr_func": "acpi_tad_wake_write", "instr_loc": 297, "instr_file": "drivers/acpi/acpi_tad.c", "instr": "return acpi_tad_wake_set(dev, method, timer_id, value);"}, {"instr_func": "acpi_tad_wake_set", "instr_loc": 270, "instr_file": "drivers/acpi/acpi_tad.c", "instr": "status = acpi_evaluate_integer(handle, method, &arg_list, &retval);"}, {"instr_func": "acpi_evaluate_integer", "instr_loc": 296, "instr_file": "drivers/acpi/utils.c", "instr": "ACPI_DEBUG_PRINT((ACPI_DB_INFO, \"Return value [%llu]\\n\", *data));"}], "at_file": "drivers/acpi/acpica/utdebug.c", "by": "GlobalVariableRaceDetector says:", "at_func": "acpi_debug_print"}, "warn_no": 1}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %5 = alloca %struct.device*, align 8"}, {"lineno": 438, "file": "drivers/acpi/acpi_tad.c", "instr": "int ret = acpi_tad_alarm_write(dev, buf, ACPI_TAD_AC_TIMER);"}, {"lineno": 336, "file": "drivers/acpi/acpi_tad.c", "instr": "return acpi_tad_wake_write(dev, buf, \"_STV\", timer_id, alarm_specval);"}, {"lineno": 297, "file": "drivers/acpi/acpi_tad.c", "instr": "return acpi_tad_wake_set(dev, method, timer_id, value);"}, {"lineno": 270, "file": "drivers/acpi/acpi_tad.c", "instr": "status = acpi_evaluate_integer(handle, method, &arg_list, &retval);"}, {"lineno": 290, "file": "drivers/acpi/utils.c", "instr": "acpi_util_eval_error(handle, pathname, AE_BAD_DATA);"}],
"warnings":[{"warn_data": {"at_line": 34, "warn_str": "Trying to use a global variable without locking.", "at": "ACPI_DEBUG_PRINT((ACPI_DB_INFO, \"Evaluate [%s.%s]: %s\\n\",", "inst_trace": [{"instr_func": "ac_alarm_store", "instr_loc": -1, "instr": "  %5 = alloca %struct.device*, align 8"}, {"instr_func": "ac_alarm_store", "instr_loc": 438, "instr_file": "drivers/acpi/acpi_tad.c", "instr": "int ret = acpi_tad_alarm_write(dev, buf, ACPI_TAD_AC_TIMER);"}, {"instr_func": "acpi_tad_alarm_write", "instr_loc": 336, "instr_file": "drivers/acpi/acpi_tad.c", "instr": "return acpi_tad_wake_write(dev, buf, \"_STV\", timer_id, alarm_specval);"}, {"instr_func": "acpi_tad_wake_write", "instr_loc": 297, "instr_file": "drivers/acpi/acpi_tad.c", "instr": "return acpi_tad_wake_set(dev, method, timer_id, value);"}, {"instr_func": "acpi_tad_wake_set", "instr_loc": 270, "instr_file": "drivers/acpi/acpi_tad.c", "instr": "status = acpi_evaluate_integer(handle, method, &arg_list, &retval);"}, {"instr_func": "acpi_evaluate_integer", "instr_loc": 290, "instr_file": "drivers/acpi/utils.c", "instr": "acpi_util_eval_error(handle, pathname, AE_BAD_DATA);"}], "at_file": "drivers/acpi/utils.c", "by": "GlobalVariableRaceDetector says:", "at_func": "acpi_util_eval_error"}, "warn_no": 1}]}]}