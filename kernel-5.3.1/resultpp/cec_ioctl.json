{"all_contexts":[
{"num_warnings": 2,
"context":[{"lineno": -1, "instr": "  %4 = alloca i64, align 8"}, {"lineno": 522, "file": "drivers/media/cec/cec-api.c", "instr": "return cec_s_mode(adap, fh, parg);"}],
"warnings":[{"warn_data": {"at_line": 374, "warn_str": "Trying to use a global variable without locking.", "at": "dprintk(1, \"%s: MONITOR_ALL not supported\\n\", __func__);", "inst_trace": [{"instr_func": "cec_ioctl", "instr_loc": -1, "instr": "  %4 = alloca i64, align 8"}, {"instr_func": "cec_ioctl", "instr_loc": 522, "instr_file": "drivers/media/cec/cec-api.c", "instr": "return cec_s_mode(adap, fh, parg);"}], "at_file": "drivers/media/cec/cec-api.c", "by": "GlobalVariableRaceDetector says:", "at_func": "cec_s_mode"}, "warn_no": 1},
{"warn_data": {"at_line": 349, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "{", "inst_trace": [], "at_file": "drivers/media/cec/cec-api.c", "by": "TaintedSizeDetector says:", "at_func": "cec_s_mode"}, "warn_no": 2}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %4 = alloca i64, align 8"}, {"lineno": 519, "file": "drivers/media/cec/cec-api.c", "instr": "return cec_g_mode(adap, fh, parg);"}],
"warnings":[{"warn_data": {"at_line": 339, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "{", "inst_trace": [], "at_file": "drivers/media/cec/cec-api.c", "by": "TaintedSizeDetector says:", "at_func": "cec_g_mode"}, "warn_no": 1}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %4 = alloca i64, align 8"}, {"lineno": 516, "file": "drivers/media/cec/cec-api.c", "instr": "return cec_dqevent(adap, fh, block, parg);"}],
"warnings":[{"warn_data": {"at_line": 323, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "list_del(&ev->list);", "inst_trace": [], "at_file": "drivers/media/cec/cec-api.c", "by": "TaintedSizeDetector says:", "at_func": "cec_dqevent"}, "warn_no": 1}]},
{"num_warnings": 2,
"context":[{"lineno": -1, "instr": "  %4 = alloca i64, align 8"}, {"lineno": 513, "file": "drivers/media/cec/cec-api.c", "instr": "return cec_receive(adap, fh, block, parg);"}],
"warnings":[{"warn_data": {"at_line": 271, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "{", "inst_trace": [], "at_file": "drivers/media/cec/cec-api.c", "by": "TaintedSizeDetector says:", "at_func": "cec_receive"}, "warn_no": 1},
{"warn_data": {"at_line": 281, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "msg.flags = 0;", "inst_trace": [], "at_file": "drivers/media/cec/cec-api.c", "by": "TaintedSizeDetector says:", "at_func": "cec_receive"}, "warn_no": 2}]},
{"num_warnings": 2,
"context":[{"lineno": -1, "instr": "  %4 = alloca i64, align 8"}, {"lineno": 510, "file": "drivers/media/cec/cec-api.c", "instr": "return cec_transmit(adap, fh, block, parg);"}],
"warnings":[{"warn_data": {"at_line": 198, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "if (copy_from_user(&msg, parg, sizeof(msg)))", "inst_trace": [], "at_file": "drivers/media/cec/cec-api.c", "by": "TaintedSizeDetector says:", "at_func": "cec_transmit"}, "warn_no": 1},
{"warn_data": {"at_line": 213, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "if (copy_to_user(parg, &msg, sizeof(msg)))", "inst_trace": [], "at_file": "drivers/media/cec/cec-api.c", "by": "TaintedSizeDetector says:", "at_func": "cec_transmit"}, "warn_no": 2}]},
{"num_warnings": 2,
"context":[{"lineno": -1, "instr": "  %4 = alloca i64, align 8"}, {"lineno": 513, "file": "drivers/media/cec/cec-api.c", "instr": "return cec_receive(adap, fh, block, parg);"}, {"lineno": 278, "file": "drivers/media/cec/cec-api.c", "instr": "err = cec_receive_msg(fh, &msg, block);"}, {"lineno": 252, "file": "drivers/media/cec/cec-api.c", "instr": "res = wait_event_interruptible_timeout(fh->wait,"}],
"warnings":[{"warn_data": {"at_line": 311, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "  %5 = add i64 %4, 4, !dbg !54446", "inst_trace": [{"instr_func": "cec_receive", "instr_loc": 271, "instr_file": "drivers/media/cec/cec-api.c", "instr": "{"}, {"instr_func": "cec_receive_msg", "instr_loc": 252, "instr_file": "drivers/media/cec/cec-api.c", "instr": "res = wait_event_interruptible_timeout(fh->wait,"}, {"instr_func": "cec_receive_msg", "instr_loc": 252, "instr_file": "drivers/media/cec/cec-api.c", "instr": "res = wait_event_interruptible_timeout(fh->wait,"}, {"instr_func": "cec_receive_msg", "instr_loc": 252, "instr_file": "drivers/media/cec/cec-api.c", "instr": "res = wait_event_interruptible_timeout(fh->wait,"}, {"instr_func": "cec_receive_msg", "instr_loc": 252, "instr_file": "drivers/media/cec/cec-api.c", "instr": "res = wait_event_interruptible_timeout(fh->wait,"}, {"instr_func": "_msecs_to_jiffies.202", "instr_loc": 310, "instr_file": "./include/linux/jiffies.h", "instr": "  store i32 %0, i32* %2, align 4"}, {"instr_func": "_msecs_to_jiffies.202", "instr_loc": 311, "instr_file": "./include/linux/jiffies.h", "instr": "  %3 = load i32, i32* %2, align 4, !dbg !54445"}], "at_file": "./include/linux/jiffies.h", "by": "IntegerOverflowDetector says:", "at_func": "_msecs_to_jiffies.202"}, "warn_no": 1},
{"warn_data": {"at_line": 311, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "  %6 = sub i64 %5, 1, !dbg !54447", "inst_trace": [{"instr_func": "cec_receive", "instr_loc": 271, "instr_file": "drivers/media/cec/cec-api.c", "instr": "{"}, {"instr_func": "cec_receive_msg", "instr_loc": 252, "instr_file": "drivers/media/cec/cec-api.c", "instr": "res = wait_event_interruptible_timeout(fh->wait,"}, {"instr_func": "cec_receive_msg", "instr_loc": 252, "instr_file": "drivers/media/cec/cec-api.c", "instr": "res = wait_event_interruptible_timeout(fh->wait,"}, {"instr_func": "cec_receive_msg", "instr_loc": 252, "instr_file": "drivers/media/cec/cec-api.c", "instr": "res = wait_event_interruptible_timeout(fh->wait,"}, {"instr_func": "cec_receive_msg", "instr_loc": 252, "instr_file": "drivers/media/cec/cec-api.c", "instr": "res = wait_event_interruptible_timeout(fh->wait,"}, {"instr_func": "_msecs_to_jiffies.202", "instr_loc": 310, "instr_file": "./include/linux/jiffies.h", "instr": "  store i32 %0, i32* %2, align 4"}, {"instr_func": "_msecs_to_jiffies.202", "instr_loc": 311, "instr_file": "./include/linux/jiffies.h", "instr": "  %3 = load i32, i32* %2, align 4, !dbg !54445"}, {"instr_func": "_msecs_to_jiffies.202", "instr_loc": 311, "instr_file": "./include/linux/jiffies.h", "instr": "  %5 = add i64 %4, 4, !dbg !54446"}], "at_file": "./include/linux/jiffies.h", "by": "IntegerOverflowDetector says:", "at_func": "_msecs_to_jiffies.202"}, "warn_no": 2}]},
{"num_warnings": 2,
"context":[{"lineno": -1, "instr": "  %4 = alloca i64, align 8"}, {"lineno": 513, "file": "drivers/media/cec/cec-api.c", "instr": "return cec_receive(adap, fh, block, parg);"}, {"lineno": 278, "file": "drivers/media/cec/cec-api.c", "instr": "err = cec_receive_msg(fh, &msg, block);"}, {"lineno": 252, "file": "drivers/media/cec/cec-api.c", "instr": "res = wait_event_interruptible_timeout(fh->wait,"}],
"warnings":[{"warn_data": {"at_line": 311, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "  %5 = add i64 %4, 4, !dbg !54446", "inst_trace": [{"instr_func": "cec_receive", "instr_loc": 271, "instr_file": "drivers/media/cec/cec-api.c", "instr": "{"}, {"instr_func": "cec_receive_msg", "instr_loc": 252, "instr_file": "drivers/media/cec/cec-api.c", "instr": "res = wait_event_interruptible_timeout(fh->wait,"}, {"instr_func": "cec_receive_msg", "instr_loc": 252, "instr_file": "drivers/media/cec/cec-api.c", "instr": "res = wait_event_interruptible_timeout(fh->wait,"}, {"instr_func": "cec_receive_msg", "instr_loc": 252, "instr_file": "drivers/media/cec/cec-api.c", "instr": "res = wait_event_interruptible_timeout(fh->wait,"}, {"instr_func": "cec_receive_msg", "instr_loc": 252, "instr_file": "drivers/media/cec/cec-api.c", "instr": "res = wait_event_interruptible_timeout(fh->wait,"}, {"instr_func": "_msecs_to_jiffies.202", "instr_loc": 310, "instr_file": "./include/linux/jiffies.h", "instr": "  store i32 %0, i32* %2, align 4"}, {"instr_func": "_msecs_to_jiffies.202", "instr_loc": 311, "instr_file": "./include/linux/jiffies.h", "instr": "  %3 = load i32, i32* %2, align 4, !dbg !54445"}], "at_file": "./include/linux/jiffies.h", "by": "IntegerOverflowDetector says:", "at_func": "_msecs_to_jiffies.202"}, "warn_no": 1},
{"warn_data": {"at_line": 311, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "  %6 = sub i64 %5, 1, !dbg !54447", "inst_trace": [{"instr_func": "cec_receive", "instr_loc": 271, "instr_file": "drivers/media/cec/cec-api.c", "instr": "{"}, {"instr_func": "cec_receive_msg", "instr_loc": 252, "instr_file": "drivers/media/cec/cec-api.c", "instr": "res = wait_event_interruptible_timeout(fh->wait,"}, {"instr_func": "cec_receive_msg", "instr_loc": 252, "instr_file": "drivers/media/cec/cec-api.c", "instr": "res = wait_event_interruptible_timeout(fh->wait,"}, {"instr_func": "cec_receive_msg", "instr_loc": 252, "instr_file": "drivers/media/cec/cec-api.c", "instr": "res = wait_event_interruptible_timeout(fh->wait,"}, {"instr_func": "cec_receive_msg", "instr_loc": 252, "instr_file": "drivers/media/cec/cec-api.c", "instr": "res = wait_event_interruptible_timeout(fh->wait,"}, {"instr_func": "_msecs_to_jiffies.202", "instr_loc": 310, "instr_file": "./include/linux/jiffies.h", "instr": "  store i32 %0, i32* %2, align 4"}, {"instr_func": "_msecs_to_jiffies.202", "instr_loc": 311, "instr_file": "./include/linux/jiffies.h", "instr": "  %3 = load i32, i32* %2, align 4, !dbg !54445"}, {"instr_func": "_msecs_to_jiffies.202", "instr_loc": 311, "instr_file": "./include/linux/jiffies.h", "instr": "  %5 = add i64 %4, 4, !dbg !54446"}], "at_file": "./include/linux/jiffies.h", "by": "IntegerOverflowDetector says:", "at_func": "_msecs_to_jiffies.202"}, "warn_no": 2}]},
{"num_warnings": 2,
"context":[{"lineno": -1, "instr": "  %4 = alloca i64, align 8"}, {"lineno": 507, "file": "drivers/media/cec/cec-api.c", "instr": "return cec_adap_s_log_addrs(adap, fh, block, parg);"}],
"warnings":[{"warn_data": {"at_line": 169, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "if (copy_from_user(&log_addrs, parg, sizeof(log_addrs)))", "inst_trace": [], "at_file": "drivers/media/cec/cec-api.c", "by": "TaintedSizeDetector says:", "at_func": "cec_adap_s_log_addrs"}, "warn_no": 1},
{"warn_data": {"at_line": 185, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "if (copy_to_user(parg, &log_addrs, sizeof(log_addrs)))", "inst_trace": [], "at_file": "drivers/media/cec/cec-api.c", "by": "TaintedSizeDetector says:", "at_func": "cec_adap_s_log_addrs"}, "warn_no": 2}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %4 = alloca i64, align 8"}, {"lineno": 510, "file": "drivers/media/cec/cec-api.c", "instr": "return cec_transmit(adap, fh, block, parg);"}, {"lineno": 209, "file": "drivers/media/cec/cec-api.c", "instr": "err = cec_transmit_msg_fh(adap, &msg, fh, block);"}],
"warnings":[{"warn_data": {"at_line": 763, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "memset(msg->msg + msg->len, 0, sizeof(msg->msg) - msg->len);", "inst_trace": [{"instr_func": "cec_transmit", "instr_loc": 198, "instr_file": "drivers/media/cec/cec-api.c", "instr": "if (copy_from_user(&msg, parg, sizeof(msg)))"}, {"instr_func": "cec_transmit_msg_fh", "instr_loc": 763, "instr_file": "drivers/media/cec/cec-adap.c", "instr": "memset(msg->msg + msg->len, 0, sizeof(msg->msg) - msg->len);"}], "at_file": "drivers/media/cec/cec-adap.c", "by": "IntegerOverflowDetector says:", "at_func": "cec_transmit_msg_fh"}, "warn_no": 1}]},
{"num_warnings": 13,
"context":[{"lineno": -1, "instr": "  %4 = alloca i64, align 8"}, {"lineno": 507, "file": "drivers/media/cec/cec-api.c", "instr": "return cec_adap_s_log_addrs(adap, fh, block, parg);"}, {"lineno": 178, "file": "drivers/media/cec/cec-api.c", "instr": "err = __cec_s_log_addrs(adap, &log_addrs, block);"}],
"warnings":[{"warn_data": {"at_line": 1705, "warn_str": "Loop is bounded by a tainted value.", "at": "if (log_addrs->log_addr_type[i] ==", "inst_trace": [{"instr_func": "cec_adap_s_log_addrs", "instr_loc": 169, "instr_file": "drivers/media/cec/cec-api.c", "instr": "if (copy_from_user(&log_addrs, parg, sizeof(log_addrs)))"}, {"instr_func": "__cec_s_log_addrs", "instr_loc": 1705, "instr_file": "drivers/media/cec/cec-adap.c", "instr": "if (log_addrs->log_addr_type[i] =="}, {"instr_func": "__cec_s_log_addrs", "instr_loc": 1705, "instr_file": "drivers/media/cec/cec-adap.c", "instr": "if (log_addrs->log_addr_type[i] =="}], "at_file": "drivers/media/cec/cec-adap.c", "by": "TaintedLoopBoundDetector says:", "at_func": "__cec_s_log_addrs"}, "warn_no": 1},
{"warn_data": {"at_line": 1704, "warn_str": "Loop is bounded by a tainted value.", "at": "for (i = 0; i < log_addrs->num_log_addrs; i++)", "inst_trace": [{"instr_func": "cec_adap_s_log_addrs", "instr_loc": 169, "instr_file": "drivers/media/cec/cec-api.c", "instr": "if (copy_from_user(&log_addrs, parg, sizeof(log_addrs)))"}, {"instr_func": "__cec_s_log_addrs", "instr_loc": 1704, "instr_file": "drivers/media/cec/cec-adap.c", "instr": "for (i = 0; i < log_addrs->num_log_addrs; i++)"}, {"instr_func": "__cec_s_log_addrs", "instr_loc": 1704, "instr_file": "drivers/media/cec/cec-adap.c", "instr": "for (i = 0; i < log_addrs->num_log_addrs; i++)"}], "at_file": "drivers/media/cec/cec-adap.c", "by": "TaintedLoopBoundDetector says:", "at_func": "__cec_s_log_addrs"}, "warn_no": 2},
{"warn_data": {"at_line": 1738, "warn_str": "Loop is bounded by a tainted value.", "at": "if (log_addrs->log_addr_type[i] > CEC_LOG_ADDR_TYPE_UNREGISTERED) {", "inst_trace": [{"instr_func": "cec_adap_s_log_addrs", "instr_loc": 169, "instr_file": "drivers/media/cec/cec-api.c", "instr": "if (copy_from_user(&log_addrs, parg, sizeof(log_addrs)))"}, {"instr_func": "__cec_s_log_addrs", "instr_loc": 1738, "instr_file": "drivers/media/cec/cec-adap.c", "instr": "if (log_addrs->log_addr_type[i] > CEC_LOG_ADDR_TYPE_UNREGISTERED) {"}, {"instr_func": "__cec_s_log_addrs", "instr_loc": 1738, "instr_file": "drivers/media/cec/cec-adap.c", "instr": "if (log_addrs->log_addr_type[i] > CEC_LOG_ADDR_TYPE_UNREGISTERED) {"}], "at_file": "drivers/media/cec/cec-adap.c", "by": "TaintedLoopBoundDetector says:", "at_func": "__cec_s_log_addrs"}, "warn_no": 3},
{"warn_data": {"at_line": 1734, "warn_str": "Loop is bounded by a tainted value.", "at": "if (log_addrs->primary_device_type[i] == 2) {", "inst_trace": [{"instr_func": "cec_adap_s_log_addrs", "instr_loc": 169, "instr_file": "drivers/media/cec/cec-api.c", "instr": "if (copy_from_user(&log_addrs, parg, sizeof(log_addrs)))"}, {"instr_func": "__cec_s_log_addrs", "instr_loc": 1734, "instr_file": "drivers/media/cec/cec-adap.c", "instr": "if (log_addrs->primary_device_type[i] == 2) {"}, {"instr_func": "__cec_s_log_addrs", "instr_loc": 1734, "instr_file": "drivers/media/cec/cec-adap.c", "instr": "if (log_addrs->primary_device_type[i] == 2) {"}], "at_file": "drivers/media/cec/cec-adap.c", "by": "TaintedLoopBoundDetector says:", "at_func": "__cec_s_log_addrs"}, "warn_no": 4},
{"warn_data": {"at_line": 1729, "warn_str": "Loop is bounded by a tainted value.", "at": "if (log_addrs->primary_device_type[i] >", "inst_trace": [{"instr_func": "cec_adap_s_log_addrs", "instr_loc": 169, "instr_file": "drivers/media/cec/cec-api.c", "instr": "if (copy_from_user(&log_addrs, parg, sizeof(log_addrs)))"}, {"instr_func": "__cec_s_log_addrs", "instr_loc": 1729, "instr_file": "drivers/media/cec/cec-adap.c", "instr": "if (log_addrs->primary_device_type[i] >"}, {"instr_func": "__cec_s_log_addrs", "instr_loc": 1729, "instr_file": "drivers/media/cec/cec-adap.c", "instr": "if (log_addrs->primary_device_type[i] >"}], "at_file": "drivers/media/cec/cec-adap.c", "by": "TaintedLoopBoundDetector says:", "at_func": "__cec_s_log_addrs"}, "warn_no": 5},
{"warn_data": {"at_line": 1718, "warn_str": "Loop is bounded by a tainted value.", "at": "if (type_mask & (1 << log_addrs->log_addr_type[i])) {", "inst_trace": [{"instr_func": "cec_adap_s_log_addrs", "instr_loc": 169, "instr_file": "drivers/media/cec/cec-api.c", "instr": "if (copy_from_user(&log_addrs, parg, sizeof(log_addrs)))"}, {"instr_func": "__cec_s_log_addrs", "instr_loc": 1722, "instr_file": "drivers/media/cec/cec-adap.c", "instr": "type_mask |= 1 << log_addrs->log_addr_type[i];"}, {"instr_func": "__cec_s_log_addrs", "instr_loc": 1722, "instr_file": "drivers/media/cec/cec-adap.c", "instr": "type_mask |= 1 << log_addrs->log_addr_type[i];"}, {"instr_func": "__cec_s_log_addrs", "instr_loc": 1722, "instr_file": "drivers/media/cec/cec-adap.c", "instr": "type_mask |= 1 << log_addrs->log_addr_type[i];"}, {"instr_func": "__cec_s_log_addrs", "instr_loc": 1722, "instr_file": "drivers/media/cec/cec-adap.c", "instr": "type_mask |= 1 << log_addrs->log_addr_type[i];"}, {"instr_func": "__cec_s_log_addrs", "instr_loc": 1722, "instr_file": "drivers/media/cec/cec-adap.c", "instr": "type_mask |= 1 << log_addrs->log_addr_type[i];"}, {"instr_func": "__cec_s_log_addrs", "instr_loc": 1718, "instr_file": "drivers/media/cec/cec-adap.c", "instr": "if (type_mask & (1 << log_addrs->log_addr_type[i])) {"}, {"instr_func": "__cec_s_log_addrs", "instr_loc": 1718, "instr_file": "drivers/media/cec/cec-adap.c", "instr": "if (type_mask & (1 << log_addrs->log_addr_type[i])) {"}, {"instr_func": "__cec_s_log_addrs", "instr_loc": 1718, "instr_file": "drivers/media/cec/cec-adap.c", "instr": "if (type_mask & (1 << log_addrs->log_addr_type[i])) {"}], "at_file": "drivers/media/cec/cec-adap.c", "by": "TaintedLoopBoundDetector says:", "at_func": "__cec_s_log_addrs"}, "warn_no": 6},
{"warn_data": {"at_line": 1711, "warn_str": "Loop is bounded by a tainted value.", "at": "for (i = 0; i < log_addrs->num_log_addrs; i++) {", "inst_trace": [{"instr_func": "cec_adap_s_log_addrs", "instr_loc": 169, "instr_file": "drivers/media/cec/cec-api.c", "instr": "if (copy_from_user(&log_addrs, parg, sizeof(log_addrs)))"}, {"instr_func": "__cec_s_log_addrs", "instr_loc": 1711, "instr_file": "drivers/media/cec/cec-adap.c", "instr": "for (i = 0; i < log_addrs->num_log_addrs; i++) {"}, {"instr_func": "__cec_s_log_addrs", "instr_loc": 1711, "instr_file": "drivers/media/cec/cec-adap.c", "instr": "for (i = 0; i < log_addrs->num_log_addrs; i++) {"}], "at_file": "drivers/media/cec/cec-adap.c", "by": "TaintedLoopBoundDetector says:", "at_func": "__cec_s_log_addrs"}, "warn_no": 7},
{"warn_data": {"at_line": 1723, "warn_str": "Loop is bounded by a tainted value.", "at": "if ((type_mask & (1 << CEC_LOG_ADDR_TYPE_RECORD)) &&", "inst_trace": [{"instr_func": "cec_adap_s_log_addrs", "instr_loc": 169, "instr_file": "drivers/media/cec/cec-api.c", "instr": "if (copy_from_user(&log_addrs, parg, sizeof(log_addrs)))"}, {"instr_func": "__cec_s_log_addrs", "instr_loc": 1722, "instr_file": "drivers/media/cec/cec-adap.c", "instr": "type_mask |= 1 << log_addrs->log_addr_type[i];"}, {"instr_func": "__cec_s_log_addrs", "instr_loc": 1722, "instr_file": "drivers/media/cec/cec-adap.c", "instr": "type_mask |= 1 << log_addrs->log_addr_type[i];"}, {"instr_func": "__cec_s_log_addrs", "instr_loc": 1722, "instr_file": "drivers/media/cec/cec-adap.c", "instr": "type_mask |= 1 << log_addrs->log_addr_type[i];"}, {"instr_func": "__cec_s_log_addrs", "instr_loc": 1722, "instr_file": "drivers/media/cec/cec-adap.c", "instr": "type_mask |= 1 << log_addrs->log_addr_type[i];"}, {"instr_func": "__cec_s_log_addrs", "instr_loc": 1722, "instr_file": "drivers/media/cec/cec-adap.c", "instr": "type_mask |= 1 << log_addrs->log_addr_type[i];"}, {"instr_func": "__cec_s_log_addrs", "instr_loc": 1724, "instr_file": "drivers/media/cec/cec-adap.c", "instr": "(type_mask & (1 << CEC_LOG_ADDR_TYPE_PLAYBACK))) {"}, {"instr_func": "__cec_s_log_addrs", "instr_loc": 1724, "instr_file": "drivers/media/cec/cec-adap.c", "instr": "(type_mask & (1 << CEC_LOG_ADDR_TYPE_PLAYBACK))) {"}, {"instr_func": "__cec_s_log_addrs", "instr_loc": 1724, "instr_file": "drivers/media/cec/cec-adap.c", "instr": "(type_mask & (1 << CEC_LOG_ADDR_TYPE_PLAYBACK))) {"}], "at_file": "drivers/media/cec/cec-adap.c", "by": "TaintedLoopBoundDetector says:", "at_func": "__cec_s_log_addrs"}, "warn_no": 8},
{"warn_data": {"at_line": 1777, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "for (i = log_addrs->num_log_addrs; i < CEC_MAX_LOG_ADDRS; i++) {", "inst_trace": [{"instr_func": "cec_adap_s_log_addrs", "instr_loc": 169, "instr_file": "drivers/media/cec/cec-api.c", "instr": "if (copy_from_user(&log_addrs, parg, sizeof(log_addrs)))"}, {"instr_func": "__cec_s_log_addrs", "instr_loc": 1777, "instr_file": "drivers/media/cec/cec-adap.c", "instr": "for (i = log_addrs->num_log_addrs; i < CEC_MAX_LOG_ADDRS; i++) {"}, {"instr_func": "__cec_s_log_addrs", "instr_loc": 1777, "instr_file": "drivers/media/cec/cec-adap.c", "instr": "for (i = log_addrs->num_log_addrs; i < CEC_MAX_LOG_ADDRS; i++) {"}, {"instr_func": "__cec_s_log_addrs", "instr_loc": 1777, "instr_file": "drivers/media/cec/cec-adap.c", "instr": "for (i = log_addrs->num_log_addrs; i < CEC_MAX_LOG_ADDRS; i++) {"}, {"instr_func": "__cec_s_log_addrs", "instr_loc": 1777, "instr_file": "drivers/media/cec/cec-adap.c", "instr": "for (i = log_addrs->num_log_addrs; i < CEC_MAX_LOG_ADDRS; i++) {"}], "at_file": "drivers/media/cec/cec-adap.c", "by": "IntegerOverflowDetector says:", "at_func": "__cec_s_log_addrs"}, "warn_no": 9},
{"warn_data": {"at_line": 1778, "warn_str": "Trying to write to a user pointer.", "at": "log_addrs->primary_device_type[i] = 0;", "inst_trace": [{"instr_func": "cec_adap_s_log_addrs", "instr_loc": 169, "instr_file": "drivers/media/cec/cec-api.c", "instr": "if (copy_from_user(&log_addrs, parg, sizeof(log_addrs)))"}, {"instr_func": "__cec_s_log_addrs", "instr_loc": 1777, "instr_file": "drivers/media/cec/cec-adap.c", "instr": "for (i = log_addrs->num_log_addrs; i < CEC_MAX_LOG_ADDRS; i++) {"}, {"instr_func": "__cec_s_log_addrs", "instr_loc": 1777, "instr_file": "drivers/media/cec/cec-adap.c", "instr": "for (i = log_addrs->num_log_addrs; i < CEC_MAX_LOG_ADDRS; i++) {"}, {"instr_func": "__cec_s_log_addrs", "instr_loc": 1777, "instr_file": "drivers/media/cec/cec-adap.c", "instr": "for (i = log_addrs->num_log_addrs; i < CEC_MAX_LOG_ADDRS; i++) {"}, {"instr_func": "__cec_s_log_addrs", "instr_loc": 1778, "instr_file": "drivers/media/cec/cec-adap.c", "instr": "log_addrs->primary_device_type[i] = 0;"}, {"instr_func": "__cec_s_log_addrs", "instr_loc": 1778, "instr_file": "drivers/media/cec/cec-adap.c", "instr": "log_addrs->primary_device_type[i] = 0;"}], "at_file": "drivers/media/cec/cec-adap.c", "by": "TaintedPointerDereferenceChecker says:", "at_func": "__cec_s_log_addrs"}, "warn_no": 10},
{"warn_data": {"at_line": 1779, "warn_str": "Trying to write to a user pointer.", "at": "log_addrs->log_addr_type[i] = 0;", "inst_trace": [{"instr_func": "cec_adap_s_log_addrs", "instr_loc": 169, "instr_file": "drivers/media/cec/cec-api.c", "instr": "if (copy_from_user(&log_addrs, parg, sizeof(log_addrs)))"}, {"instr_func": "__cec_s_log_addrs", "instr_loc": 1777, "instr_file": "drivers/media/cec/cec-adap.c", "instr": "for (i = log_addrs->num_log_addrs; i < CEC_MAX_LOG_ADDRS; i++) {"}, {"instr_func": "__cec_s_log_addrs", "instr_loc": 1777, "instr_file": "drivers/media/cec/cec-adap.c", "instr": "for (i = log_addrs->num_log_addrs; i < CEC_MAX_LOG_ADDRS; i++) {"}, {"instr_func": "__cec_s_log_addrs", "instr_loc": 1777, "instr_file": "drivers/media/cec/cec-adap.c", "instr": "for (i = log_addrs->num_log_addrs; i < CEC_MAX_LOG_ADDRS; i++) {"}, {"instr_func": "__cec_s_log_addrs", "instr_loc": 1779, "instr_file": "drivers/media/cec/cec-adap.c", "instr": "log_addrs->log_addr_type[i] = 0;"}, {"instr_func": "__cec_s_log_addrs", "instr_loc": 1779, "instr_file": "drivers/media/cec/cec-adap.c", "instr": "log_addrs->log_addr_type[i] = 0;"}], "at_file": "drivers/media/cec/cec-adap.c", "by": "TaintedPointerDereferenceChecker says:", "at_func": "__cec_s_log_addrs"}, "warn_no": 11},
{"warn_data": {"at_line": 1780, "warn_str": "Trying to write to a user pointer.", "at": "log_addrs->all_device_types[i] = 0;", "inst_trace": [{"instr_func": "cec_adap_s_log_addrs", "instr_loc": 169, "instr_file": "drivers/media/cec/cec-api.c", "instr": "if (copy_from_user(&log_addrs, parg, sizeof(log_addrs)))"}, {"instr_func": "__cec_s_log_addrs", "instr_loc": 1777, "instr_file": "drivers/media/cec/cec-adap.c", "instr": "for (i = log_addrs->num_log_addrs; i < CEC_MAX_LOG_ADDRS; i++) {"}, {"instr_func": "__cec_s_log_addrs", "instr_loc": 1777, "instr_file": "drivers/media/cec/cec-adap.c", "instr": "for (i = log_addrs->num_log_addrs; i < CEC_MAX_LOG_ADDRS; i++) {"}, {"instr_func": "__cec_s_log_addrs", "instr_loc": 1777, "instr_file": "drivers/media/cec/cec-adap.c", "instr": "for (i = log_addrs->num_log_addrs; i < CEC_MAX_LOG_ADDRS; i++) {"}, {"instr_func": "__cec_s_log_addrs", "instr_loc": 1780, "instr_file": "drivers/media/cec/cec-adap.c", "instr": "log_addrs->all_device_types[i] = 0;"}, {"instr_func": "__cec_s_log_addrs", "instr_loc": 1780, "instr_file": "drivers/media/cec/cec-adap.c", "instr": "log_addrs->all_device_types[i] = 0;"}], "at_file": "drivers/media/cec/cec-adap.c", "by": "TaintedPointerDereferenceChecker says:", "at_func": "__cec_s_log_addrs"}, "warn_no": 12},
{"warn_data": {"at_line": 1777, "warn_str": "Loop is bounded by a tainted value.", "at": "for (i = log_addrs->num_log_addrs; i < CEC_MAX_LOG_ADDRS; i++) {", "inst_trace": [{"instr_func": "cec_adap_s_log_addrs", "instr_loc": 169, "instr_file": "drivers/media/cec/cec-api.c", "instr": "if (copy_from_user(&log_addrs, parg, sizeof(log_addrs)))"}, {"instr_func": "__cec_s_log_addrs", "instr_loc": 1777, "instr_file": "drivers/media/cec/cec-adap.c", "instr": "for (i = log_addrs->num_log_addrs; i < CEC_MAX_LOG_ADDRS; i++) {"}, {"instr_func": "__cec_s_log_addrs", "instr_loc": 1777, "instr_file": "drivers/media/cec/cec-adap.c", "instr": "for (i = log_addrs->num_log_addrs; i < CEC_MAX_LOG_ADDRS; i++) {"}, {"instr_func": "__cec_s_log_addrs", "instr_loc": 1777, "instr_file": "drivers/media/cec/cec-adap.c", "instr": "for (i = log_addrs->num_log_addrs; i < CEC_MAX_LOG_ADDRS; i++) {"}, {"instr_func": "__cec_s_log_addrs", "instr_loc": 1777, "instr_file": "drivers/media/cec/cec-adap.c", "instr": "for (i = log_addrs->num_log_addrs; i < CEC_MAX_LOG_ADDRS; i++) {"}, {"instr_func": "__cec_s_log_addrs", "instr_loc": 1777, "instr_file": "drivers/media/cec/cec-adap.c", "instr": "for (i = log_addrs->num_log_addrs; i < CEC_MAX_LOG_ADDRS; i++) {"}], "at_file": "drivers/media/cec/cec-adap.c", "by": "TaintedLoopBoundDetector says:", "at_func": "__cec_s_log_addrs"}, "warn_no": 13}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %4 = alloca i64, align 8"}, {"lineno": 504, "file": "drivers/media/cec/cec-api.c", "instr": "return cec_adap_g_log_addrs(adap, parg);"}],
"warnings":[{"warn_data": {"at_line": 154, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "mutex_unlock(&adap->lock);", "inst_trace": [], "at_file": "drivers/media/cec/cec-api.c", "by": "TaintedSizeDetector says:", "at_func": "cec_adap_g_log_addrs"}, "warn_no": 1}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %4 = alloca i64, align 8"}, {"lineno": 501, "file": "drivers/media/cec/cec-api.c", "instr": "return cec_adap_s_phys_addr(adap, fh, block, parg);"}],
"warnings":[{"warn_data": {"at_line": 129, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "if (copy_from_user(&phys_addr, parg, sizeof(phys_addr)))", "inst_trace": [], "at_file": "drivers/media/cec/cec-api.c", "by": "TaintedSizeDetector says:", "at_func": "cec_adap_s_phys_addr"}, "warn_no": 1}]},
{"num_warnings": 2,
"context":[{"lineno": -1, "instr": "  %4 = alloca i64, align 8"}, {"lineno": 501, "file": "drivers/media/cec/cec-api.c", "instr": "return cec_adap_s_phys_addr(adap, fh, block, parg);"}, {"lineno": 132, "file": "drivers/media/cec/cec-api.c", "instr": "err = cec_validate_phys_addr(phys_addr);"}],
"warnings":[{"warn_data": {"at_line": 111, "warn_str": "Loop is bounded by a tainted value.", "at": "if (phys_addr & (0xf << i))", "inst_trace": [{"instr_func": "cec_adap_s_phys_addr", "instr_loc": 129, "instr_file": "drivers/media/cec/cec-api.c", "instr": "if (copy_from_user(&phys_addr, parg, sizeof(phys_addr)))"}, {"instr_func": "cec_adap_s_phys_addr", "instr_loc": 132, "instr_file": "drivers/media/cec/cec-api.c", "instr": "err = cec_validate_phys_addr(phys_addr);"}, {"instr_func": "cec_adap_s_phys_addr", "instr_loc": 132, "instr_file": "drivers/media/cec/cec-api.c", "instr": "err = cec_validate_phys_addr(phys_addr);"}, {"instr_func": "cec_validate_phys_addr", "instr_loc": 105, "instr_file": "drivers/media/cec/cec-api.c", "instr": "{"}, {"instr_func": "cec_validate_phys_addr", "instr_loc": 111, "instr_file": "drivers/media/cec/cec-api.c", "instr": "if (phys_addr & (0xf << i))"}, {"instr_func": "cec_validate_phys_addr", "instr_loc": 111, "instr_file": "drivers/media/cec/cec-api.c", "instr": "if (phys_addr & (0xf << i))"}, {"instr_func": "cec_validate_phys_addr", "instr_loc": 111, "instr_file": "drivers/media/cec/cec-api.c", "instr": "if (phys_addr & (0xf << i))"}], "at_file": "drivers/media/cec/cec-api.c", "by": "TaintedLoopBoundDetector says:", "at_func": "cec_validate_phys_addr"}, "warn_no": 1},
{"warn_data": {"at_line": 116, "warn_str": "Loop is bounded by a tainted value.", "at": "if ((phys_addr & (0xf << i)) == 0)", "inst_trace": [{"instr_func": "cec_adap_s_phys_addr", "instr_loc": 129, "instr_file": "drivers/media/cec/cec-api.c", "instr": "if (copy_from_user(&phys_addr, parg, sizeof(phys_addr)))"}, {"instr_func": "cec_adap_s_phys_addr", "instr_loc": 132, "instr_file": "drivers/media/cec/cec-api.c", "instr": "err = cec_validate_phys_addr(phys_addr);"}, {"instr_func": "cec_adap_s_phys_addr", "instr_loc": 132, "instr_file": "drivers/media/cec/cec-api.c", "instr": "err = cec_validate_phys_addr(phys_addr);"}, {"instr_func": "cec_validate_phys_addr", "instr_loc": 105, "instr_file": "drivers/media/cec/cec-api.c", "instr": "{"}, {"instr_func": "cec_validate_phys_addr", "instr_loc": 116, "instr_file": "drivers/media/cec/cec-api.c", "instr": "if ((phys_addr & (0xf << i)) == 0)"}, {"instr_func": "cec_validate_phys_addr", "instr_loc": 116, "instr_file": "drivers/media/cec/cec-api.c", "instr": "if ((phys_addr & (0xf << i)) == 0)"}, {"instr_func": "cec_validate_phys_addr", "instr_loc": 116, "instr_file": "drivers/media/cec/cec-api.c", "instr": "if ((phys_addr & (0xf << i)) == 0)"}], "at_file": "drivers/media/cec/cec-api.c", "by": "TaintedLoopBoundDetector says:", "at_func": "cec_validate_phys_addr"}, "warn_no": 2}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %4 = alloca i64, align 8"}, {"lineno": 498, "file": "drivers/media/cec/cec-api.c", "instr": "return cec_adap_g_phys_addr(adap, parg);"}],
"warnings":[{"warn_data": {"at_line": 93, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "{", "inst_trace": [], "at_file": "drivers/media/cec/cec-api.c", "by": "TaintedSizeDetector says:", "at_func": "cec_adap_g_phys_addr"}, "warn_no": 1}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %4 = alloca i64, align 8"}, {"lineno": 501, "file": "drivers/media/cec/cec-api.c", "instr": "return cec_adap_s_phys_addr(adap, fh, block, parg);"}, {"lineno": 139, "file": "drivers/media/cec/cec-api.c", "instr": "__cec_s_phys_addr(adap, phys_addr, block);"}, {"lineno": 1586, "file": "drivers/media/cec/cec-adap.c", "instr": "cec_post_state_event(adap);"}, {"lineno": 322, "file": "drivers/media/cec/cec-adap.c", "instr": "cec_queue_event(adap, &ev);"}, {"lineno": 166, "file": "drivers/media/cec/cec-adap.c", "instr": "cec_queue_event_fh(fh, ev, ts);"}],
"warnings":[{"warn_data": {"at_line": 122, "warn_str": "Potential overflow, using tainted value in binary operation.", "at": "entry->ev.lost_msgs.lost_msgs +=", "inst_trace": [{"instr_func": "cec_adap_s_phys_addr", "instr_loc": 129, "instr_file": "drivers/media/cec/cec-api.c", "instr": "if (copy_from_user(&phys_addr, parg, sizeof(phys_addr)))"}, {"instr_func": "cec_adap_s_phys_addr", "instr_loc": 139, "instr_file": "drivers/media/cec/cec-api.c", "instr": "__cec_s_phys_addr(adap, phys_addr, block);"}, {"instr_func": "cec_adap_s_phys_addr", "instr_loc": 139, "instr_file": "drivers/media/cec/cec-api.c", "instr": "__cec_s_phys_addr(adap, phys_addr, block);"}, {"instr_func": "__cec_s_phys_addr", "instr_loc": 1539, "instr_file": "drivers/media/cec/cec-adap.c", "instr": "{"}, {"instr_func": "__cec_s_phys_addr", "instr_loc": 1585, "instr_file": "drivers/media/cec/cec-adap.c", "instr": "adap->phys_addr = phys_addr;"}, {"instr_func": "__cec_s_phys_addr", "instr_loc": 1585, "instr_file": "drivers/media/cec/cec-adap.c", "instr": "adap->phys_addr = phys_addr;"}, {"instr_func": "cec_post_state_event", "instr_loc": 320, "instr_file": "drivers/media/cec/cec-adap.c", "instr": "ev.state_change.phys_addr = adap->phys_addr;"}, {"instr_func": "cec_post_state_event", "instr_loc": 320, "instr_file": "drivers/media/cec/cec-adap.c", "instr": "ev.state_change.phys_addr = adap->phys_addr;"}, {"instr_func": "cec_queue_event_fh", "instr_loc": 123, "instr_file": "drivers/media/cec/cec-adap.c", "instr": "new_ev->lost_msgs.lost_msgs;"}], "at_file": "drivers/media/cec/cec-adap.c", "by": "IntegerOverflowDetector says:", "at_func": "cec_queue_event_fh"}, "warn_no": 1}]},
{"num_warnings": 1,
"context":[{"lineno": -1, "instr": "  %4 = alloca i64, align 8"}, {"lineno": 495, "file": "drivers/media/cec/cec-api.c", "instr": "return cec_adap_g_caps(adap, parg);"}],
"warnings":[{"warn_data": {"at_line": 77, "warn_str": "Non-constant size used in copy_to(or from)_user function.", "at": "{", "inst_trace": [], "at_file": "drivers/media/cec/cec-api.c", "by": "TaintedSizeDetector says:", "at_func": "cec_adap_g_caps"}, "warn_no": 1}]}]}